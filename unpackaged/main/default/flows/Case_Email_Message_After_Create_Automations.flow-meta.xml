<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Auto_Respond_on_Closed_Message</name>
        <label>Auto Respond on Closed Message</label>
        <locationX>1018</locationX>
        <locationY>755</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Auto_Reply_on_Closed_Case</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>ToAddresses</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>no-reply@retool.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>CaseClosedSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CaseClosedAutoReplyBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Get_Case.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>addThreadingTokenToBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ccRecipientAddressList</name>
            <value>
                <elementReference>ToAddresses</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Trigger_Contact_Creation</name>
        <label>Trigger Contact Creation</label>
        <locationX>864</locationX>
        <locationY>539</locationY>
        <actionName>CaseContactUpdater</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_Status_Changes</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>caseId</name>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ccEmails</name>
            <value>
                <elementReference>$Record.CcAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>fromEmail</name>
            <value>
                <elementReference>$Record.FromAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>toEmails</name>
            <value>
                <elementReference>$Record.ToAddress</elementReference>
            </value>
        </inputParameters>
        <nameSegment>CaseContactUpdater</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Assign_Case_to_Open</name>
        <label>Assign Case to Open</label>
        <locationX>446</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Case_Timestamp_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Last_Customer_Reply_At</name>
        <label>Assign Last Customer Reply At</label>
        <locationX>600</locationX>
        <locationY>1355</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.Last_Customer_Reply_At__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.MessageDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Last_Retool_Reply_At</name>
        <label>Assign Last Retool Reply At</label>
        <locationX>864</locationX>
        <locationY>1355</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.Last_Retool_Reply_At__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.MessageDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Auto_Reply_on_Closed_Case</name>
        <label>Auto Reply on Closed Case</label>
        <locationX>1018</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.Reply_to_Closed_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Email sent</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Case_Timestamp_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Case_Owner_to_CSR_Queue</name>
        <label>Case Owner to CSR Queue</label>
        <locationX>578</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>00GQo000004fjIDMAY</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Case_to_Open</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Case_Owner_to_Enterprise_Queue</name>
        <label>Case Owner to Enterprise Queue</label>
        <locationX>314</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>00GQo000004fj25MAA</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Case_to_Open</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Case_Owner_to_Premium_Queue</name>
        <label>Case Owner to Premium Queue</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>00GQo000004fivdMAA</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Case_to_Open</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_is_Suppress_Email_Automation</name>
        <label>Case is Suppress Email Automation</label>
        <locationX>325</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Trigger_Contact_Creation</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Case Automations Allowed</defaultConnectorLabel>
        <rules>
            <name>Case_is_Suppress_Automations</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.Suppress_Automations__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Case is Suppress Automations?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Case_Timestamp_Check</name>
        <label>Case Timestamp Check</label>
        <locationX>864</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>Update_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Change Necessary</defaultConnectorLabel>
        <rules>
            <name>Inbound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.Last_Customer_Reply_At__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>$Record.MessageDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Last_Customer_Reply_At</targetReference>
            </connector>
            <label>Inbound</label>
        </rules>
        <rules>
            <name>Outbound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.Last_Retool_Reply_At__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>$Record.MessageDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Last_Retool_Reply_At</targetReference>
            </connector>
            <label>Outbound</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Status_Changes</name>
        <label>Check Status Changes</label>
        <locationX>864</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Case_Timestamp_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Change Necessary</defaultConnectorLabel>
        <rules>
            <name>Inbound_Message_while_Waiting_Hold_Solved</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Waiting for Customer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Solved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Need_to_Reassign</targetReference>
            </connector>
            <label>Inbound Message while Waiting/Hold/Solved</label>
        </rules>
        <rules>
            <name>Inbound_NB_Messages_while_Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>012Qo000008NXwMIAW</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Auto_Respond_on_Closed_Message</targetReference>
            </connector>
            <label>Inbound Non-Billing Messages while Closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Need_to_Reassign</name>
        <label>Need to Reassign?</label>
        <locationX>446</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Assign_Case_to_Open</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Reassign Needed</defaultConnectorLabel>
        <rules>
            <name>Premium_and_Reassign</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Support_Assignment__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not Active and Reassign</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Support_Tier_Stamped__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1; Custom</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Support_Tier_Stamped__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2; Premium</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Owner_to_Premium_Queue</targetReference>
            </connector>
            <label>Premium and Reassign</label>
        </rules>
        <rules>
            <name>Enterprise_and_Reassign</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Support_Assignment__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not Active and Reassign</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Support_Tier_Stamped__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3; Committed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Owner_to_Enterprise_Queue</targetReference>
            </connector>
            <label>Enterprise and Reassign</label>
        </rules>
        <rules>
            <name>CSR_and_Reassign</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Support_Assignment__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not Active and Reassign</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Support_Tier_Stamped__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>4; Self Service</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Owner_to_CSR_Queue</targetReference>
            </connector>
            <label>CSR and Reassign</label>
        </rules>
    </decisions>
    <description>Skipping closed auto-reply on billing tickets</description>
    <environments>Default</environments>
    <formulas>
        <name>CaseClosedSubject</name>
        <dataType>String</dataType>
        <expression>&quot;Ticket #&quot;&amp;{!Get_Case.CaseNumber}&amp;&quot; has been closed&quot;</expression>
    </formulas>
    <formulas>
        <description>substituting semi colons for commas</description>
        <name>CCAddresses</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!$Record.CcAddress}, &quot;; &quot;, &quot;,&quot;), &quot;;&quot;, &quot;,&quot;)</expression>
    </formulas>
    <formulas>
        <description>substituting semi colons for commas</description>
        <name>ToAddresses</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!$Record.FromAddress}, &quot;; &quot;, &quot;,&quot;), &quot;;&quot;, &quot;,&quot;)</expression>
    </formulas>
    <interviewLabel>Case Email Message - After Create Automations {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Email Message - After Create Automations</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>325</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_is_Suppress_Email_Automation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>864</locationX>
        <locationY>1547</locationY>
        <inputReference>Get_Case</inputReference>
    </recordUpdates>
    <start>
        <locationX>199</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>500</stringValue>
            </value>
        </filters>
        <filters>
            <field>FromAddress</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>no-reply@retool.com</stringValue>
            </value>
        </filters>
        <filters>
            <field>Suppress_Automations__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>CaseClosedAutoReplyBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;Thank you for reaching out to us again, {!Get_Case.Contact.FirstName}!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;The support ticket you have responded to has been closed. We hope your issue has been fully resolved. If you have any further questions or need additional assistance, please submit a new request from our &lt;/span&gt;&lt;a href=&quot;https://help.retool.com/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;Help portal&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;We&#39;re looking forward to helping with your new request!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;Sincerely,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;The Retool Support Team&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
</Flow>
