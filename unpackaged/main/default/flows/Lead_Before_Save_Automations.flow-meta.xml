<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>Assign_Company_Name</name>
        <label>Assign Company Name</label>
        <locationX>2039</locationX>
        <locationY>960</locationY>
        <assignmentItems>
            <assignToReference>$Record.Company</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>email_domain</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Country_Definition</name>
        <label>Assign Country Definition</label>
        <locationX>1019</locationX>
        <locationY>102</locationY>
        <assignmentItems>
            <assignToReference>$Record.Country_Definition__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition.Country_Definition__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Region__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition.Country_Definition__r.Region__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Subregion__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition.Country_Definition__r.Subregion__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Intermediate_Region__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition.Country_Definition__r.Intermediate_Region__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Territory__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition.Country_Definition__r.Territory__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Queue_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Country_Definition_0</name>
        <label>Assign Country Definition</label>
        <locationX>929</locationX>
        <locationY>239</locationY>
        <assignmentItems>
            <assignToReference>$Record.Country_Definition__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition_0.Country_Definition__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Region__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition_0.Country_Definition__r.Region__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Subregion__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition_0.Country_Definition__r.Subregion__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Intermediate_Region__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition_0.Country_Definition__r.Intermediate_Region__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Territory__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Country_Definition_0.Country_Definition__r.Territory__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Queue_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Website</name>
        <label>Assign Website</label>
        <locationX>2213</locationX>
        <locationY>717</locationY>
        <assignmentItems>
            <assignToReference>$Record.Website</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>email_domain</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_Company_Name</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Clear_email_domain_type</name>
        <label>Clear email domain type</label>
        <locationX>1762</locationX>
        <locationY>497</locationY>
        <assignmentItems>
            <assignToReference>$Record.Email_Domain_Type__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Allow Enrichment</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_website</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Clear_email_domain_type_0</name>
        <label>Clear email domain type</label>
        <locationX>2539</locationX>
        <locationY>332</locationY>
        <assignmentItems>
            <assignToReference>$Record.Email_Domain_Type__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Allow Enrichment</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_website</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_defaults</name>
        <label>Set defaults</label>
        <locationX>465</locationX>
        <locationY>491</locationY>
        <assignmentItems>
            <assignToReference>$Record.Trigger__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_Country_Value</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Email_Domain_Type_and_Matched_Account</name>
        <label>Set Email Domain Type and Matched Account</label>
        <locationX>2811</locationX>
        <locationY>101</locationY>
        <assignmentItems>
            <assignToReference>$Record.Email_Domain_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_domain_map.Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Matched_Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_domain_map.Matched_Account__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Block Enrichment</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Matched_Contact</name>
        <label>Set Matched Contact</label>
        <locationX>1961</locationX>
        <locationY>348</locationY>
        <assignmentItems>
            <assignToReference>$Record.Matched_Contact__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Contact.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Block Enrichment</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Matched_Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Contact.AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Enrichment_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Owner_to_Pool</name>
        <label>Set Owner to Pool</label>
        <locationX>1252</locationX>
        <locationY>284</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>0055A00000BExg9QAD</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Email_is</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_domain_map</name>
        <label>Check domain map?</label>
        <locationX>1953</locationX>
        <locationY>194</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email_Domain_Type__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_domain_map</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Email_is</name>
        <label>Email is</label>
        <locationX>1532</locationX>
        <locationY>500</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Clear_email_domain_type</targetReference>
            </connector>
            <label>Blank</label>
        </rules>
        <rules>
            <name>Not_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contact</targetReference>
            </connector>
            <label>Not Blank</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Contact</name>
        <label>Found Contact?</label>
        <locationX>1671</locationX>
        <locationY>190</locationY>
        <defaultConnector>
            <targetReference>Check_domain_map</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Match_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Contact.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Matched_Contact</targetReference>
            </connector>
            <label>Match Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_domain_map</name>
        <label>Found domain map?</label>
        <locationX>2358</locationX>
        <locationY>109</locationY>
        <defaultConnector>
            <targetReference>Clear_email_domain_type_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>yes_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_domain_map</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Email_Domain_Type_and_Matched_Account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Company_Name</name>
        <label>Has Company Name?</label>
        <locationX>2032</locationX>
        <locationY>719</locationY>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No_Company_Name</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Company</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Company</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>[not provided]</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Company_Name</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Country_Value</name>
        <label>Has Country Value?</label>
        <locationX>725</locationX>
        <locationY>493</locationY>
        <defaultConnector>
            <targetReference>Queue_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Country Not Populated</defaultConnectorLabel>
        <rules>
            <name>Country_Form_Populated</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Country__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Country_Definition</targetReference>
            </connector>
            <label>Country (Form) Populated</label>
        </rules>
        <rules>
            <name>Country_Populated_Missing_Form_Value</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Country_Definition_0</targetReference>
            </connector>
            <label>Country Populated (Missing Form Value)</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_website</name>
        <label>Has website?</label>
        <locationX>2205</locationX>
        <locationY>506</locationY>
        <defaultConnector>
            <targetReference>Has_Company_Name</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No_Website</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Website</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email_Domain_Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Public</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Website</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Queue_User</name>
        <label>Queue User?</label>
        <locationX>1000</locationX>
        <locationY>492</locationY>
        <defaultConnector>
            <targetReference>Email_is</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Queue</defaultConnectorLabel>
        <rules>
            <name>Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Owner_to_Pool</targetReference>
            </connector>
            <label>Queue</label>
        </rules>
    </decisions>
    <description>Adding Company name check that populates the Company name using the email domain if missing or equal to [not provided]</description>
    <environments>Default</environments>
    <formulas>
        <name>email_domain</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!$Record.Email}, LEFT({!$Record.Email}, FIND(&quot;@&quot;, {!$Record.Email})), NULL)</expression>
    </formulas>
    <formulas>
        <name>Today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Lead - Before Save Automations {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Lead - Before Save Automations</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact</name>
        <label>Get Contact</label>
        <locationX>1540</locationX>
        <locationY>188</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <sortField>LastActivityDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Country_Definition</name>
        <label>Get Country Definition</label>
        <locationX>723</locationX>
        <locationY>102</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Country_Definition</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Country__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Country_Map__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Country_Definition__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Country_Definition_0</name>
        <label>Get Country Definition</label>
        <locationX>810</locationX>
        <locationY>239</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Country_Definition_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Country_Map__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Country_Definition__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_domain_map</name>
        <label>Get domain map</label>
        <locationX>2131</locationX>
        <locationY>107</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_domain_map</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>email_domain</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Domain_Map__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>421</locationY>
        <connector>
            <targetReference>Set_defaults</targetReference>
        </connector>
        <object>Lead</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
