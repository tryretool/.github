<apex:page controller="LeanData.MatchedViewSettingsController">
    <apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'jquery-3.7.0.min.js')}" />
    <style>
        h2 {
          font-size: 15px;
        }
        th {
          text-align: left;
          font-size: 0.95em;
        }

        .field_list {
          border: 1px solid #dedede;
          height: 300px;
          width: 250px;
          overflow: scroll;
          padding: 4px;
        }

        .markable {
          padding: 1px 2px;
        }

        .markable:hover {
          cursor: pointer;
          background: #eee;
        }

        .marked {
          border: 1px dotted #a3bae9;
          padding: 2px;
          background: #DFE8F6;
        }

        .action {
          text-align: center;
          cursor: pointer;
          margin: 5px;
        }

        .action div {
          font-size: 0.8em;
          font-weight: bold;
          margin-bottom: 2px;
        }
        .buttons td {
          text-align: center;
          padding-top: 10px;
          padding-right: 5px;
        }

        button {
          cursor: pointer;
        }

        div#result {
          background-color: #d9edf7;
          border-color: #bce8f1;
          color: #31708f;
          padding: 10px;
          border-radius: 4px;
          width: 600px;
          opacity: 0;
        }
    </style>
    <br />
    <apex:outputPanel rendered="{! !hasPermission}">You do not have the correct Permision Set to see this page. Please contact your Salesforce administrator.</apex:outputPanel>
   <apex:outputPanel rendered="{! hasPermission}">

   <div class="ld-header-wrapper ld-header-wrapper-margins">
       <div class="lds-header ld-header-bottom-margin">Layout</div>
       <div class="lds-subheader ld-header-bottom-margin">LeanData Settings - <span class="viewTypeName"></span></div>
   </div>

    <!-- <h2>LeanData Settings - <span class="viewTypeName"></span></h2> -->


    <div id='result'>
      Success!
    </div>
    <p>Select fields to display on the <span class="viewTypeName"></span> table. You can also re-order the selected fields.</p>
    <table>
      <tr>
        <th>
          Available Fields
        </th>
        <th rowspan='2'>
          <div>
            <div id='add_action' class='action'>
              <div>Add</div>
              <img src="/img/ple/directionals/right.gif"/>
            </div>
            <div id='remove_action' class='action'>
              <img src="/img/ple/directionals/left.gif"/>
              <div>Remove</div>
            </div>
          </div>
        </th>
        <th>
          Selected Fields
        </th>
        <th rowspan='2'>
          <div>
            <div id='up_action' class='action'>
              <div>Up</div>
              <img src="/img/ple/directionals/up.gif"/>
            </div>
            <div id='down_action' class='action'>
              <img src="/img/ple/directionals/down.gif"/>
              <div>Down</div>
            </div>
          </div>
        </th>
      </tr>
      <tr>
        <td>
          <div id='available_fields' class='field_list'>
          <apex:repeat value="{! availableCols}" var="col">
              <div class='markable' id='{! col}'> {! availableFieldLabelMap[col]} </div>
          </apex:repeat>
          </div>
        </td>
        <td>
          <div id='selected_fields' class='field_list'>
          <apex:repeat value="{! selectedCols}" var="col">
              <div class='markable' id='{! col}'> {! selectedFieldLabelMap[col]} </div>
          </apex:repeat>
          </div>
        </td>
      </tr>
      <tr class='buttons'>
        <td colspan='4'>
            <div onclick='compileAndSavePreferences()'>Save</div>
            <div onclick='unmarkAll()'>Remove Highlight</div>
            <div onclick='revertToDefaults()'>Revert to Defaults</div>
        </td>
      </tr>
      <tr class='result'>
        <td colspan='4'>
        </td>
      </tr>
    </table>
    <apex:form >
        <apex:actionFunction action="{! savePreferences}" name="savePreferences" oncomplete="blinkDiv($nodes.result, '{!savingStatus}');">
            <apex:param name="columnsJSON" value=""/>
        </apex:actionFunction>
        <apex:actionFunction action="{! revertToDefaults}" name="revertToDefaults"/>
    </apex:form>
    </apex:outputPanel>
    <script>
        var typeName;
        if ({! (viewType == 'A2B'|| viewType == 'A2BSummary' || viewType == 'LeadConvert')})
          typeName = 'Related Leads';
        else 
          typeName = '{! JSENCODE(viewType)}' + 's';

        $(".viewTypeName").html(typeName);

        $nodes = {
            available: $('#available_fields'),
            selected: $('#selected_fields'),
            result: $('#result')
        }
        blinkDiv = function($div, text) {
            $div.html(text);
            $div.animate({opacity: 1}, 400).animate({opacity: 0}, 1000)
        }
        unmarkAll = function() {
            $('.marked').removeClass('marked');
        }
        compileAndSavePreferences = function() {
            var i, fields = [], field_divs = $nodes.selected.children('.markable');
            for (i=0; i<field_divs.length; i++) {
                fields.push(field_divs[i].id);
            }
            savePreferences(JSON.stringify(fields));
        }
        getFields = function($div) {
          var i, fields = [], field_divs = $div.children('.markable');
          for (i=0; i<field_divs.length; i++) {
            fields.push(field_divs[i].id);
          }
          return fields;
        }
        sortFields = function($div) {
          var i, fields = getFields($div).sort();
          for (i=0; i<fields.length; i++) {
            $div.append($('#'+fields[i]));
          }
        };

        $(document).ready(function(){
            $('.markable').click(function() {
              $(this).toggleClass('marked');
            });

            $('#add_action').click(function() {
              $nodes.selected.children('.marked').removeClass('marked');
              $nodes.selected.append($nodes.available.children('.marked'));
            });            
            
            $('#remove_action').click(function() {
              $nodes.available.children('.marked').removeClass('marked');

    
              $nodes.available.append($nodes.selected.children('.marked'));
              sortFields($nodes.available);
            });
            
            $('#up_action').click(function(){
              var i, prevField, markedField, markedFields = $nodes.selected.children('.marked'), len = markedFields.length;
              for ( i=0; i<len; i++) {
                markedField = $(markedFields[i]);
                prevField = markedField.prev();
                if (prevField.length === 1 && !prevField.hasClass('marked')) {
                  markedField.insertBefore(prevField);
                }
              }
            });
            
            $('#down_action').click(function(){
              var i, nextField, markedField, markedFields = $nodes.selected.children('.marked'), len = markedFields.length;
              for ( i=0; i<len; i++) {
                markedField = $(markedFields[i]);
                nextField = markedField.next();
                if (nextField.length === 1 && !nextField.hasClass('marked')) {
                  markedField.insertAfter(nextField);
                }
              }
            });
        });
    </script>
</apex:page>