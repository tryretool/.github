<apex:page standardController="Contact" showHeader="false" extensions="LeanData.OnDemandView,LeanData.InLineEditable,LeanData.CheckOnDemandAllowed" action="{!initializeIsAllowed}">
    <c:accessCheck isAllowed="{!isAllowed}">
    <apex:stylesheet value="{!URLFOR($Resource.LeanData__angela_app, 'styles.css')}"/> 
    <c:style />

    <style>
        #invalidNotice {
            height:186px;
            display:none;
            text-align:center;
            color:#4D4D4D;
            font-size: 16px;
            font-weight: regular;
            background-image: url("{!URLFOR($Resource.DashboardImages,'LD-logo_watermark_2x.png')}");
            background-repeat: no-repeat;
            background-position: center;
            background-size: 185px;
        }

        #securityExceptionText {
            text-align: left;
        }

        #invalidNoticeInnerContainer {
            height: 186px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
    </style>

    <div id="invalidNotice">
        <div id="invalidNoticeInnerContainer">
            <div id="invalidNoticeErrorText"></div>
            <div id="securityExceptionText"></div>
        </div>
    </div>

    <div class="view">
        <div class="pageLoading">
            <c:loading />
        </div>

        <div class="settingMessage" style="display: none;">
            <p style="font-size:16px; color:Red; padding:15px">All LeanData View sections are off.  Please have a Salesforce Admin apply View settings to User Profiles under</p>
            <a style="font-size:16px; color:Red; padding-left:15px" href="/apex/dashboard#view/general" target="_blank">LeanData --> Settings --> View --> Section Settings</a>
        </div>

        <div class="timeoutMessage" style="display:none;">
            <p style="font-size:16px; color:Red; padding:15px">There was a problem loading your Lead-to-Account View, please refresh the page to try again.</p>
        </div>

        <div class="pageBody" >
            <div class="duplicatesTable section-wrapper">
                <div class="wrapper">
                    <div class="left" style="width:65%;" >
                        <span class="table_title"><img class="leandata_logo" src="{!URLFOR($Resource.DashboardImages,'LD-logo_2x.png')}"/>&nbsp;&nbsp;&nbsp;<h3>Duplicate Leads and Contacts</h3></span>
                        <span class="dupesCountContainer"><span>|</span> <a href="#LINKTOA2BMUSTBEGENERATEDBACKENDANDSERVEDUP" target="_blank" class="customTarget action_link duplicatesContactViewLink ld-green">See All (Leads:<span class="leadsCount"></span> | Contacts: <span class="contactsCount"/>) Â»</a></span>
                    </div>
                    <div class="right setting_panel">
                        <span><a href="#RELATEDLEADSSETTINGSLINKS" target="_blank" class="customTarget action_link dupeLeadSettingsLink ld-green">Lead Settings</a>
                            <span> | </span>
                            <a href="#CONTACTSETTINGSLINKS" target="_blank" class="customTarget action_link dupeContactSettingsLink ld-green">Contact Settings</a>
                        </span>
                    </div>
                </div>
                <div class="dupesHeightDiv tableWrapper outer-panel" >
                    <div class="inner-panel" >
                        <div class="scroll-panel">
                            <table class="list content_table_lead" cellspacing='0' cellpadding='0' style="table-layout:fixed;" >
                                <thead class="duplicatesLeadTableHead">
                                </thead>
                                <tbody class="duplicatesLeadTableBody">
                                </tbody>
                            </table>
                            <table class="list content_table_contact" cellspacing='0' cellpadding='0' style="table-layout:fixed;margin-top:10px;">
                                <thead class="duplicatesContactTableHead">
                                </thead>
                                <tbody class="duplicatesContactTableBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <c:setTargetValue targetValue="{!targetValue}"/>
    <c:matchedViewAssets view_type="Contact" with_dupes="false" with_l2a_matches="false"/>
    <script>
        Visualforce.remoting.timeout = 120000; // Set timeout at page level
        j$ = jQuery.noConflict();
        // set viewJSResource variables 
        objId = '{! JSENCODE((objId))}';
        pageType = "Contact";
        startTime = Date.now();
        hasAccess = {!hasAccess};
        j$('document').ready(function(){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.OnDemandView.getNewViewObject}',
                '{! JSENCODE((objId))}', 'Contact', null,
                function(result, event) {
                    if (event.statusCode !== 200)  {
                        j$('.timeoutMessage p').text(event.message);
                    }
                    if (!event.status) {
                        let errorMessage = event.message;
                        j$('.view').toggle();
                        j$('#invalidNotice').toggle();
                        if(!hasAccess) {
                            errorMessage = 'You do not have access to the LeanData View.<br><br> \
                                Please ask your LeanData Admin or System Admin for the LeanData View Permission Set to view potential duplicates and account matches.';
                            }
                        else if(errorMessage.includes('does not have permission to Read fields:')) {
                            let exceptionError = errorMessage.substring(errorMessage.indexOf('{')+1, errorMessage.length-1);
                            let exceptionList = exceptionError.split('}, ');
                            exceptionError = '';
                            errorMessage = 'To use the LeanData View, you need Read permission for these fields:<br><ul>';
                            
                            exceptionList[0] = exceptionList[0] + '}';
                            exceptionList.forEach((objMap) => {
                              let objType = objMap.substring(0, objMap.indexOf('='));
                              let fieldList = objMap.substring(objMap.indexOf('{')+1, objMap.indexOf('}')).split(', ');
                              fieldList.forEach((field) => {
                                exceptionError += `<li>${objType}: ${field}</li>`;
                              });
                            });
                            exceptionError += `</ul>`;
                            j$('#securityExceptionText').html(exceptionError);
                        }
                        j$('#invalidNoticeErrorText').html(errorMessage);
                        return;
                    }
                    buildView(result);
                })
        });
        
        // check for any critical errors on load and set feature param
        Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.CheckOnDemandAllowed.setFeatureParamForCriticalErrors}', function(result, event) { }
        );
    </script>
    </c:accessCheck>

    <script>
        // intialize();
        function buildView(viewObject) {
            if(viewObject == null){
                j$('.pageLoading').hide();
                j$('.pageBody').hide();
                j$('.timeoutMessage').show();
                return;
            }

            if(viewObject['leadMatches'].length>0 || viewObject['contactMatches'].length>0) {
              ga_event2('Contact View with dupes');
            }

            initializePage(viewObject);

            // var totalHeight = j$('.pageBody').height();
            var totalHeight = 360;
            var heights = calculateHeights( totalHeight, "Contact", {           
              "leadMatches" :   viewObject["leadMatches"].length,
              "contactMatches" : viewObject["contactMatches"].length,
              "isDuplicatesOnContactViewOn" : viewObject["isDuplicatesOnContactViewOn"]          
              });
            
            var dupesHeight  = heights['dupeHeightContact'];
            
            // [ZH Tbd] j$('.leandata_logo').prop('src', viewObject['logoURL']);
            j$('.duplicatesTable').css('height',''+ dupesHeight + 'px' );

            if(!dupesHeight){
              j$('.duplicatesTable').hide();
              j$('.settingMessage').show();
            }

            if(viewObject["isDuplicatesOnContactViewOn"])  {
                j$('.duplicatesContactViewLink').prop('href', viewObject['duplicatesContactViewLink'] + '?id=' + objId + '&type=Contact&detail=true');

                if(viewObject['hasColumnSettingAccess'] || viewObject['enableAllowUserColumnCustomizations']) {
                    j$('.dupeContactSettingsLink').prop('href', viewObject['dupeContactSettingsLink']);
                    j$('.dupeLeadSettingsLink').prop('href', viewObject['dupeLeadSettingsLink']);
                } else {
                    j$('.setting_panel').hide();
                }

                j$('.dupesCountContainer .leadsCount').html(viewObject["leadMatches"].length);
                j$('.dupesCountContainer .contactsCount').html(viewObject["contactMatches"].length);

                initializeSection('Lead', viewObject["leadCols"], viewObject["leadColsMap"], viewObject["leadMatches"], viewObject);
                j$('.duplicatesLeadTableHead').html(generateHeader());
                j$('.duplicatesLeadTableBody').html(generateSObjectRows());

                initializeSection('Contact', viewObject["contactCols"], viewObject["contactColsMap"], viewObject["contactMatches"], viewObject);
                var hasStatus = false;
                j$('.duplicatesContactTableHead').html(generateHeader(hasStatus));
                j$('.duplicatesContactTableBody').html(generateSObjectRows());
            }
           
            var selectedLists = j$('.inline_editable').get();
            [].forEach.call(selectedLists, function(selectList){
                var toJ = j$(selectList);
                toJ.change(function(event){
                    //event.preventDefault();
                    var touchedSelectList = event.target;
                    var leadId = touchedSelectList.className.split(" ")[1];
                    var newStatus = touchedSelectList.options[touchedSelectList.selectedIndex].value;
                    changeLead(leadId, htmlDecode(newStatus));
               })
            })
            function changeLead (leadId, newStatus) {
                 Visualforce.remoting.Manager.invokeAction(
                 '{!$RemoteAction.OnDemandView.updateLeadStatus}',
                 leadId,
                 newStatus,
                 function (result, event) {}
                 )
            }
            
            j$('.pageLoading').hide();
            j$('.pageBody').show();

            setTarget();

            var dataTableOptions = {"pagination" : false, "emptyTableText": "No records to display"};
            if(viewObject["isDuplicatesOnContactViewOn"]) initializeDataTable(j$('.content_table_lead'), 'lead', dataTableOptions);
            if(viewObject["isDuplicatesOnContactViewOn"]) initializeDataTable(j$('.content_table_contact'), 'contact', dataTableOptions);

            var leadWidth = j$('.content_table_lead').width();
            var contactWidth =  j$('.content_table_contact').width();

            var maxWidth = Math.max( leadWidth, contactWidth );
            j$('.content_table_lead').width( maxWidth );
            j$('.content_table_contact').width( maxWidth );
            
            // Override extra border added
            j$('.pageBody th').css({'border-right': 'none'})
    }
    </script>

</apex:page>