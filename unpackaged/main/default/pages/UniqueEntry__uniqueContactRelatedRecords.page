<apex:page standardController="Contact" extensions="UniqueEntry.uniqueContactExtension"  showHeader="false" lightningStylesheets="true">
  
    <apex:includeScript value="{!$Resource.UniqueEntry__jQuery3}" />
    <apex:includeScript value="{!URLFOR($Resource.UniqueEntry__uniqueEntryResources, 'json2.js')}" />
    <script src="{!$Site.prefix}/support/console/28.0/integration.js" type="text/javascript"></script>
    <apex:includescript value="/soap/ajax/34.0/connection.js" />
    <apex:includescript value="/soap/ajax/34.0/apex.js" />

    <script type="text/javascript">

        var bulkContacts = [];
        var bulkAccounts =[];
        var bulkLeads = [];
        var obj = 'Contact';
       
        function addToOnload(fn){
            var old = window.onload;
            window.onload = function(){
                old(); fn();
            }
        }

        function newWindowOrTab(url, recordId){

            debugger;
            if(url.indexOf("visual.force") != -1)
            {
                url = "{!$Site.prefix}/"+recordId;
                console.log(url);
            }

            url = url.trim();
            console.log("{!$Site.prefix}/"+recordId);
            if( (typeof sforce.one != 'undefined') && (sforce.one != null) ){
                if(recordId != null && recordId != ''){
                    sforce.one.navigateToURL(url);
                }
            } else if(sforce.console.isInConsole()){
                sforce.console.openPrimaryTab(null, url, true);

            } else {
                window.open(url);
            }
        }

        $(function(){
            seekDupes();
       })

        //individual convert
        function onConvert(recordId) {
            newWindowOrTab('/lead/leadconvert.jsp?id=' + recordId + '&RetURL=/' + recordId, recordId);
        }

        function onEdit(recordId, objectname) {
            var isUpdateable;

            if(objectname == 'Lead') {
                isUpdateable = "{!$ObjectType['Lead'].updateable}";
                console.log(isUpdateable);
            }
            else if(objectname == 'Contact') {
                isUpdateable = "{!$ObjectType['Contact'].updateable}";
                console.log(isUpdateable);
            }

            else if(objectname == 'Account') {
                isUpdateable = "{!$ObjectType['Account'].updateable}";
                console.log(isUpdateable);
            }

            console.log(isUpdateable);
            if(isUpdateable == 'true'){
                newWindowOrTab('/' + recordId + '/e', recordId);
            }
            else{
                alert('You do not have sufficient privileges to edit the record. Please Contact your System Administrator');
            }
        }

        function onDelete(recordId, objectname) {
            var isdeletable;

           // alert('Are you sure you want to delete this ' + objectname + ' ?');

            if(objectname == 'Lead'){
                isdeletable = "{!$ObjectType['Lead'].deletable}";
                console.log(isdeletable);
                var recordtoDelete = new sforce.SObject("Lead");
                recordtoDelete.Id = recordId;

            }
            else if(objectname == 'Contact'){
                isdeletable = "{!$ObjectType['Contact'].deletable}";
                console.log(isdeletable);
                var recordtoDelete = new sforce.SObject("Contact");
                recordtoDelete.Id = recordId;

            }
            else if(objectname == 'Account'){
                isdeletable = "{!$ObjectType['Account'].deletable}";
                console.log(isdeletable);
                var recordtoDelete = new sforce.SObject("Account");
                recordtoDelete.Id = recordId;

            }

            if(isdeletable == 'true'){

                var confirmBtn = confirm('Are you sure you want to delete this ' + objectname + ' ?');
                if(confirmBtn == true){
                    sforce.connection.sessionId = "{!$Api.Session_ID}";
                    var result = sforce.connection.deleteIds([recordtoDelete.Id]);
                    if(result[0].getBoolean("success"))
                    {
                        window.location.reload();
                    }
                    else{
                        alert('Error : '+result);
                    }
                }
                else{
                    console.log('Delete Event Cancelled');
                }

            }
            else{
                alert('You do not have sufficient privileges to delete the record. Please Contact your System Administrator');
            }
        }

        //selecting few leads to convert
        function selectRecords(recordId, elementName, obj) {
            console.log('elementId  ' + elementName);
            var x = document.getElementsByName(elementName);
            console.log(x[0].checked);
            if(obj == 'Lead'){
                if (x[0].checked == true) {
                    bulkLeads.push(recordId);
                    console.log(bulkLeads);
                }
                else{
                    // else if (!x.is(':checked')) {
                    var x =  $("[id$='selectAllLeadCheckbox']");
                    console.log(x);
                    x[0].checked =  false;
                    var index = bulkLeads.indexOf(recordId);
                    if (index !== -1) {
                        bulkLeads.splice(index, 1);
                    }
                    console.log(bulkLeads);
                }
            }
            else if(obj == 'Contact'){
                if (x[0].checked == true) {
                    bulkContacts.push(recordId);
                    console.log(bulkContacts);
                }
                else{
                    // else if (!x.is(':checked')) {
                    var x =  $("[id$='selectAllContactCheckbox']");
                    console.log(x);
                    x[0].checked =  false;
                    var index = bulkContacts.indexOf(recordId);
                    if (index !== -1) {
                        bulkContacts.splice(index, 1);
                    }
                    console.log(bulkContacts);
                }

            }
            else if (obj == 'Account'){
                if (x[0].checked == true) {
                    bulkAccounts.push(recordId);
                    console.log(bulkAccounts);
                }
                else{
                    // else if (!x.is(':checked')) {
                    var x =  $("[id$='selectAllAccountCheckbox']");
                    console.log(x);
                    x[0].checked =  false;
                    var index = bulkAccounts.indexOf(recordId);
                    if (index !== -1) {
                        bulkAccounts.splice(index, 1);
                    }
                    console.log(bulkAccounts);
                }

            }

            else if(obj == 'PersonAccount'){
                if (x[0].checked == true) {
                    bulkAccounts.push(recordId);
                    console.log(bulkAccounts);
                }
                else{
                    // else if (!x.is(':checked')) {
                    var x =  $("[id$='selectAllPAccCheckbox']");
                    console.log(x);
                    x[0].checked =  false;
                    var index = bulkAccounts.indexOf(recordId);
                    if (index !== -1) {
                        bulkAccounts.splice(index, 1);
                    }
                    console.log(bulkAccounts);
                }
            }

        }

        //converting all leads at once
        function convertMultipleLeads(){
            var x =  $("[id$='selectAllLeadCheckbox']");
            console.log(x);
            if(x[0].checked){
                convertactionfunc(null, true);
            }
            else{
                if(bulkLeads.length == 0){
                    alert ('Please select leads to convert');
                }
                else{
                    //call convert method of apex controller
                    console.log(bulkLeads);
                    convertactionfunc((bulkLeads.toString()), false);

                }
            }


        }

        function openConvertPage(ownerId, accId, recordstoConvert, isConvertible){
            //     debugger;
            console.log(accId, isConvertible);
            console.log(ownerId);
            console.log(recordstoConvert);
            if(isConvertible == 'true'){
                if(accId){
                    window.open('/apex/leadConvert?accId='+ accId + '&userId='+ownerId + '&leads=' +recordstoConvert);
                }
                else{
                    window.open('/apex/leadConvert?'+ '&userId='+ownerId + '&leads=' +recordstoConvert);

                }
            }
            else{
                alert('You do not have sufficient privileges to convert the record. Please Contact your System Administrator');
            }

        }

        function deleteMultipleRecords(objectName){


            if (objectName == 'Lead') {
                var x = $("[id$='selectAllLeadCheckbox']");
                console.log(x);
                if (x[0].checked) {
                    var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');
                    if(confirmBtn == true) {
                        deleteactionfunc(null, true, objectName);
                    }
                } else {
                    if (bulkLeads.length == 0) {
                        alert('Please select leads to delete');
                    } else {
                        //call convert method of apex controller
                        console.log(bulkLeads);
                        var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');
                        if(confirmBtn == true) {
                            deleteactionfunc((bulkLeads.toString()), false, objectName);
                        }

                    }
                }
            } else if (objectName == 'Contact') {
                var x = $("[id$='selectAllContactCheckbox']");
                console.log(x);
                if (x[0].checked) {
                    var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');
                    if(confirmBtn == true) {
                        deleteactionfunc(null, true, objectName);
                    }
                } else {
                    if (bulkContacts.length == 0) {
                        alert('Please select contacts to delete');
                    } else {
                        //call convert method of apex controller
                        console.log(bulkContacts);
                        var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');

                        if(confirmBtn == true) {
                            deleteactionfunc((bulkContacts.toString()), false, objectName);
                        }

                    }
                }
            } else if (objectName == 'Account') {
                var x = $("[id$='selectAllAccountCheckbox']");
                console.log(x);
                if (x[0].checked) {
                    var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');
                    if(confirmBtn == true) {
                        deleteactionfunc(null, true, objectName);
                    }
                } else {
                    if (bulkAccounts.length == 0) {
                        alert('Please select accounts to delete');
                    } else {
                        //call convert method of apex controller
                        console.log(bulkAccounts);
                        var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');

                        if(confirmBtn == true) {
                            deleteactionfunc((bulkAccounts.toString()), false, objectName);
                        }
                    }
                }
            } else if (objectName == 'PersonAccount') {
                var x = $("[id$='selectAllPAccCheckbox']");
                console.log(x);
                if (x[0].checked) {
                    var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');
                    if(confirmBtn == true) {
                        deleteactionfunc(null, true, objectName);
                    }                } else {
                    if (bulkAccounts.length == 0) {
                        alert('Please select accounts to delete');
                    } else {
                        //call convert method of apex controller
                        console.log(bulkAccounts);
                        var confirmBtn = confirm('Are you sure you want to delete these ' + objectName + 's ?');

                        if(confirmBtn == true) {
                            deleteactionfunc((bulkAccounts.toString()), false, objectName);
                        }

                    }
                }
            }
        }



        function selectAllorNone(objname) {

            // Find parent table-->
            if(objname == 'Lead'){
                var allOrNoneCheckbox =  document.querySelector('[id$="selectAllLeadCheckbox"]');
                console.log(allOrNoneCheckbox);
                var container = allOrNoneCheckbox;
                while (container.tagName != "TABLE") {
                    console.log(container.tagName)
                    container = container.parentNode;
                }

                // Switch all checkboxes-->
                var inputs = container.getElementsByTagName("input");
                var checked = allOrNoneCheckbox.checked;
                for (var i = 0; i < inputs.length; i++) {
                    var input = inputs.item(i);
                    if (input.type == "checkbox") {
                        if (input != allOrNoneCheckbox) {
                            input.checked = checked;
                        }
                    }
                }
            }
            else if(objname == 'Contact'){
                var allOrNoneCheckbox =  document.querySelector('[id$="selectAllContactCheckbox"]');
                console.log(allOrNoneCheckbox);
                var container = allOrNoneCheckbox;
                while (container.tagName != "TABLE") {
                    console.log(container.tagName)
                    container = container.parentNode;
                }

                // Switch all checkboxes-->
                var inputs = container.getElementsByTagName("input");
                var checked = allOrNoneCheckbox.checked;
                for (var i = 0; i < inputs.length; i++) {
                    var input = inputs.item(i);
                    if (input.type == "checkbox") {
                        if (input != allOrNoneCheckbox) {
                            input.checked = checked;
                        }
                    }
                }
            }

            else if(objname == 'PersonAccount'){
                var allOrNoneCheckbox =  document.querySelector('[id$="selectAllPAccCheckbox"]');
                console.log(allOrNoneCheckbox);
                var container = allOrNoneCheckbox;
                while (container.tagName != "TABLE") {
                    console.log(container.tagName)
                    container = container.parentNode;
                }

                // Switch all checkboxes-->
                var inputs = container.getElementsByTagName("input");
                var checked = allOrNoneCheckbox.checked;
                for (var i = 0; i < inputs.length; i++) {
                    var input = inputs.item(i);
                    if (input.type == "checkbox") {
                        if (input != allOrNoneCheckbox) {
                            input.checked = checked;
                        }
                    }
                }
            }

            else if(objname == 'Account'){
                var allOrNoneCheckbox =  document.querySelector('[id$="selectAllAccountCheckbox"]');
                console.log(allOrNoneCheckbox);
                var container = allOrNoneCheckbox;
                while (container.tagName != "TABLE") {
                    console.log(container.tagName)
                    container = container.parentNode;
                }

                // Switch all checkboxes-->
                var inputs = container.getElementsByTagName("input");
                var checked = allOrNoneCheckbox.checked;
                for (var i = 0; i < inputs.length; i++) {
                    var input = inputs.item(i);
                    if (input.type == "checkbox") {
                        if (input != allOrNoneCheckbox) {
                            input.checked = checked;
                        }
                    }
                }
            }

        }

    </script>

    <apex:form >
        <apex:actionfunction name="seekDupes" action="{!seekDupes}" rerender="dupes" status="initStatus"/>
                
        <apex:outputPanel id="dupes">
        
            <script type='text/javascript'>
                $("a[href*='salesforce']").attr('target','_blank');
            </script>

            <apex:pageBlock mode="detail">
            
                <apex:actionStatus id="initStatus">
                    <apex:facet name="start">
                        <apex:outputpanel ><img src='/img/loading.gif' alt='...'/> loading ...</apex:outputpanel> 
                    </apex:facet>
                </apex:actionStatus>
            
            
                <!-- CONTACTS -->
                
                <apex:pageBlockSection title="Related {!$ObjectType.Contact.labelPlural}" rendered="{!contactDupesFound}" columns="1">

                    <apex:outputPanel >
                        <apex:inputCheckbox onclick="selectAllorNone('Contact')" title="Toggle All Rows" id="selectAllContactCheckbox" selected="false" rendered="{!($Profile.Name =='System Administrator')}"/>
                        <apex:commandButton onclick="deleteMultipleRecords('Contact')" value="Delete" id="contactdeletebtn" style="" rendered="{!($Profile.Name =='System Administrator')}"/>

                        <apex:actionFunction name="deleteactionfunc" action="{!deleteRecords}"  oncomplete="refreshPage();">
                            <apex:param value="" name="array" assignTo="{!deleteRecordIds}" />
                            <apex:param value="" name="boolean" assignTo="{!executeAll}" />
                            <apex:param value="" name="string" assignTo="{!objName}" />


                        </apex:actionFunction>
                    </apex:outputPanel>

                    <apex:outputPanel >
                        
                        <apex:pageBlockTable style="table-layout:fixed;"
                        id="contactDupes" value="{!contactDupes}" var="d"
                        styleClass="dupeTable"
                        onRowMouseOver="this.style.background='white';"
                        onRowMouseOut="this.style.background='';">

                            <apex:column headerValue="Select" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;" rendered="{!($Profile.Name =='System Administrator')}">
                                <apex:inputcheckbox onclick="selectRecords('{!d.contact.Id}', this.name, 'Contact')"/>
                            </apex:column>

                            <apex:repeat var="fieldName" value="{!selectedContactFields}">
                                <apex:column headerValue="{!IF(AND($ObjectType.Contact.Fields[fieldName].type='reference',RIGHT($ObjectType.Contact.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Contact.Fields[fieldName].Label,LEN($ObjectType.Contact.Fields[fieldName].Label)-3),$ObjectType.Contact.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedContactFields.size)}%"
                                rendered="{!fieldName == 'name'}">
                                
                                    <!--Displays if User has access to Record -->
                                    <apex:outputPanel rendered="{!d.readable}">
                                        <a title="View (New Window)" href="#"
                                        onclick="newWindowOrTab('{!URLFOR($Action.Contact.View,d.contact.Id)}', '{!d.contact.Id}');">
                                            <apex:outputText escape="true">
                                                {!d.contact.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                
                                    <!-- Displays if User does NOT have access to Record -->
                                    <apex:outputPanel rendered="{!NOT(d.readable)}">
                                        <a title="View (New Window)"
                                        style="cursor: pointer; text-decoration: underline"
                                        onclick="alert('You do not have access to view this record.\nYou should contact the owner(s) with any questions.');">
                                            <apex:outputText escape="true">
                                                {!d.contact.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Contact.Fields[fieldName].type='reference',RIGHT($ObjectType.Contact.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Contact.Fields[fieldName].Label,LEN($ObjectType.Contact.Fields[fieldName].Label)-3),$ObjectType.Contact.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedContactFields.size)}%"
                                rendered="{!fieldName == 'ownerid'}">
                                
                                    <!-- Displays for Queue Owner -->
                                    <apex:outputText escape="true" rendered="{!LEFT(d.contact.OwnerId,3)<>'005'}">
                                        {!d.contact.Owner.Name}
                                    </apex:outputText>
                                    
                                    <!-- Displays when Owner is NOT a Queue -->
                                    <apex:outputPanel rendered="{!LEFT(d.contact.OwnerId,3)='005'}">
                                        <a title="View (New Window)" href="#"
                                        onclick="newWindowOrTab('{!$Site.prefix}/{!d.contact.ownerId}', '{!d.contact.ownerId}');">
                                            <apex:outputText escape="true">
                                                {!d.contact.Owner.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays when Owner NOT a Queue AND NOT the current user -->
                                    <apex:outputPanel rendered="{!AND(LEFT(d.contact.OwnerId,3)='005',d.contact.OwnerId<>$User.Id)}">
                                        <a title="Send Email" href="mailto:{!d.contact.owner.email}" target="_blank">
                                            <apex:image value="{!URLFOR($Resource.UniqueEntry__uniqueEntryResources, 'envelope.jpg')}" alt="Send Email" styleClass="littleIcons" />
                                        </a>
                                    </apex:outputPanel>
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Contact.Fields[fieldName].type='reference',RIGHT($ObjectType.Contact.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Contact.Fields[fieldName].Label,LEN($ObjectType.Contact.Fields[fieldName].Label)-3),$ObjectType.Contact.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedContactFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;"
                                rendered="{!fieldName != 'name' && fieldName != 'ownerid'}">
                                    <span style="width: 100px;">
                                        <c:displayAddress rendered="{!$ObjectType.Contact.Fields[fieldName].type=='address' && (settings.UniqueEntry__Contact_Security_Level__c=='low' || d.readable)}"
                                            value="{!d.contact}" prefix="{!TRIM(SUBSTITUTE(fieldName,'address',''))}">
                                        </c:displayAddress>
                                        <apex:outputpanel rendered="{!$ObjectType.Contact.Fields[fieldName].type!='address'}">
                                            <apex:outputField value="{!d.contact[fieldName]}" rendered="{!OR(settings.UniqueEntry__Contact_Security_Level__c='low',d.readable)}" />
                                        </apex:outputpanel>
                                        <!-- <apex:outputField value="{!d.contact[fieldName]}" rendered="{!OR(settings.UniqueEntry__Contact_Security_Level__c='low',d.readable)}" /> -->
                                        <apex:outputText escape="false" value="&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;" rendered="{!NOT(OR(settings.UniqueEntry__Contact_Security_Level__c='low',d.readable))}" />
                                    </span>
                                </apex:column>
                            </apex:repeat>
                            
<!--    &lt;!&ndash;  FOR TESTING ONLY       &ndash;&gt;-->
<!--    <apex:column headerValue="Score" rendered="{!diagnose}">-->
<!--        <a onclick="alert('{!JSENCODE(d.breakdown)}')">{!d.confidence}</a>-->
<!--    </apex:column>-->
                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onEdit('{!d.contact.Id}', 'Contact')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Edit
                                    </apex:outputText>
                                </a>
                            </apex:column>

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onDelete('{!d.contact.Id}', 'Contact')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Delete
                                    </apex:outputText>
                                </a>
                            </apex:column>

                        </apex:pageBlockTable>

                        <apex:outputPanel rendered="{!moreContacts}" styleClass="dupeMoreLink" layout="block">
                            {!currentContactDisplay}
                            <apex:commandLink action="{!showMoreContacts}" reRender="dupes" immediate="true" onComplete="selectAllorNone('Contact');">
                                show all...
                            </apex:commandLink>
                        </apex:outputPanel>
                        
                    </apex:outputPanel>
                        
                </apex:pageBlockSection>

            
                <!-- LEADS -->
            
                <apex:pageBlockSection title="Related {!$ObjectType.Lead.labelPlural}" rendered="{!leadDupesFound}" columns="1">
                    <apex:outputPanel >
                        <apex:inputCheckbox onclick="selectAllorNone('Lead')" title="Toggle All Rows" id="selectAllLeadCheckbox" selected="false"/>
                        <apex:commandButton onclick="convertMultipleLeads(); return false;" value="Convert" style="" id="convertbtn"/>
                        <apex:commandButton onclick="deleteMultipleRecords('Lead')" value="Delete" style=" margin-left:15px; " id="leaddeletebtn" rendered="{!($Profile.Name =='System Administrator')}"/>
                        <apex:actionFunction name="convertactionfunc" action="{!convertLeadsRecords}"  rerender="none;" onComplete="openConvertPage('{!recordOwnerRelatedLeads}','{!accIdRelatedLeads}','{!convertLeadIds}', '{!isConvertible}')">
                            <apex:param value="" name="array" assignTo="{!convertLeadIds}" />
                            <apex:param value="" name="boolean" assignTo="{!executeAll}" />

                        </apex:actionFunction>

                        <apex:actionFunction name="deleteactionfunc" action="{!deleteRecords}"  oncomplete="refreshPage();">
                            <apex:param value="" name="array" assignTo="{!deleteRecordIds}" />
                            <apex:param value="" name="boolean" assignTo="{!executeAll}" />
                            <apex:param value="" name="string" assignTo="{!objName}" />

                        </apex:actionFunction>
                    </apex:outputPanel>
                    <apex:outputPanel >

                        <apex:pageBlockTable style="table-layout:fixed;" id="leadDupes" value="{!leadDupes}" var="d" styleClass="dupeTable"
                        onRowMouseOver="this.style.background='white';"
                        onRowMouseOut="this.style.background='';">
                            <apex:column headerValue="Select" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;" >
                                <apex:inputcheckbox onclick="selectRecords('{!d.lead.Id}', this.name, 'Lead')"/>
                            </apex:column>

                            <apex:repeat var="fieldName" value="{!selectedLeadFields}">
                            
                                <apex:column headerValue="{!IF(AND($ObjectType.Lead.Fields[fieldName].type='reference',RIGHT($ObjectType.Lead.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Lead.Fields[fieldName].Label,LEN($ObjectType.Lead.Fields[fieldName].Label)-3),$ObjectType.Lead.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedLeadFields.size)}%"
                                rendered="{!fieldName == 'name'}">
                                
                                    <!-- Displays if User has access to Record -->
                                    <apex:outputPanel rendered="{!d.readable}">
                                        <a title="View (New Window)" href="#" onclick="newWindowOrTab('{!URLFOR($Action.Lead.View,d.lead.Id)}', '{!d.lead.Id}');">
                                            <apex:outputText escape="true">
                                                {!d.lead.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays if User does NOT have access to Record -->
                                    <apex:outputPanel rendered="{!NOT(d.readable)}">
                                        <a title="View (New Window)"
                                        style="cursor: pointer; text-decoration: underline"
                                        onclick="alert('You do not have access to view this record.\nYou should contact the owner(s) with any questions.');">
                                            <apex:outputText escape="true">
                                                {!d.lead.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Lead.Fields[fieldName].type='reference',RIGHT($ObjectType.Lead.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Lead.Fields[fieldName].Label,LEN($ObjectType.Lead.Fields[fieldName].Label)-3),$ObjectType.Lead.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedLeadFields.size)}%"
                                rendered="{!fieldName == 'ownerid'}">
                                
                                    <!-- Displays for Queue Owner -->
                                    <apex:outputText escape="true" rendered="{!LEFT(d.lead.OwnerId,3)<>'005'}">
                                        {!d.lead.Owner.Name}
                                    </apex:outputText>
                                    
                                    <!-- Displays when Owner is NOT a Queue -->
                                    <apex:outputPanel rendered="{!LEFT(d.lead.OwnerId,3)='005'}">
                                        <a title="View (New Window)" href="#"
                                        onclick="newWindowOrTab('{!$Site.prefix}/{!d.lead.ownerId}', '{!d.lead.ownerId}');">
                                            <apex:outputText escape="true">
                                                {!d.lead.Owner.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays when Owner NOT a Queue AND NOT the current user -->
                                    <apex:outputPanel rendered="{!AND(LEFT(d.lead.OwnerId,3)='005',d.lead.OwnerId<>$User.Id)}">
                                        <a title="Send Email" href="mailto:{!d.lead.owner.email}" target="_blank">
                                            <apex:image value="{!URLFOR($Resource.UniqueEntry__uniqueEntryResources, 'envelope.jpg')}" alt="Send Email" styleClass="littleIcons" />
                                        </a>
                                    </apex:outputPanel>
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Lead.Fields[fieldName].type='reference',RIGHT($ObjectType.Lead.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Lead.Fields[fieldName].Label,LEN($ObjectType.Lead.Fields[fieldName].Label)-3),$ObjectType.Lead.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;"
                                rendered="{!fieldName != 'name' && fieldName != 'ownerid'}">
                                    <span>
                                        <c:displayAddress rendered="{!$ObjectType.Lead.Fields[fieldName].type=='address' && (settings.UniqueEntry__Lead_Security_Level__c=='low' || d.readable)}"
                                            value="{!d.lead}" prefix="{!TRIM(SUBSTITUTE(fieldName,'address',''))}">
                                        </c:displayAddress>
                                        <apex:outputpanel rendered="{!$ObjectType.Lead.Fields[fieldName].type!='address'}">
                                            <apex:outputField value="{!d.lead[fieldName]}" rendered="{!OR(settings.UniqueEntry__Lead_Security_Level__c='low',d.readable)}" />
                                        </apex:outputpanel>
                                        <!-- <apex:outputField value="{!d.lead[fieldName]}" rendered="{!OR(settings.UniqueEntry__Lead_Security_Level__c='low',d.readable)}" /> -->
                                        <apex:outputText escape="false" value="&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;" rendered="{!NOT(OR(settings.UniqueEntry__Lead_Security_Level__c='low',d.readable))}" />
                                    </span>
                                </apex:column>
                            </apex:repeat>

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onConvert('{!d.lead.Id}')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Convert
                                    </apex:outputText>
                                </a>
                            </apex:column>

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onEdit('{!d.lead.Id}', 'Lead')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Edit
                                    </apex:outputText>
                                </a>
                            </apex:column>

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onDelete('{!d.lead.Id}', 'Lead')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Delete
                                    </apex:outputText>
                                </a>
                            </apex:column>
                            
<!--    &lt;!&ndash;  FOR TESTING ONLY       &ndash;&gt;-->
<!--    <apex:column headerValue="Score" rendered="{!diagnose}">-->
<!--        <a onclick="alert('{!JSENCODE(d.breakdown)}')">{!d.confidence}</a>-->
<!--    </apex:column>-->

                        </apex:pageBlockTable>
                        
                        <apex:outputPanel rendered="{!moreLeads}" styleClass="dupeMoreLink" layout="block">
                            {!currentLeadDisplay}
                            <apex:commandLink action="{!showMoreLeads}" reRender="dupes" immediate="true" onComplete="selectAllorNone('Lead');">
                                show all...
                            </apex:commandLink>
                        </apex:outputPanel>
                        
                    </apex:outputPanel>
                    
                </apex:pageBlockSection>
                

                <!-- PERSON ACCOUNTS -->

                <apex:pageBlockSection title="Related Person Accounts" rendered="{!pAccDupesFound}" columns="1">

                    <apex:outputPanel >
                        <apex:inputCheckbox onclick="selectAllorNone('PersonAccount')" title="Toggle All Rows" id="selectAllPAccCheckbox" selected="false" rendered="{!($Profile.Name =='System Administrator')}"/>
                        <apex:commandButton onclick="deleteMultipleRecords('PersonAccount')" value="Delete"  style="" id="paccountdeletebtn" rendered="{!($Profile.Name =='System Administrator')}"/>

                        <apex:actionFunction name="deleteactionfunc" action="{!deleteRecords}"  oncomplete="refreshPage();">
                            <apex:param value="" name="array" assignTo="{!deleteRecordIds}" />
                            <apex:param value="" name="boolean" assignTo="{!executeAll}" />
                            <apex:param value="" name="string" assignTo="{!objName}" />


                        </apex:actionFunction>
                    </apex:outputPanel>

                    <apex:outputPanel >
                    
                        <apex:pageBlockTable style="table-layout:fixed;display:block;"
                        id="pAccDupes" value="{!pAccDupes}" var="d"
                        styleClass="dupeTable"
                        onRowMouseOver="this.style.background='white';"
                        onRowMouseOut="this.style.background='';">


                            <apex:column headerValue="Select" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;" rendered="{!($Profile.Name =='System Administrator')}">
                                <apex:inputcheckbox onclick="selectRecords('{!d.account.Id}', this.name, 'PersonAccount')"/>
                            </apex:column>
                        
                            <apex:column style="max-width:40px;width:40px;min-width:40px;" headerValue="Action">
                                <!-- Displays only if user has EDIT rights -->
                                <apex:outputPanel rendered="{!d.editable}">
                                    <a href="{!URLFOR($Action.Account.Edit,d.account.Id,[retURL=URLFOR($Action.Account.View,d.account.Id)])}" title="Edit">
                                        Edit
                                    </a>
                                </apex:outputPanel>
                            </apex:column>

                            <apex:repeat var="fieldName" value="{!selectedPersonAccountFields}">
                                
                                <apex:column headerValue="{!IF(AND($ObjectType.Account.Fields[fieldName].type='reference',RIGHT($ObjectType.Account.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Account.Fields[fieldName].Label,LEN($ObjectType.Account.Fields[fieldName].Label)-3),$ObjectType.Account.Fields[fieldName].Label)}"
                                style="width:{!98/(selectedPersonAccountFields.size)}%"
                                rendered="{!fieldName == 'name'}">
                                    
                                    <!--Displays if User has access to Record -->
                                    <apex:outputPanel rendered="{!d.readable}">
                                        <a title="View (New Window)" href="#"
                                        onclick="newWindowOrTab('{!URLFOR($Action.Account.View,d.account.Id)}', '{!d.account.Id}');">
                                            <apex:outputText escape="true">
                                                {!d.account.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays if User does NOT have access to Record -->
                                    <apex:outputPanel rendered="{!NOT(d.readable)}">
                                        <a title="View (New Window)" style="cursor: pointer; text-decoration: underline"
                                        onclick="alert('You do not have access to view this record.\nYou should account the owner(s) with any questions.');">
                                            <apex:outputText escape="true">
                                                {!d.account.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Account.Fields[fieldName].type='reference',RIGHT($ObjectType.Account.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Account.Fields[fieldName].Label,LEN($ObjectType.Account.Fields[fieldName].Label)-3),$ObjectType.Account.Fields[fieldName].Label)}"
                                style="width:{!98/(selectedPersonAccountFields.size)}%"
                                rendered="{!fieldName == 'ownerid'}">
                                
                                    <!-- Displays for Queue Owner -->
                                    <apex:outputText escape="true" rendered="{!LEFT(d.account.OwnerId,3)<>'005'}">
                                        {!d.account.Owner.Name}
                                    </apex:outputText>
                                    
                                    <!-- Displays when Owner is NOT a Queue -->
                                    <apex:outputPanel rendered="{!LEFT(d.account.OwnerId,3)='005'}">
                                        <a title="View (New Window)" href="#" onclick="newWindowOrTab('{!$Site.prefix}/{!d.account.ownerId}', '{!d.account.ownerId}');">
                                            <apex:outputText escape="true">
                                                {!d.account.Owner.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays when Owner NOT a Queue AND NOT the current user -->
                                    <apex:outputPanel rendered="{!AND(LEFT(d.account.OwnerId,3)='005',d.account.OwnerId<>$User.Id)}">
                                        <a title="Send Email" href="mailto:{!d.account.owner.email}" target="_blank">
                                            <apex:image value="{!URLFOR($Resource.UniqueEntry__uniqueEntryResources, 'envelope.jpg')}" alt="Send Email" styleClass="littleIcons" />
                                        </a>
                                    </apex:outputPanel>
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Account.Fields[fieldName].type='reference',RIGHT($ObjectType.Account.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Account.Fields[fieldName].Label,LEN($ObjectType.Account.Fields[fieldName].Label)-3),$ObjectType.Account.Fields[fieldName].Label)}"
                                style="width:{!98/(selectedPersonAccountFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;"
                                rendered="{!fieldName != 'name' && fieldName != 'ownerid'}">
                                
                                    <span style="width: 100px;">
                                        <c:displayAddress rendered="{!$ObjectType.Account.Fields[fieldName].type=='address' && (settings.UniqueEntry__Account_Security_Level__c=='low' || d.readable)}"
                                            value="{!d.account}" prefix="{!TRIM(SUBSTITUTE(fieldName,'address',''))}">
                                        </c:displayAddress>
                                        <apex:outputpanel rendered="{!$ObjectType.Account.Fields[fieldName].type!='address'}">
                                            <apex:outputField value="{!d.account[fieldName]}" rendered="{!OR(settings.UniqueEntry__Account_Security_Level__c='low',d.readable)}" />
                                        </apex:outputpanel>
                                        <!-- <apex:outputField value="{!d.account[fieldName]}" rendered="{!OR(settings.Person_Account_Security_Level__c='low',d.readable)}" /> -->
                                        <apex:outputText escape="false" value="&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;" rendered="{!NOT(OR(settings.UniqueEntry__Person_Account_Security_Level__c='low',d.readable))}" />
                                    </span>
                                </apex:column>
                            </apex:repeat>
                            
<!--    &lt;!&ndash;  FOR TESTING ONLY       &ndash;&gt;-->
<!--    <apex:column headerValue="Score" rendered="{!diagnose}">-->
<!--        <a onclick="alert('{!JSENCODE(d.breakdown)}')">{!d.confidence}</a>-->
<!--    </apex:column>-->

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onEdit('{!d.account.Id}', 'Account')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Edit
                                    </apex:outputText>
                                </a>
                            </apex:column>

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onDelete('{!d.account.Id}', 'Account')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Delete
                                    </apex:outputText>
                                </a>
                            </apex:column>
                            
                        </apex:pageBlockTable>

                        <apex:outputPanel rendered="{!morePersonAccounts}" styleClass="dupeMoreLink" layout="block">
                            {!currentPersonAccountDisplay}
                            <apex:commandLink action="{!showMorePersonAccounts}" reRender="dupes" immediate="true" onComplete="selectAllorNone('PersonAccount');">
                                show all...
                            </apex:commandLink>
                        </apex:outputPanel>

                    </apex:outputPanel>

                </apex:pageBlockSection>


                <!-- ACCOUNTS -->
                
                <apex:pageBlockSection title="Related {!$ObjectType.Account.labelPlural}" rendered="{!bAccDupesFound}" columns="1">

                    <apex:outputPanel >
                        <apex:inputCheckbox onclick="selectAllorNone('Account')" title="Toggle All Rows" id="selectAllAccountCheckbox" selected="false" rendered="{!($Profile.Name =='System Administrator')}"/>
                        <apex:commandButton onclick="deleteMultipleRecords('Account')" value="Delete" id="accountdeletebtn" style="" rendered="{!($Profile.Name =='System Administrator')}"/>

                        <apex:actionFunction name="deleteactionfunc" action="{!deleteRecords}"  oncomplete="refreshPage();">
                            <apex:param value="" name="array" assignTo="{!deleteRecordIds}" />
                            <apex:param value="" name="boolean" assignTo="{!executeAll}" />
                            <apex:param value="" name="string" assignTo="{!objName}" />


                        </apex:actionFunction>
                    </apex:outputPanel>


                    <apex:outputPanel >
                
                        <apex:pageBlockTable style="table-layout:fixed;" id="bAccDupes"
                        value="{!bAccDupes}" var="d" styleClass="dupeTable"
                        onRowMouseOver="this.style.background='white';"
                        onRowMouseOut="this.style.background='';">

                            <apex:column headerValue="Select" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;" rendered="{!($Profile.Name =='System Administrator')}">
                                <apex:inputcheckbox onclick="selectRecords('{!d.account.Id}', this.name, 'Account')"/>
                            </apex:column>

                            <apex:repeat var="fieldName" value="{!selectedBusinessAccountFields}">
                                <apex:column headerValue="{!IF(AND($ObjectType.Account.Fields[fieldName].type='reference',RIGHT($ObjectType.Account.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Account.Fields[fieldName].Label,LEN($ObjectType.Account.Fields[fieldName].Label)-3),$ObjectType.Account.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedBusinessAccountFields.size)}%"
                                rendered="{!fieldName == 'name'}">
                                
                                    <!-- Displays if User has access to Record -->
                                    <apex:outputPanel rendered="{!d.readable}">
                                        <a title="View (New Window)" href="#" onclick="newWindowOrTab('{!URLFOR($Action.Account.View,d.account.Id)}', '{!d.account.Id}');">
                                            <apex:outputText escape="true">
                                                {!d.account.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays if User does NOT have access to Record -->
                                    <apex:outputPanel rendered="{!NOT(d.readable)}">
                                        <a title="View (New Window)"
                                        style="cursor: pointer; text-decoration: underline"
                                        onclick="alert('You do not have access to view this record.\nYou should account the owner(s) with any questions.');">
                                            <apex:outputText escape="true">
                                                {!d.account.Name}
                                            </apex:outputText>
                                        </a>
                                    </apex:outputPanel>
                                    
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Account.Fields[fieldName].type='reference',RIGHT($ObjectType.Account.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Account.Fields[fieldName].Label,LEN($ObjectType.Account.Fields[fieldName].Label)-3),$ObjectType.Account.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedBusinessAccountFields.size)}%"
                                rendered="{!fieldName == 'ownerid'}">
                                
                                    <!-- Displays for Queue Owner -->
                                    <apex:outputField value="{!d.account.OwnerId}" rendered="{!LEFT(d.account.OwnerId,3)<>'005'}">
                                        {!d.account.OwnerId}
                                    </apex:outputField>
                                    
                                    <!-- Displays when Owner is NOT a Queue -->
                                    <apex:outputPanel rendered="{!LEFT(d.account.OwnerId,3)='005'}">
                                        <a title="View (New Window)" href="#"
                                        onclick="newWindowOrTab('{!$Site.prefix}/{!d.account.ownerId}' ,'{!d.account.ownerId}');">
                                            <apex:outputField value="{!d.account.OwnerId}">
                                            </apex:outputField>
                                        </a>
                                    </apex:outputPanel>
                                    
                                    <!-- Displays when Owner NOT a Queue AND NOT the current user -->
                                    <apex:outputPanel rendered="{!AND(LEFT(d.account.OwnerId,3)='005',d.account.OwnerId<>$User.Id)}">
                                        <a title="Send Email" href="mailto:{!d.account.owner.email}" target="_blank">
                                            <apex:image value="{!URLFOR($Resource.UniqueEntry__uniqueEntryResources, 'envelope.jpg')}" alt="Send Email" styleClass="littleIcons" />
                                        </a>
                                    </apex:outputPanel>
                                    
                                </apex:column>

                                <apex:column headerValue="{!IF(AND($ObjectType.Account.Fields[fieldName].type='reference',RIGHT($ObjectType.Account.Fields[fieldName].Label,3)=' ID'),LEFT($ObjectType.Account.Fields[fieldName].Label,LEN($ObjectType.Account.Fields[fieldName].Label)-3),$ObjectType.Account.Fields[fieldName].Label)}"
                                style="width:{!100/(selectedBusinessAccountFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;"
                                rendered="{!fieldName != 'name' && fieldName != 'ownerid'}">

                                    <span style="width: 100px;">
                                        <apex:outputField value="{!d.account[fieldName]}" rendered="{!OR(settings.UniqueEntry__Account_Security_Level__c='low',d.readable)}" />
                                        <apex:outputText escape="false" value="&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;" rendered="{!NOT(OR(settings.UniqueEntry__Account_Security_Level__c='low',d.readable))}" />
                                    </span>
                                </apex:column>
                                
                            </apex:repeat>
                            
<!--    &lt;!&ndash;  FOR TESTING ONLY       &ndash;&gt;-->
<!--    <apex:column headerValue="Score" rendered="{!diagnose}">-->
<!--        <a onclick="alert('{!JSENCODE(d.breakdown)}')">{!d.confidence}</a>-->
<!--    </apex:column>-->
                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onEdit('{!d.account.Id}', 'Account')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Edit
                                    </apex:outputText>
                                </a>
                            </apex:column>

                            <apex:column headerValue="" style="width:{!100/(selectedLeadFields.size)}%; white-space: normal; overflow: hidden; text-overflow: ellipsis;">
                                <a href="#" onclick="onDelete('{!d.account.Id}', 'Account')" >
                                    <apex:outputText escape="true" style="color: 3817ef">
                                        Delete
                                    </apex:outputText>
                                </a>
                            </apex:column>

                        </apex:pageBlockTable>

                        <apex:outputPanel rendered="{!moreAccounts}" styleClass="dupeMoreLink" layout="block">
                            {!currentAccountDisplay}
                            <apex:commandLink action="{!showMoreAccounts}" reRender="dupes" immediate="true" onComplete="selectAllorNone('Account');">
                                show all...
                            </apex:commandLink>
                        </apex:outputPanel>
                    
                    </apex:outputPanel>
                    
                </apex:pageBlockSection>
                
                
                <apex:outputPanel rendered="{!AND(NOT(leadDupesFound),NOT(contactDupesFound),NOT(pAccDupesFound),NOT(bAccDupesFound),isSeekDupesRun)}">
                    No related records were found.
                </apex:outputPanel>
            
            </apex:pageBlock>
            
        </apex:outputPanel>
    </apex:form>
</apex:page>