<apex:page controller="LeanData.MassConvertController" action="{! initializeIsAllowed}" sidebar="false">
    <apex:stylesheet value="{!URLFOR($Resource.LeanData__angela_app, 'styles.css')}"/> 
    <c:style />
    
    <style>
        .controlLabel {
            margin-left: 15px;
        }
        
        #objectTableControls {
            margin-bottom: 15px;
        }
        
        tr.headerRow th {
            padding-right: 15px !important;
        }
        
        .buttonsDiv {
            margin-left: auto;
            margin-right: auto;
            width: 250px;
            margin-top: 20px;
            margin-bottom: 20px;
        }
        
        .infoSection {
            float:left;
            width: 50%;
        }
        
        .infoLabel {    
            width: intrinsic;
            margin-bottom: 15px;
        }
        .inner-panel{
            padding: 10px;
        }
        .infoLabel-heading {
            display: inline-block;
            width: 150px;
            text-align: right;
            font-weight: bold;
            margin-right: 15px;
            color: #4a4a56;        
        }
        td{
            padding:3px 3px 3px 18px !important;
        }
        .input-options-div{
            text-align: left;
            margin-left: 100px;
        }
    </style>
    <c:accessCheck isAllowed="{! isAllowed && isL2AMassConvertAllowed}">
        <c:matchedViewAssets view_type="MassConvert" with_dupes="false" with_l2a_matches="false" />
        <apex:outputPanel id="view" layout="block" styleClass="view">
        <div class="mass-convert-wrapper">
            <img height="25px;" style="float:left;" class="leandata_logo" src="{!URLFOR($Resource.DashboardImages,'LD-logo_2x.png')}"/>
            <div class="accountNameHeader page-description"/>
            <div class="clear" />
            <div class="loadingDiv">
                <c:loading />
            </div>
            <div class="loadedDiv" style="display:none;">
                <apex:form >
                    <apex:pageMessages />
                    
                    <div class="wrapper">
                        <div class="left">
                            <span class="table_title"><h3><span class="title">Matched Account Detail</span></h3></span>
                        </div>
                        
                    </div>
                    <div class="outer-panel" >
                        <div class="inner-panel" style="text-align:left;margin:0 auto;">
                            <div class="scroll-panel open-activities-div">
                                <apex:pageBlock mode="maindetail">
                                    <div class="infoSection">
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Account Owner</span>
                                            <span class="infoLabel-content" id="accountOwnerInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Account Name</span>
                                            <span class="infoLabel-content" id="accountNameInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Industry</span>
                                            <span class="infoLabel-content" id="industryInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Annual Revenue</span>
                                            <span class="infoLabel-content" id="annualRevenueInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <div class="infoLabel-heading" style="float:left;">Billing Address</div>
                                            <div class="infoLabel-content" id="billingAddressInfoLabel" style="float:left;"/>
                                        </div>
                                    </div>
                                    
                                    <div class="infoSection">
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Phone</span>
                                            <span class="infoLabel-content" id="phoneInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Fax</span>
                                            <span class="infoLabel-content" id="faxInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Website</span>
                                            <span class="infoLabel-content" id="websiteInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <span class="infoLabel-heading">Employees</span>
                                            <span class="infoLabel-content" id="employeesInfoLabel" />
                                        </div>
                                        
                                        <div class="infoLabel">
                                            <div class="infoLabel-heading" style="float:left;">Shipping Address</div>
                                            <div class="infoLabel-content" id="shippingAddressInfoLabel" style="float:left;" />
                                        </div>
                                    </div>
                                </apex:pageBlock>
                            </div>
                        </div>
                    </div>
                    
                    

                    <div class="wrapper">
                        <div class="left">
                            <span class="table_title"><h3><span class="title">Related Leads</span></h3></span>
                        </div>
                        
                    </div>
                    <div class="outer-panel" >
                        <div class="inner-panel">
                          <div class="scroll-panel open-activities-div">
                            <div class="right">
                              <a href="{!$Page.dashboard}#view/related_leads" target="_blank" class="action_link ld-green">Related Lead Settings</a>
                            </div>
                            <div id="objectTable">
                                <div id="objectTableControls">
                                    <label class="cb-container-small">
                                      <span>Select All Leads</span>
                                      <input id="selectAllLeads" type="checkbox" checked="true" />
                                      <span class="checkmark"></span>
                                    </label>
                                    <span class="controlLabel" id="totalLeadsLabel" />
                                    <span class="controlLabel"> Set Owner</span>
                                    <select id="selectOwnerPicklist" />
                                    <span class="controlLabel"> Set Contact Role</span>
                                    <select id="selectRolePicklist" />
                                    <span class="controlLabel"> Set Converted Status</span>
                                    <select id="selectConvertedStatusPicklist" />
                                </div>
                            </div>
                          </div>
                        </div>
                    </div>         
     
                    <div class="wrapper">
                        <div class="left">
                            <span class="table_title"><h3><span class="title">Options</span></h3></span>
                        </div>
                        
                    </div>
                    <div class="outer-panel" >
                        <div class="inner-panel">
                            <div class="scroll-panel input-options-div">
                                <div style="margin-bottom: 10px">
                                    <label class="cb-container-small">
                                      <span> Do not create a new opportunity upon conversion </span>
                                      <apex:inputCheckbox value="{!doNotCreateOpportunity}"/>
                                      <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div style="margin-bottom: 10px">
                                    <label class="cb-container-small">
                                      <span> Notify me via email when lead conversion is complete </span>
                                      <apex:inputCheckbox value="{!sendEmail}"/>
                                      <span class="checkmark"></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>         
                    
                    <div class="buttonsDiv">
                        <button type="button" class="ld-tertiary-small-button" onclick="redirect();"> Cancel </button>
                        <button type="button" class="ld-tertiary-small-button" onclick="ga_event2('Mass converting L2A matched leads'); massConvert()"> Mass Convert </button>
                    </div>
                    
                    <apex:actionFunction name="massConvertAF" action="{!convert}" reRender="x" oncomplete="redirect();">
                        <apex:param name="p1" assignTo="{!convertParametersString}" value="" />
                        <apex:param name="p2" assignTo="{!mode}" value="" />
                    </apex:actionFunction>
                </apex:form>
            </div>
        </div>
        </apex:outputPanel>
    </c:accessCheck>
    <script>
        var viewObject;
        var numSelectedLeads = 0;
        var paginatedTable;

        j$ = jQuery.noConflict();

        j$('document').ready(function() {
            getViewObject();
        });
        
        function redirect() {
            var id = getParameterByName('id');
            top.location.replace('/' + id);
        }
                        
        function massConvert() {
            var dataTableRows = j$("#related_leads_table").DataTable().rows().nodes();
            var convertData = {};
            var hasConverted = false;
            for(var i=0;i<dataTableRows.length;i++) {
                    var row = j$(dataTableRows[i]);
                if(row.find(".convertCheckbox")[0].checked) {
                    hasConverted = true;
                    rowConvertData = {}
                    rowConvertData["owner"] = row.find(".selectOwnerPicklist")[0].value;
                    if(!rowConvertData["owner"]) {
                        alert('Please select an Owner for ' + row.data("lead-name"));
                        return;
                    }
                    rowConvertData["contact role"] = row.find(".selectRolePicklist")[0].value;
                    rowConvertData["converted status"] = row.find(".selectConvertedStatusPicklist")[0].value;
                    if(rowConvertData["converted status"] == 'None') {
                        alert('Please select a Converted Status for ' + row.data("lead-name"));
                        return;
                    }
                    convertData[row.data("lead-id")] = rowConvertData;
                }
            }
            if(hasConverted == false) {
                alert('Please select at least one lead for conversion.');
                return;
            }
            j$('.loadedDiv').hide();
            j$('.loadingDiv').show();
                
            if(viewObject['mode'] == 'Account') {
                j$('#loading_label').text('Initializing conversion process... Will redirect to the Account page upon successful initialization.');
            } else { 
                j$('#loading_label').text('Initializing conversion process... Will redirect to the Home upon successful initialization.');
            }

            massConvertAF(JSON.stringify(convertData), viewObject['mode']);
        }
        
        function getViewObject() {
        
            var id = getParameterByName('id') == '' ? getParameterByName('Id') : getParameterByName('id');
            
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.MassConvertController.getViewObject}', id,
                function(result, event) {
                    if (event.type === 'exception') {
                        console.log("exception");
                        console.log(event);
                    } else if (event.status) {
                        viewObject = result;
                        console.log(result);
                        generatePage();
                    }
                });
        }

        function updateSelectedLeadsLabel() {
            j$('#totalLeadsLabel').text('Total Leads Selected: ' + numSelectedLeads);
        }
        
        function generatePage() {
            var dateFields = [];
            var currencyFields = [];
            
            viewObject['columns'].forEach(function(col) {
                if(col.indexOf('Date') != -1) {
                    specialFormattingNeeded[col] = formatDateTime;
                }
                
                if(col.indexOf('Revenue') != -1) {
                    specialFormattingNeeded[col] = formatCurrency;
                }
            });
            generatePageHeadings();
            generateTableControls();
            generateTable();
            j$('.loadedDiv').show();
            j$('.loadingDiv').hide();
        }
        
        function generatePageHeadings() {
            var currentObject = viewObject["primary"];
            console.log('PRIMARY');
            console.log( currentObject );
            if(viewObject["mode"] == 'Account') {
                j$('.accountNameHeader').html( currentObject['Name']);
                j$('#accountNameInfoLabel').html(getColumnValueFromRecord(currentObject, 'Name'));
            } else {
                j$('.accountNameHeader').html(getColumnValueFromRecord(currentObject, 'Company') + ' (New Account Related Leads)');
                j$('#accountNameInfoLabel').html(getColumnValueFromRecord(currentObject, 'Company'));
                j$('.massConvertButton').text('Create New Account & Convert');
            }

            j$('#accountOwnerInfoLabel').html(getColumnValueFromRecord(currentObject, 'OwnerId'));
            j$('#industryInfoLabel').html(getColumnValueFromRecord(currentObject, 'Industry'));
            j$('#annualRevenueInfoLabel').html(getColumnValueFromRecord(currentObject, 'AnnualRevenue'));
            j$('#phoneInfoLabel').html(getColumnValueFromRecord(currentObject, 'Phone'));
            j$('#faxInfoLabel').html(getColumnValueFromRecord(currentObject, 'Fax'));
            j$('#websiteInfoLabel').html(getColumnValueFromRecord(currentObject, 'Website'));
            j$('#employeesInfoLabel').html(getColumnValueFromRecord(currentObject, 'NumberOfEmployees'));
            j$('#billingAddressInfoLabel').html(getAddressValue(currentObject, 'Billing'));
            j$('#shippingAddressInfoLabel').html(getAddressValue(currentObject, 'Shipping'));
        }
        function getAddressValue(currentObj, type){
            var fullAdd = '<div>';
            
            fullAdd += getColumnValueFromRecord(currentObj, type + 'Street') + '<br/>';
            fullAdd += getColumnValueFromRecord(currentObj, type + 'City') + ', ' + getColumnValueFromRecord(currentObj,type + 'State') + ' ' + getColumnValueFromRecord(currentObj, type + 'PostalCode') + ',' +  getColumnValueFromRecord(currentObj, type + 'Country'); 
            fullAdd += '</div>';
            return fullAdd;
        }
        function generateTableControls() {
            
            j$('#selectAllLeads').click(function() {
                var allChecked = this.checked;
                j$(j$("#related_leads_table").DataTable().rows().nodes()).find(".convertCheckbox:enabled").each(function() { this.checked = allChecked; });
                if(allChecked)
                    numSelectedLeads = viewObject["related leads"].length;
                else
                    numSelectedLeads = (viewObject["mode"] == "Lead") ? 1 : 0;
                updateSelectedLeadsLabel();
           });
           numSelectedLeads = viewObject["related leads"].length;
           updateSelectedLeadsLabel();

            var selectOwnerPicklist = j$('#selectOwnerPicklist')[0];
            var defaultOption = document.createElement("option");
            defaultOption.text = 'None';
            defaultOption.value = '';
            selectOwnerPicklist.appendChild(defaultOption);
            //Create and append the options
            for (var j = 0; j < viewObject["active users"].length; j++) {
                var option = document.createElement("option");
                option.text = viewObject["active users"][j].Name;
                option.value = viewObject["active users"][j].Id;
                selectOwnerPicklist.appendChild(option);
            }
            
            selectOwnerPicklist.onchange = function() {
                j$(paginatedTable.fnGetNodes()).find('.selectOwnerPicklist').each(function() {
                    this.value = j$('#selectOwnerPicklist').val();
                });
            };

            var selectRolePicklist = j$('#selectRolePicklist')[0];
            for (var j = 0; j < viewObject["contact roles"].length; j++) {
                var option = document.createElement("option");
                option.text = viewObject["contact roles"][j];
                option.value = option.text == 'None' ? '' : viewObject["contact roles"][j];
                selectRolePicklist.appendChild(option);
            }

            selectRolePicklist.onchange = function() {
                j$(paginatedTable.fnGetNodes()).find('.selectRolePicklist').each(function() {
                    this.value = j$('#selectRolePicklist').val();
                });
            };

            var selectConvertedStatusPicklist = j$('#selectConvertedStatusPicklist')[0];
            var elementIncrementor = 0;
            var secondElement;
            //Loop through lead statuses. MasterLabel as the label and ApiName as the value
            for (var key in viewObject["leadStatusApiNameToLabel"]) {
                elementIncrementor++;
                if(elementIncrementor==2)
                    secondElement = key;
                var option = document.createElement("option");
                option.text =j$("<div/>").html(viewObject["leadStatusApiNameToLabel"][key]).text();
                option.value = j$("<div/>").html(key).text();
                selectConvertedStatusPicklist.appendChild(option);
            }
            //Default the converted status if there is only one valid converted status(and "None")
            if (elementIncrementor==2) {
                var dummy = document.createElement('textarea');
                dummy.innerHTML = secondElement[key]; // decode HTML entities such as &, ""
                j$(selectConvertedStatusPicklist).val(key);
            }

            selectConvertedStatusPicklist.onchange = function() {
                j$(paginatedTable.fnGetNodes()).find('.selectConvertedStatusPicklist').each(function() {
                    this.value = j$('#selectConvertedStatusPicklist').val();
                });
            };
        }

        function generateTable(currentPage) {

            var tableParent = document.getElementById("objectTable");
            j$('#objectTable').find('table').remove();
            // create elements <table> and a <tbody>
            var tbl = document.createElement("table");
            tbl.id = 'related_leads_table';
            tbl.className = "list paginated";
            var thead = document.createElement("thead");
            var row = document.createElement("tr");

            for (var i = 0; i < viewObject["columnNames"].length; i++) {
                var headerCell = document.createElement("th");
                var headerText = document.createTextNode(viewObject["columnNames"][i]);
                console.log( headerText );
                console.log( viewObject["columnNames"][i] );
                headerCell.appendChild(headerText);
                row.appendChild(headerCell);
            }

            thead.appendChild(row);

            var tbody = document.createElement("tbody");
            var index = 0;
            for (var index=0;index<viewObject["related leads"].length;index++) {
                lead = viewObject["related leads"][index];
                row = document.createElement("tr");
                row.value = lead.Id;
                row.className = "dataRow";
                row.setAttribute("onmouseover", "if (window.hiOn){hiOn(this);}");
                row.setAttribute("onmouseout", "if (window.hiOff){hiOff(this);}");
                row.setAttribute("onblur", "if (window.hiOff){hiOff(this);}");
                row.setAttribute("onfocus", "if (window.hiOn){hiOn(this);}");
                row.setAttribute("data-lead-name", lead.Name);
                row.setAttribute("data-lead-id", lead.Id);

                for (var i = 0; i < viewObject["columns"].length; i++) {
                    var cell = document.createElement("td");

                    if (viewObject["columns"][i] == 'Convert') {
                        var cbLabel = document.createElement('label');
                        cbLabel.className = 'cb-container-small';

                        var newCheckBox = document.createElement('input');
                        if((viewObject["mode"] == "Lead") && (index == 0)) {
                            newCheckBox.disabled = true;
                        }
                        newCheckBox.type = 'checkbox';
                        newCheckBox.id = 'convert_' + lead.Id;
                        newCheckBox.className = 'convertCheckbox';
                        newCheckBox.value = lead.Id;
                        newCheckBox.checked = true;
                        newCheckBox.onclick = function() { 
                            if(!this.checked) 
                                j$('#selectAllLeads')[0].checked = false;
                            numSelectedLeads = this.checked ? (numSelectedLeads + 1) : (numSelectedLeads - 1);
                            updateSelectedLeadsLabel();
                        };
                        cbLabel.appendChild(newCheckBox);

                        var checkmark = document.createElement('span');
                        checkmark.className = 'checkmark';
                        cbLabel.appendChild(checkmark);
                        
                        cell.appendChild(cbLabel);
                    } else if (viewObject["columns"][i] == 'Owner') {

                        var selectList = document.createElement("select");
                        selectList.id = "selectOwner_" + lead.Id;
                        selectList.className = "selectOwnerPicklist";

                        //Create and append the options
                        for (var j = 0; j < viewObject["active users"].length; j++) {
                            var option = document.createElement("option");
                            option.text = viewObject["active users"][j].Name;
                            option.value = viewObject["active users"][j].Id;
                            if (viewObject["active users"][j].Name == lead['Owner']['Name']) option.selected = true;
                            selectList.appendChild(option);
                        }
                        
                        cell.appendChild(selectList);

                    } else if (viewObject["columns"][i] == 'Contact Role') {

                        var selectList = document.createElement("select");
                        selectList.id = "selectRole_" + lead.Id;
                        selectList.className = "selectRolePicklist";

                        //Create and append the options
                        for (var j = 0; j < viewObject["contact roles"].length; j++) {
                            var option = document.createElement("option");
                            option.text = viewObject["contact roles"][j];
                            option.value = option.text == 'None' ? '' : viewObject["contact roles"][j];
                            selectList.appendChild(option);
                        }

                        cell.appendChild(selectList);
                    } else if (viewObject["columns"][i] == 'Converted Status') {

                        var selectList = document.createElement("select");
                        selectList.id = "selectConvertedStatus_" + lead.Id;
                        selectList.className = "selectConvertedStatusPicklist";

                        //Create and append the options
                        var elementIncrementor = 0;
                        var secondElement;
                        //Loop through lead statuses. MasterLabel as the label and ApiName as the value
                        for (var key in viewObject["leadStatusApiNameToLabel"]) {
                            elementIncrementor++;
                            if(elementIncrementor==2)
                                secondElement = key;
                            var option = document.createElement("option");
                            option.text = j$("<div/>").html(viewObject["leadStatusApiNameToLabel"][key]).text();
                            option.value = j$("<div/>").html(key).text();
                            if (key == lead["Status"]) option.selected = true; 
                            selectList.appendChild(option);
                        }
                        //Default the converted status if there is only one valid converted status(and "None")
                        if (elementIncrementor==2) {
                            var dummy = document.createElement('textarea');
                            dummy.innerHTML = viewObject["leadStatusApiNameToLabel"][key]; // decode HTML entities such as &, ""
                            selectList.value = key;
                        }

                        cell.appendChild(selectList);
                    } else {
                        var cellEl = document.createElement('div');
                        cellEl.innerHTML = getColumnValueFromRecord(lead, viewObject["columns"][i]);
                        cell.appendChild(cellEl);
                    }

                    row.appendChild(cell);
                }

                tbody.appendChild(row);
            }

            tbl.appendChild(thead);
            tbl.appendChild(tbody);
            tableParent.appendChild(tbl);
            
            tbl.setAttribute("border", "0");
            tbl.setAttribute("cellpadding", "0");
            tbl.setAttribute("cellspacing", "0");
            paginatedTable = j$('.paginated');
            initializeDataTable(paginatedTable, 'mass-convert');
        }
    </script>
</apex:page>