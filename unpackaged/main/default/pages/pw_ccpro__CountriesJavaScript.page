<apex:page controller="pw_ccpro.StaticCountries" sidebar="false" showHeader="false" contentType="application/javascript" cache="false">
	var pw_cc_countries = new Object();
	
	pw_cc_countries.countries = [{!countryList}];
	pw_cc_countries.countryIso31662codes = [{!iso2CodeList}];
	pw_cc_countries.countryIso31663codes = [{!iso3CodeList}];
	pw_cc_countries.altCountries = {{!alternativeCountryMap}};
	pw_cc_countries.states = {{!stateMap}};
	pw_cc_countries.stateCodes = {{!stateCodeMap}};
	pw_cc_countries.altStates = {{!alternativeStateMap}};
	pw_cc_countries.zipCodeRegExps = {{!zipCodeRegExMap}};
	pw_cc_countries.zipCodeFailMsgs = {{!zipCodeFailMap}};
	
	pw_cc_countries.countryHash = new Object();
	pw_cc_countries.countryCodeHash = new Object();
	for (var i = 0; i &lt; pw_cc_countries.countries.length; i++) {
		pw_cc_countries.countryHash[pw_cc_countries.countries[i]] = pw_cc_countries.countryIso31662codes[i];
		pw_cc_countries.countryHash[pw_cc_countries.countryIso31662codes[i]] = pw_cc_countries.countryIso31662codes[i];
		pw_cc_countries.countryHash[pw_cc_countries.countryIso31663codes[i]] = pw_cc_countries.countryIso31662codes[i];
		pw_cc_countries.countryCodeHash[pw_cc_countries.countryIso31662codes[i]] = pw_cc_countries.countries[i];
	}
	for (var countryCode in pw_cc_countries.altCountries) {
		var alts = pw_cc_countries.altCountries[countryCode];
		for (var i = 0; i &lt; alts.length; i++) {
			pw_cc_countries.countryHash[alts[i]] = countryCode;
		}
	}
	
	pw_cc_countries.getCountryCode = function(country) {
		return pw_cc_countries.countryHash[country] || '';
	}
	
	pw_cc_countries.quickCompleteCountry = '{!quickCompleteCountry}';
	pw_cc_countries.stateHash = new Object();
	for (var countryCode in pw_cc_countries.states) {
		var stateNames = pw_cc_countries.states[countryCode];
		var stateCodes = pw_cc_countries.stateCodes[countryCode];
		var altStateNames = [];
		var stateMap = pw_cc_countries.altStates[countryCode];
		if (stateMap != null) {
			for (var stateCode in stateMap) {
				var altNames = stateMap[stateCode];
				if (altNames != null) {
					for (var i = 0; i &lt; altNames.length; i++) {
						altStateNames.push(altNames[i]);
					}
				}
			}
		}
		var states = stateNames.concat(stateCodes, altStateNames);
		for (var i = 0; i &lt; states.length; i++) {
			if (typeof(pw_cc_countries.stateHash[states[i]]) == 'undefined') {
				pw_cc_countries.stateHash[states[i]] = countryCode;
			} else {
				if (countryCode == pw_cc_countries.getCountryCode(pw_cc_countries.quickCompleteCountry)) {
					pw_cc_countries.stateHash[states[i]] = countryCode;
				} else {
					if (pw_cc_countries.stateHash[states[i]] != pw_cc_countries.getCountryCode(pw_cc_countries.quickCompleteCountry)) {
						pw_cc_countries.stateHash[states[i]] = '';
					}
				}
			}
		}
	}
	
	pw_cc_countries.allStates = new Array();
	for (var countryCode in pw_cc_countries.states) {
		pw_cc_countries.allStates = pw_cc_countries.allStates.concat(pw_cc_countries.states[countryCode]);
	}
	pw_cc_countries.allStates.sort();
	
	pw_cc_countries.checkCountry = function(country) {
		return pw_cc_countries.countryHash[country];
	}
	
	pw_cc_countries.getCountryNames = function() {
		return pw_cc_countries.countries;
	}
	
	pw_cc_countries.getStateNames = function(country) {
		var countryCode = pw_cc_countries.getCountryCode(country);
		// We return a copy of the states array for encapsulating the internal data.
		return pw_cc_countries.states[countryCode] &amp;&amp; pw_cc_countries.states[countryCode].length > 0
            ? pw_cc_countries.states[countryCode].slice() 
            : new Array();
	}
	
	pw_cc_countries.getCountryName = function (country) {
		if (country) {
			var countryCode = pw_cc_countries.checkCountry(country);
			if (countryCode) {
				var i = 0;
				while(i &lt; pw_cc_countries.countryIso31662codes.length &amp;&amp; pw_cc_countries.countryIso31662codes[i] != countryCode) {
					i++;
				}
				if (i &lt; pw_cc_countries.countryIso31662codes.length) {
					return pw_cc_countries.countries[i];
				} else {
					return country;
				}
			} else {
				return country;
			}
		}
		return "";
	}
	
	pw_cc_countries.getStateName = function(state, countryName) {
		if (!state) return "";
		var countryCode = pw_cc_countries.getCountryCode(countryName);
		var stateNames = pw_cc_countries.states[countryCode] || new Array();
		var stateCodes = pw_cc_countries.stateCodes[countryCode] || new Array();
		var i = 0;
		while (i &lt; stateNames.length &amp;&amp; stateNames[i].toUpperCase() != state.toUpperCase()) { i++; }
		if (i &lt; stateNames.length) {
			return stateNames[i];
		}
		i = 0;
		while (i &lt; stateCodes.length &amp;&amp; stateCodes[i].toUpperCase() != state.toUpperCase()) { i++; }
		if (i &lt; stateCodes.length) {
			return stateNames[i]; // return state name
		}
		return state;
	}
	
	pw_cc_countries.getStateCode = function(state, country) {
		var countryCode = pw_cc_countries.getCountryCode(country);
		var stateNames = pw_cc_countries.states[countryCode] || new Array();
		var stateCodes = pw_cc_countries.stateCodes[countryCode] || new Array();
		var i = 0;
		while (i &lt; stateCodes.length &amp;&amp; stateCodes[i].toUpperCase() != state.toUpperCase()) { i++; }
		if (i &lt; stateCodes.length) {
			return stateCodes[i];
		}
		i = 0;
		while (i &lt; stateNames.length &amp;&amp; stateNames[i].toUpperCase() != state.toUpperCase()) { i++; }
		if (i &lt; stateNames.length) {
			return stateCodes[i]; // return state code
		}
		return '';
	}
	
	pw_cc_countries.getAllStateNames = function() {
		return pw_cc_countries.allStates;
	}
			
	pw_cc_countries.getCountryByState = function(state) {
		var st = pw_cc_countries.stateHash[state];
		if (st == '') return null; // multiple countries found
		if (typeof(st) == 'undefined') return ''; // no countries found
		return pw_cc_countries.countryCodeHash[st] || '';	
	}
	
	pw_cc_countries.getZipCodeRegExp = function(country) {
		var countryCode = pw_cc_countries.getCountryCode(country);
		return pw_cc_countries.zipCodeRegExps[countryCode];
	}
	
	pw_cc_countries.getZipCodeFailMsg = function(country) {
		var countryCode = pw_cc_countries.getCountryCode(country);
		return pw_cc_countries.zipCodeFailMsgs[countryCode];
	}
	
	pw_cc_countries.isFullMatched = function(str, ptr) {
		var result = str.replace(new RegExp(ptr), '');
		return result.length == 0;
	}

	pw_cc_countries.isZipCodeValidForCountry = function(zipCode, country) {
		var countryCode = pw_cc_countries.getCountryCode(country);
		var pattern = pw_cc_countries.getZipCodeRegExp(countryCode);
		if (pattern &amp;&amp; zipCode) {
			if (pw_cc_countries.isFullMatched(zipCode, pattern)) {
				return pw_cc_countries.countryCodeHash[countryCode];
			}
		}
		return '';
	}
				
	pw_cc_countries.objectTypeNames  = [{!objectNames}];
	pw_cc_countries.objectPrefix  = [{!objectPrefix}];
	pw_cc_countries.validationFieldsNames  = [{!nameList}];
	pw_cc_countries.countryFieldIds = [{!countryFieldIdList}];
	pw_cc_countries.stateFieldIds = [{!stateFieldIdList}];
    pw_cc_countries.countyFieldIds = [{!countyFieldIdList}];
	pw_cc_countries.zipFieldIds = [{!zipFieldIdList}];
	pw_cc_countries.cityFieldIds = [{!cityFieldIdList}];
	pw_cc_countries.streetFieldIds = [{!streetFieldIdList}];
	pw_cc_countries.statusFieldIds = [{!statusFieldIds}];
	pw_cc_countries.sfdcStatusIds = [{!sfdcStatusIds}];
	pw_cc_countries.customFieldOptions = [{!customFieldOptions}];
    pw_cc_countries.countyFieldLabels = [{!sfdcCountyLabels}];
	pw_cc_countries.statusFieldLabels = [{!sfdcStatusLabels}];
	pw_cc_countries.sourceFieldLabels = [{!sfdcSourceLabels}];
	pw_cc_countries.accuracyFieldLabels = [{!sfdcAccuracyLabels}];
	pw_cc_countries.latitudeFieldIds = [{!latitudeFieldIds}];
	pw_cc_countries.longitudeFieldIds = [{!longitudeFieldIds}];
	pw_cc_countries.accuracyFieldIds = [{!accuracyFieldIds}];
	pw_cc_countries.sourceFieldIds = [{!sourceFieldIds}];
	pw_cc_countries.sfdcOptions = [{!sfdcOptions}];
	pw_cc_countries.zipCodeLookupEnabled = {!zipCodeLookupEnabled};
	pw_cc_countries.IsLoaded = true;
	pw_cc_countries.disabledPages = [{!DisabledPages}];
	pw_cc_countries.objectId = '';
	pw_cc_countries.sessionId = '{!SessionId}';
	pw_cc_countries.serverUrl = '{!ServerUrl}';
	pw_cc_countries.styleUrl = '{!URLFOR($Resource.CountryCompleteResources, "/css/CountryAutoComplete.css")}';
</apex:page>