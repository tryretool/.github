<apex:page controller="LeanData.BuyerPersonaController" sidebar="false" standardStylesheets="false" docType="html-5.0">
<apex:stylesheet value="{!URLFOR($Resource.LeanData__JqueryUI, 'jquery-ui-1.11.4.custom/jquery-ui.css')}"  />
<style>
  .bs td{
    padding:5px;
  }
  body ,td{
    font-family:"Open Sans", sans-serif;
    color:#1b527f;
    font-weight:100;
  }
  .bs .container{
    /*spacing of content and sidebar*/
    padding-left:0px;
  }
  .bs input {
    font-weight:100;
  }
  .bs{
    font-weight:100 !important;
  }
  .bs .btn-sm{
    padding:2px 18px; !important;
  }
  .bs label{
    font-weight:100; !important;
  }
  .bs .header{
    z-index:0;
  }
  body .bPageFooter {
    height:40px;
  }
  /* sidebar */
  /* header*/
  .bs .header-title h2{
    color:white !important;
  }
  .bs .container {
   margin-left:0px !important;
   padding:0px !important;
  }
  .Header {
    font-size:16px;
    font-weight:normal;
  }
  .bs .btn {
    padding:6px 25px !important;
  }
  /*main content*/
  .bs a {
    /*color of commandLink*/
    color:#1b527f;
  }
   .ActiveButton {
    border:transparent !important; 
    background-color:#00accf !important;
  }
  .InactiveButton { 
    border:transparent !important; 
    background-color:#bfced5 !important;
  }
  .editDelLink{
    font-size:13px; 
    font-weight:bold;
  }
  .SelectList{
    background: url({!URLFOR($Resource.LeanData__DropDownArrow)}) no-repeat 99%;
    background-size:10px,5px;
    padding-left:5px;
    background-color:#f5f5f5 !important;
    border-radius:0px;
    border:transparent;
  }

  .InputText{
    padding-left:5px; 
    background-color:#f5f5f5;
    border:transparent;
  }
  .AddIcon{
     background-image:url({!$Resource.LeanData__grayAddIcon});
     background-size:15px,7.5px;
     background-repeat:no-repeat;
     background-position:left center;
  }
  .DelIcon{
     background-image:url({!$Resource.LeanData__grayDelIcon});
     background-size:15px,7.5px;
     background-repeat:no-repeat;
     background-position:left center;
  }
  .AllConditionLink{
    background: url({!URLFOR($Resource.LeanData__DropDownArrow)}) no-repeat;
    background-position:right;
    background-size:10px,5px;
    font-weight:100;
    font-size:11px;
    padding-right:12px;
  }
  .FewerConditionLink{
    background: url({!URLFOR($Resource.LeanData__UpArrow)}) no-repeat 99%;
    background-position:right;
    background-size:10px,5px;
    font-weight:100;
    font-size:11px;
    padding-right:12px;
  }

  .ActionTable td{
    padding:2px;
  }
  .LeadTable td{
    padding:5px;
  }
  .ContactTable td{
    padding:5px;
  }
  .LeadTable{
     display:block;
  }
  .ContactTable{
   display:block;
  }
  table .SummaryTable td{
    padding:5px;
  }
  table .SummaryTable tr:nth-child(even) {
    background-color:#f5f5f5;
  }
  table .SummaryTable {
    margin-left:57px;
    display:block;
  }
  .DateTable td{
    padding:5px;
  }
  .HistoryTable td{
    padding:5px;
    font-size:14px;
  }
  .HistoryTable tr:nth-child(even) {
    background-color:#f5f5f5;
  }

  /*side bar*/
  .logo{
   margin-left:20px !important;
  }
  .bs .sideBackground{
    border-radius:0px;
    border:transparent;
    padding:10px;
    height:40px;
    width:100%;
  }
  .bs .whiteSideBackground{
    background-color: #ffffff;
    border-radius:0px;
    border:transparent;
    padding:10px;
    height:40px;
    width:100%;
  }
  .bs .sideBackground:hover {
    background-color: #ebeff0;       
  }
  ul { list-style-type: none; }
  .SummaryBar{
   background: url({!URLFOR($Resource.LeanData__WhiteSummaryIcon)}) no-repeat left center;
   margin-left:20px;
   background-size:20px 20px;
  }
  .WhiteSummaryBar{
   background: url({!URLFOR($Resource.LeanData__SummaryIcon)}) no-repeat left center;
   margin-left:20px;
   background-size:20px 20px;
  }
  .ToolsSettingsBar{
   background: url({!URLFOR($Resource.LeanData__WhiteToolsSettingsIcon)}) no-repeat left center;
   margin-left:20px;
   background-size:20px 20px;
  }
  .WhiteToolsSettingsBar{
   background: url({!URLFOR($Resource.LeanData__ToolsSettingsIcon)}) no-repeat left center;
   margin-left:20px;
   background-size:20px 20px;
  }
   
  .AddPersonaBar{
   background: url({!URLFOR($Resource.LeanData__NewPersonaIcon)}) no-repeat left center;
   margin-left:20px;
   background-size:20px 20px;
  }
  .SideFont{
   padding-left:25px;
   white-space:nowrap;
   font-size:14px;
   color:#ffffff;
  }
  /*lightbox*/
  .bs .LightBoxTable{
    display: table;
  }
  .bs .LightBoxTableCell{
    display: table-cell;
    vertical-align: middle;
  }
  .lightTable{
    width: 200px;
    border-collapse: collapse;
  }    
  .lightTable .ui-selected {
    background-color:#70797b;
  }
  .lightTable .ui-selecting { background: #EDEDED; }
  .lightTable td{
    padding: 5px;
    text-align: center;
  }
  .selectorContents{
    height: 300px;
    overflow: auto;        
  }
  .selectRow, .selectableCell{
    cursor : pointer;
  }
  /*loading page*/
  .loading {
    position: fixed;
    z-index: 999;
    height: 2em;
    width: 2em;
    overflow: show;
    margin: auto;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }
    
  /* Transparent Overlay */
  .loading:before {
    content: '';
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.3);
  }
    
  /* :not(:required) hides these rules from IE9 and below */
  .loading:not(:required) {
    /* hide "loading..." text */
    font: 0/0 a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
  }
    
  .loading:not(:required):after {
    content: '';
    display: block;
    font-size: 10px;
    width: 1em;
    height: 1em;
    margin-top: -0.5em;
    -webkit-animation: spinner 1500ms infinite linear;
    -moz-animation: spinner 1500ms infinite linear;
    -ms-animation: spinner 1500ms infinite linear;
    -o-animation: spinner 1500ms infinite linear;
    animation: spinner 1500ms infinite linear;
    border-radius: 0.5em;
    -webkit-box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.5) -1.5em 0 0 0, rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;
    box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) -1.5em 0 0 0, rgba(0, 0, 0, 0.75) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;
  }
  input[type="checkbox"] {
    -webkit-appearance: radio;
    -moz-appearance: radio;
    -ms-appearance: radio;     
    -o-appearance: radio;    
  }
  .bs input[type=radio] { 
    margin-left: 10px;
  }  
  .RadioClass{
    margin-left:-10px;
  }
   /* sideBar button */
  .sortable li {
    list-style: none;
    /*border-top: solid 1px #ccc;*/
    background-color: #70797b;
    cursor: pointer;
   
    .sort-handle {
      width: 30px;
      height: 30px;
      line-height: 30px;
      text-align: center;
      /*cursor: n-resize;*/
    }
  }
  span .ui-icon{
    width:2px !important;
  }
  .sortable .ui-selected {
    width:100%;
  }
  .sortable .ui-selected  a{
    color:#1b527f;
  }
  .sortable .ui-selecting  a{
    color:white;
  }
  .sortable .ui-selectable {
    .ui-sortable-helper {
      @include border-radius(4px);
    }
    .sortable .ui-selected span  a{
      color:#1b527f;
    }
  }
  ::-webkit-scrollbar { 
    display: none; 
  }

  #left-sidebar {
    height: 1242px;
    background-color: #70797b;
    color: #ffffff;
    width: 240px;
    padding: 0px;
    overflow: auto;
    position: absolute;
  }
  #main-content {
    padding: 0 0 0 240px;
    width: 100%;
    float: left;
  }
  .blueButton {
    background-color:#0088cc;
    text-shadow:0px 1px 0px #263666;
    -moz-box-shadow:inset 0px -3px 7px 0px #0088cc;
    -webkit-box-shadow:inset 0px -3px 7px 0px #0088cc;
    box-shadow:inset 0px -3px 7px 0px #0088cc;
  }
  .blueButton:hover {
    background-color:#0688fa;
    color:$white;  
  }
  .blueButton:active {
    position:relative;
    top:1px;
  }
  .bs .darkBlueButton{
    background-color: #043e57;
  }
  .bs .darkBlueButton:hover{
     background-color: #055070;
  }
</style>

<apex:outputPanel rendered="{! !hasPermission}">You do not have the correct Permision Set to see this page. Please contact your Salesforce administrator.</apex:outputPanel>

<apex:outputPanel rendered="{! hasPermission}">
<apex:form >
  <apex:composition template="LeanData__Template">
    <!------------------------------------Side Bar------------------------------------------------>
    <apex:define name="sideBarContent">
    <apex:outputPanel id="SideBar" style="overflow-y:scroll;width:240px;" layout="block">
      <!---setting sidebar----->
      <apex:outputPanel id="unsortable">
      <apex:outputPanel rendered="{! !showSettings}" styleClass="sideBackground" layout="block" style="width:100%;">
        <apex:commandLink styleClass="ToolsSettingsBar SideFont" style="color:#ffffff" value="Tools & Settings"  action="{! toolsAndSetting}" onComplete="resizeSideBar();resizeWidth();bindToolsAndSettingsJS();ss();resizeSetting();resetValue('setting'); resetColor('')" reRender="MainPage,Head,unsortable"/>
      </apex:outputPanel>
      <apex:outputPanel rendered="{! showSettings}"  styleClass="whiteSideBackground" layout="block" style="width:100%;">
        <apex:commandLink styleClass="WhiteToolsSettingsBar SideFont" value="Tools & Settings"  action="{! toolsAndSetting}" onComplete="resizeSideBar();resizeWidth();bindToolsAndSettingsJS();ss();resizeSetting();resetValue('setting'); resetColor('');" reRender="MainPage,Head"/>
      </apex:outputPanel>
      <!---summary sidebar----->
      <apex:outputPanel rendered="{! !showSummary}" styleClass="sideBackground" layout="block" style="width:100%;">
        <apex:commandLink styleClass="SummaryBar SideFont" style="color:white;" value="Summary" action="{! summary}" onComplete="resizeSideBar();resizeWidth();ss();resizeTable();resetValue('summary');resetColor('');" reRender="MainPage,Head,unsortable"/>
      </apex:outputPanel>
      <apex:outputPanel rendered="{! showSummary}" styleClass="whiteSideBackground" layout="block" style="width:100%;">
        <apex:commandLink styleClass="WhiteSummaryBar SideFont" value="Summary" action="{! summary}" onComplete="resizeSideBar();resizeWidth();ss();resizeTable();resetValue('summary');resetColor('');" reRender="MainPage,Head"/>
      </apex:outputPanel>
      </apex:outputPanel>
      <!---single persona------>
      <ul class="sortable" style="margin-left:-50px;">
      <apex:repeat value="{! buyerPersonaIndexList}" var="index">
      <li><span class="sort-handle"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span><apex:commandLink styleClass="SideFont sider-button" style="color:#ffffff;" value="{! buyerPersonaList[index].Name}" action="{! showDefaultBuyerPersona}" onClick="resetColor('{! JSENCODE(buyerPersonaList[index].Name)}')" onComplete="resizeSideBar();resizeWidth();ss();resizeDetail();resetValue('edit');"  reRender="MainPage,Head,unsortable,persona_panel">
          <apex:param name="personaIndex" value="{! index}" assignTo="{! currentPersonaIndex}" />
        </apex:commandLink></span></li>
      </apex:repeat>
      </ul>
      <!-----new ----------->
      <apex:outputPanel styleClass="sideBackground" layout="block">
        <apex:commandLink rendered="{! hasPermission}" styleClass="AddPersonaBar SideFont" style="color:#ffffff;"  value="New Buyer Persona" action="{! addBuyerPersona}" onComplete="resizeSideBar();resizeWidth();ss();resizeDetail();resetValue('edit');" reRender="MainPage,Head,SideBar"/>
        <apex:commandLink rendered="{! !hasPermission}" styleClass="AddPersonaBar SideFont" style="color:#ffffff;"  value="New Buyer Persona" html-data-toggle="modal" html-data-target="#myModal5" html-data-backdrop="static" reRender="x"/>
      </apex:outputPanel>
    <apex:outputPanel styleClass="sideBackground" layout="block">
      <apex:commandLink styleClass="SideFront" style="color:#ffffff; margin-left:20px;" value="Save Persona Order" onclick="reorderPersona()" reRender="x"/>       
    </apex:outputPanel>
    </apex:outputPanel>
    </apex:define>
   
    <!--------------------------------Header-------------------------------------------------------->
    <apex:define name="mainHeader">
     <apex:outputPanel layout="block" Style="background-color:#043e57;margin-left:0px;text-align:left;padding-left:57px;" id="Head">
      <apex:outputPanel styleClass="Header" rendered="{! showSummary}">Buyer Persona: Summary</apex:outputPanel> 
      <apex:outputPanel styleClass="Header" rendered="{! showEdit}">Buyer Persona: Details</apex:outputPanel>
      <apex:outputPanel styleClass="Header" rendered="{! showSettings}">Buyer Persona: Tools &amp; Settings</apex:outputPanel>
     </apex:outputPanel>      
    </apex:define>
    <!--------------------------------Main Content-------------------------------------------------->
    <apex:define name="mainContent">
      <section class="container" style="margin-left:0px;">
        <div class="loading" style="display:none">Loading&#8230;</div>
        <apex:outputPanel id="MainPage" layout="block" style="height:100%;">
        <!--insufficient permission-->
        <div class="modal fade" id="myModal5" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-body">
          <h5>You do not have sufficient permissions to modify Buyer Persona settings. Please contact your Salesforce System Administrator.</h5>
        </div>
        <div class="modal-footer">
          <apex:commandLink style="padding: 5px 4px;" styleClass="btn btn-primary darkBlueButton" value="OK" onComplete="resizeSideBar();" html-data-dismiss="modal" reRender="MainPage,SideBar"/>
        </div>
        </div>
        </div>
        </div>
        <!---------summary---------------------------->
        <apex:outputPanel rendered="{! showSummary}" layout="block" id="summary">
        <apex:outputPanel rendered="{! buyerPersonaList.size==0}" layout="block" style="height:80px;">
         <span style="padding-left:57px;padding-top:10px;">No Buyer Persona defined!</span>
        </apex:outputPanel>
          <div style="overflow:hidden">
          <div style="overflow:auto;">
          <table class="SummaryTable">
            <tr>
            <td style="width:102px;"></td>
            <td style="font-weight:900;width:234px;"> Persona </td>
            <td style="font-weight:900;width:103px;"> Lead Field </td>
            <td style="font-weight:900;width:130px;"> Contact Field </td>
            <td style="font-weight:900;width:120px;" > Buyer Persona Value </td>
            <td style="font-weight:900;width:90px;"> #Lead Conditions </td>
            <td style="font-weight:900;width:90px;"> #Contact Conditions </td>
            <td style="font-weight:900;width:40px;">Status</td>
            </tr>
            <apex:repeat value="{! buyerPersonaIndexList}" var="index">
            <tr>
            <td>
             <apex:commandLink styleClass="editDelLink" value="Edit" action="{! showDefaultBuyerPersona}" oncomplete="resizeSideBar();resizeDetail();resetValue('edit');ss();" reRender="MainPage,Head,SideBar">
              <apex:param name="personaIndex" value="{! index}" assignTo="{! currentPersonaIndex}"/>
             </apex:commandLink>
             <span style="color:#337ab7;">|</span>
             <apex:commandLink rendered="{! hasPermission}" styleClass="editDelLink" value="Delete" html-data-toggle="modal" html-data-target="#myModal3" html-data-backdrop="static" reRender="x" >
               <apex:param name="PersonaNumber" value="{! index}" assignTo="{! deletePersonaIndex}"/>
             </apex:commandLink>
             <apex:commandLink rendered="{! !hasPermission}" styleClass="editDelLink" value="Delete" html-data-toggle="modal" html-data-target="#myModal5" html-data-backdrop="static" reRender="x"/>
            </td>
            <apex:outputText rendered="{! activityList[index]}">
              <td> {! buyerPersonaList[index].Name}</td>
              <td> {! IF (personaActionList[index].Lead_Field__c!='null' && personaActionList[index].Lead_Field__c != null,leadActionApiNameToTypeAndLabelMap[personaActionList[index].Lead_Field__c]['Label'],'null')}</td>
              <td> {! IF (personaActionList[index].Contact_Field__c!='null' && personaActionList[index].Contact_Field__c != null,contactActionApiNameToTypeAndLabelMap[personaActionList[index].Contact_Field__c]['Label'],'null')}</td>
              <td> {! personaActionList[index].Value__c}</td>
              <td> {! leadConditionNumList[index]}</td>
              <td> {! contactConditionNumList[index]}</td>
              <td>  Active </td>
            </apex:outputText>
            <apex:outputText rendered="{! !activityList[index]}">
              <td style="color:#b3b3b3;"> {! buyerPersonaList[index].Name}</td>
              <td style="color:#b3b3b3;"> {! IF (personaActionList[index].Lead_Field__c!='null' &&  personaActionList[index].Lead_Field__c != null,leadActionApiNameToTypeAndLabelMap[personaActionList[index].Lead_Field__c]['Label'],'null')}</td>
              <td style="color:#b3b3b3;"> {! IF (personaActionList[index].Contact_Field__c!='null' && personaActionList[index].Contact_Field__c != null,contactActionApiNameToTypeAndLabelMap[personaActionList[index].Contact_Field__c]['Label'],'null')}</td>
              <td style="color:#b3b3b3;"> {! personaActionList[index].Value__c}</td>
              <td style="color:#b3b3b3;"> {! leadConditionNumList[index]}</td>
              <td style="color:#b3b3b3;"> {! contactConditionNumList[index]}</td>
              <td style="color:#b3b3b3;">  Inactive </td>
            </apex:outputText>
            </tr>
            </apex:repeat>
          </table>
          </div>
          </div>
        </apex:outputPanel>
        <!------buyer persona delete window----------->
        <div class="modal fade" id="myModal3" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-body">
          <apex:outputPanel id="deleteInfoPanel">
            <apex:outputPanel rendered="{! !savePersonaDel}">Are you sure you want to delete?</apex:outputPanel>
            <apex:outputPanel rendered="{! savePersonaDel}"> delete successful!</apex:outputPanel>
          </apex:outputPanel>
        </div>
        <div class="modal-footer">
         <apex:outputPanel id="deleteButtonPanel">
            <apex:outputPanel rendered="{! !savePersonaDel}">
              <apex:commandLink style="padding: 5px 4px;" styleClass="btn btn-primary darkBlueButton" value="Delete" action="{! savePersonaDelete}"  onComplete="resizeSideBar();resizeTable();resetValue('summary');" reRender="deleteInfoPanel,deleteButtonPanel,SideBar"/>
              <apex:commandLink style="padding: 5px 4px;margin-left:15px;" html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="Cancel" action="{! cancelPersonaDelete}"  onComplete="resizeSideBar();resizeTable();resetValue('summary');" reRender="MainPage,SideBar"/>
            </apex:outputPanel>
            <apex:outputPanel rendered="{! savePersonaDel}">
              <apex:commandLink style="padding: 5px 4px;" styleClass="btn btn-primary darkBlueButton" value="OK" onComplete="resizeSideBar();" action="{! resetPersonaDel}" html-data-dismiss="modal" reRender="MainPage,SideBar" oncomplete="resizeTable();resetValue('summary');"/>
           </apex:outputPanel>
         </apex:outputPanel>
        </div>
        </div>
        </div>
        </div>
        <!------display single buyer persona ----------------------------------->
        <div class="detail" style="overflow:auto;">
        <apex:outputPanel rendered="{! showEdit}" layout="block"  style="padding-left:57px;padding-top:20px;overflow:auto;">
        <div><apex:outputPanel rendered="{! IF(AND(saveConfirmMessage!='have not be saved',errorMessageInDetails=='No Error'),true,false)}" style="color:red;padding-bottom:10px;padding-top:20px;">{! saveConfirmMessage}</apex:outputPanel></div>
          <!---buyer persona title--->
            Title
            <apex:inputText style="margin-left:10px;" styleClass="InputText" value="{! currentBuyerPersona.Name}"/>
            <!---active inactive button---->
            <span style="margin-left:10px;">
            <apex:commandLink styleClass="btn btn-primary btn-sm ActiveButton" value="Active" rendered="{! activeButton}" action="{! setActive}" reRender="MainPage" oncomplete="resizeDetail();"/>
            <apex:commandLink styleClass="btn btn-primary btn-sm InactiveButton" value="Inactive" rendered="{! activeButton}" action="{! setInactive}" reRender="MainPage" oncomplete="resizeDetail();"/>
            <apex:commandLink styleClass="btn btn-primary btn-sm InactiveButton" value="Active" rendered="{! !activeButton}" action="{! setActive}" reRender="MainPage" oncomplete="resizeDetail();"/>
            <apex:commandLink styleClass="btn btn-primary btn-sm ActiveButton" value="Inactive" rendered="{! !activeButton}" action="{! setInactive}" reRender="MainPage" oncomplete="resizeDetail();"/> 
            </span>
          <!---action table---->
          <table style="margin-top:30px;margin-bottom:30px;" class="ActionTable">
            <tr>
            <td style="font-weight:900;"> Lead Field </td>
            <td style="font-weight:900;"> Contact Field </td>
            <td style="font-weight:900;"> Buyer Persona Value </td>
            </tr>
            <tr>
            <td>
              <apex:selectList styleClass="SelectList" value="{! currentAction.Lead_Field__c}" size="1">
                <apex:selectOptions value="{! leadActionFieldSelectList}"/>
                <!--<apex:actionSupport event="onchange" action="{! resetSaveConfirmMessage}" reRender="MainPage,SideBar"/>-->
              </apex:selectList>
            </td>
            <td>
              <apex:selectList styleClass="SelectList" value="{! currentAction.Contact_Field__c}" size="1">
                <apex:selectOptions value="{! contactActionFieldSelectList }"/>
              </apex:selectList>
            </td>
            <td>
              <apex:inputText styleClass="InputText" value="{! currentAction.Value__c}" />
            </td>
            </tr>
          </table>
        <!--------errorMessage panel------------------------>
        <apex:outputPanel rendered="{! IF(errorMessageInDetails!='No Error',true,false)}" style="color:red;padding-bottom:10px;margin-top:40px;padding-left:57px;">{! errorMessageInDetails}</apex:outputPanel>
          <!------show  lead condition------------>
          
          <div style="margin-bottom:5px;padding-left:27px;padding-top:4px;padding-bottom:4px; background-color:#e1f0fb; width:100%;"><span style="font-weight:900;">Lead</span><span style="font-size:13px; padding-left:5px; font-weight:100;">( {! currentLeadConditionNum} conditions)</span> </div>
          <!---has lead conditon--->
          <apex:outputPanel layout="block" rendered="{! currentLeadConditionNum!=0}">
          <apex:actionFunction name="setLeadIndexAF" action="{! saveLeadDelete}" onComplete="resizeSideBar();resizeDetail();ss();" reRender="MainPage,saveCancelButtonPanel,title">
               <apex:param name="leadNumber" value="" assignTo="{! leadIndex}"/>
          </apex:actionFunction>
          <apex:actionFunction name="setContactIndexAF" action="{! saveContactDelete}" onComplete="resizeSideBar();resizeDetail();ss();" reRender="MainPage,saveCancelButtonPanel,title">
               <apex:param name="contactNumber" value="" assignTo="{! contactIndex}"/>
          </apex:actionFunction>
          <apex:outputPanel layout="block" rendered="{! !showLeadDefault}">
          <table class="LeadTable">
            <tr>
            <td></td>
            <td style="font-weight:900;" > Field </td>
            <td style="font-weight:900;" > Operator </td>
            <td style="font-weight:900;" > Value </td>
            </tr>
            <apex:repeat value="{! currentLeadConditionMapList}" var="subMap">
            <tr>
            <td> {! subMap['index']}. </td>
            <td> 
              <apex:selectList styleClass="SelectList" value="{! subMap['field']}"  size="1">
                <apex:selectOptions value="{! leadConditionFieldSelectList}"/> 
              </apex:selectList>
            </td>
            <td>
              <apex:selectList styleClass="SelectList" value="{! subMap['operator']}" size="1" style="100px;" >
                <apex:selectOptions value="{! operatorList}"/>
              </apex:selectList>
            </td>
            <td>
              <apex:inputText styleClass="InputText" value="{! subMap['value']}" />
            </td>
            <td>
              <a class="editDelLink lead-delete" data-bs-toggle="modal"  data-backdrop="static" data-id="{!subMap['index'] }" href="#myModal"> Delete</a>
            </td>
            </tr>
            </apex:repeat>
          </table>
          </apex:outputPanel>
          <apex:outputPanel layout="block" rendered="{! showLeadDefault}">
          <table class="LeadTable">
            <tr>
            <td></td>
            <td style="font-weight:900;" > Field </td>
            <td style="font-weight:900;" > Operator </td>
            <td style="font-weight:900;" > Value </td>
            </tr>
            <apex:repeat value="{! defaultLeadList}" var="num">
            <tr>
            <td>  {! currentLeadConditionMapList[num]['index']}. </td>
            <td> 
              <apex:selectList styleClass="SelectList" value="{! currentLeadConditionMapList[num]['field']}"  size="1">
                <apex:selectOptions value="{! leadConditionFieldSelectList}"/> 
              </apex:selectList>
            </td>
            <td>
              <apex:selectList styleClass="SelectList" value="{! currentLeadConditionMapList[num]['operator']}" size="1" >
                <apex:selectOptions value="{! operatorList}"/>
              </apex:selectList>
            </td>
            <td>
              <apex:inputText styleClass="InputText" value="{! currentLeadConditionMapList[num]['value']}" />
            </td>
            <td>
              <!---<apex:commandLink styleClass="editDelLink" value="Delete" reRender="x" html-data-toggle="modal" html-data-target="#myModal" html-data-backdrop="static" />-->
              <a class="editDelLink lead-delete" data-bs-toggle="modal" data-backdrop="static" data-id="{!currentLeadConditionMapList[num]['index'] }" href="#myModal"> Delete</a>
            </td>
            </tr>
            </apex:repeat>
            </table>
            </apex:outputPanel>
            </apex:outputPanel>
          <!-------Lead delete window----------------->
          <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-dialog">
          <div class="modal-content">
          <div class="modal-body">
                <h4>Are you sure to delete Lead Condition <span id="leadIndex" style="font-size: 18px;font-weight: 600;"></span>?</h4>
          </div>
          <div class="modal-footer">
            <apex:commandLink style="padding: 5px 4px;"  html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="Delete" onClick="setLeadIndex();return false;" />
            <apex:commandLink style="padding: 5px 4px;margin-left:15px;" html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="Cancel" action="{! cancelLeadDelete}"  onComplete="resizeSideBar();resizeDetail();" reRender="MainPage,saveCancelButtonPanel,title"/>
          </div>
          </div>
          </div>
          </div>
          <!---------links and buttons------------------------->
          <div style="padding-top:10px;">
          <div>
            <span class="AddIcon editDelLink"><apex:commandLink style="padding-left:20px;" value="New Entry" action="{! addLeadCondition}" onComplete="resizeSideBar();resizeDetail();" reRender="MainPage"/></span>
            <span style="padding-left:410px;">
              <apex:outputPanel rendered="{! currentLeadConditionNum>5}">
                <apex:commandLink styleClass="AllConditionLink" value="Show all lead conditions " action="{! showAllOnLead}" onComplete="resizeSideBar();resizeDetail();" reRender="MainPage,LeadPanel" rendered="{! showLeadDefault}"/>
                <apex:commandLink styleClass="FewerConditionLink" value="Show fewer lead conditions" action="{! hideOnLead}"  onComplete="resizeSideBar();resizeDetail();" reRender="MainPage,LeadPanel" rendered="{! !showLeadDefault}"/>
               </apex:outputPanel>
            </span>     
          </div>
          <div>
            <span class="AddIcon editDelLink"><apex:commandLink style="padding-left:20px;" value="Add Filter Logic" action="{! showLeadConditionLogic }" onComplete="resizeSideBar();resizeDetail();" reRender="MainPage" rendered="{! !showLeadLogic}"/></span>
            <span class="DelIcon editDelLink"><apex:commandLink style="padding-left:20px;" value="Remove Filter Logic" action="{! hideLeadConditionLogic}" onComplete="resizeSideBar();resizeDetail();"  reRender="MainPage" rendered="{! showLeadLogic}"/></span>
          </div>
          <apex:outputPanel id="leadlogic" rendered="{! showLeadLogic}">
            <apex:inputText styleClass="InputText" value="{! currentBuyerPersona.Lead_Logic__c}"/>
          </apex:outputPanel>
          </div>  
               
          <!---------show default contact condition-------------->
          <div style="margin-top:15px; margin-bottom:5px;padding-left:27px;padding-top:4px;padding-bottom:4px; background-color:#e1f0fb; width:100%;"><span style="font-weight:900;">Contact</span><span style="font-size:13px; padding-left:5px; font-weight:100;">( {! currentContactConditionNum} conditions )</span> </div>
          <!--- has contact condition---->
          <apex:outputPanel layout="block" rendered="{! currentContactConditionNum!=0}">
          <apex:outputPanel layout="block" rendered="{! !showContactDefault}"><!--show all condition---->
          <table class="ContactTable">
            <tr>
            <td></td>
            <td style="font-weight:900;"> Field </td>
            <td style="font-weight:900;"> Operator </td>
            <td style="font-weight:900;"> Value </td>
            </tr>
            <apex:repeat value="{! currentContactConditionMapList}" var="subMap">
            <tr>
            <td> {! subMap['index']}. </td>
            <td> 
              <apex:selectList styleClass="SelectList"  value="{! subMap['field']}"  size="1">
                <apex:selectOptions value="{! contactConditionFieldSelectList}"/> 
              </apex:selectList>
            </td>
            <td>
              <apex:selectList styleClass="SelectList"  value="{! subMap['operator']}" size="1" >
                <apex:selectOptions value="{! operatorList}"/>
              </apex:selectList>
            </td>
            <td>
              <apex:inputText styleClass="InputText" value="{! subMap['value']}" />
            </td>
            <td>
            <div>
              <!--<apex:commandLink styleClass="editDelLink" value="Delete" html-data-toggle="modal" html-data-target="#myModal2" html-data-backdrop="static" reRender="x" >
                <apex:param name="contactNumber" value="{! subMap['index']}" assignTo="{! contactIndex}"/>
              </apex:commandLink>-->
              <a class="editDelLink contact-delete" data-bs-toggle="modal" data-backdrop="static"  data-id="{!subMap['index'] }" href="#myModal2"> Delete</a>
            </div>
            </td>
            </tr>
            </apex:repeat>
          </table> 
          </apex:outputPanel>
          <apex:outputPanel id="defaultContact" layout="block" rendered="{! showContactDefault}"> <!---show default--->
          <table class="ContactTable">
            <tr>
            <td></td>
            <td style="font-weight:900;"> Field </td>
            <td style="font-weight:900;"> Operator </td>
            <td style="font-weight:900;"> Value </td>
            </tr>
            <apex:repeat value="{! defaultContactList}" var="num">
            <tr>
            <td> {! currentContactConditionMapList[num]['index']}. </td>
            <td> 
              <apex:selectList styleClass="SelectList"  value="{! currentContactConditionMapList[num]['field']}"  size="1">
                <apex:selectOptions value="{! contactConditionFieldSelectList}"/> 
              </apex:selectList>
            </td>
            <td>
              <apex:selectList styleClass="SelectList"  value="{! currentContactConditionMapList[num]['operator']}" size="1" >
                <apex:selectOptions value="{! operatorList}"/>
              </apex:selectList>
            </td>
            <td>
              <apex:inputText styleClass="InputText" value="{! currentContactConditionMapList[num]['value']}" />
            </td>
            <td>
            
            <!--<apex:commandLink styleClass="editDelLink" value="Delete" html-data-toggle="modal" html-data-target="#myModal2" html-data-backdrop="static" reRender="x" >
                <apex:param name="defaultContactNumber" value="{! currentContactConditionMapList[num]['index']}" assignTo="{! contactIndex}"/>
              </apex:commandLink>-->
            <a class="editDelLink contact-delete" data-bs-toggle="modal"  data-backdrop="static" data-id="{!currentContactConditionMapList[num]['index'] }" href="#myModal2"> Delete</a>
            </td>
            </tr>
            </apex:repeat>
          </table> 
          </apex:outputPanel>
          
          </apex:outputPanel>
          <!-------Contact delete window----------------->
          <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-dialog">
          <div class="modal-content">
          <div class="modal-body">
                <h4>Are you sure to delete Contact Condition <span id="contactIndex" style="font-size: 18px;font-weight: 600;"></span>?</h4>
          </div>
          <div class="modal-footer">
            <apex:commandLink style="padding: 5px 4px;"  html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="Delete" onClick="setContactIndex();return false;" />
            <apex:commandLink style="padding: 5px 4px;margin-left:15px;" html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="Cancel" action="{! cancelContactDelete}"  onComplete="resizeSideBar();resizeDetail();" reRender="MainPage,saveCancelButtonPanel,title"/>
          </div>
          </div>
          </div>
          </div>
          <!-----------links and buttons--------------->
          <div style="padding-top:10px;">
          <div>
            <span class="AddIcon editDelLink"><apex:commandLink style="padding-left:20px;" value="New Entry" action="{! addContactCondition}" onComplete="resizeSideBar();resizeDetail();" reRender="MainPage"/></span>
            <span style="padding-left:420px;">
              <apex:outputPanel rendered="{! currentContactConditionNum>5}">
                <apex:commandLink styleClass="AllConditionLink" value="Show all contact conditions" action="{! showAllOnContact}" reRender="MainPage,ContactPanel" onComplete="resizeSideBar();resizeDetail();" rendered="{! showContactDefault}"/>
                <apex:commandLink styleClass="FewerConditionLink" value="Show fewer contact conditions" action="{! hideOnContact}" reRender="MainPage,ContactPanel" onComplete="resizeSideBar();resizeDetail();" rendered="{! !showContactDefault}"/>
              </apex:outputPanel>
            </span>
          </div>
          <div>
            <span class="AddIcon editDelLink"><apex:commandLink style="padding-left:20px;" value="Add Filter Logic" action="{! showContactConditionLogic }" onComplete="resizeSideBar();resizeDetail();"  reRender="MainPage" rendered="{! !showContactLogic}"/></span>
            <span class="DelIcon editDelLink"><apex:commandLink style="padding-left:20px;" value="Remove Filter Logic" action="{! hideContactConditionLogic}" onComplete="resizeSideBar();resizeDetail();" reRender="MainPage" rendered="{! showContactLogic}"/></span>
          </div>
          <apex:outputPanel id="contactlogic" rendered="{! showContactLogic}">
            <apex:inputText styleClass="InputText" value="{! currentBuyerPersona.Contact_Logic__c}"/>
          </apex:outputPanel> 
          </div>       
        </apex:outputPanel>
        <!----------------Save and Cancel--------------->
        <apex:outputPanel rendered="{! showEdit}" layout="block" style="padding-left:57px; padding-top:30px;">
          <apex:actionStatus id="save-action-status" onstart="showLoadingDiv();" onstop="hideLoadingDiv();"/>
          <apex:commandLink rendered="{! hasPermission}" styleClass="btn btn-primary darkBlueButton" value="SAVE" action="{! save}" oncomplete="resizeWidth();resizeDetail();" status="save-action-status" reRender="MainPage,leadlogic,contactlogic"/>
          <apex:commandLink rendered="{! hasPermission}" styleClass="btn btn-primary darkBlueButton" value="CANCEL" action="{! cancel}" onComplete="resizeSideBar();resizeWidth();resizeTable();resetValue('summary')"  reRender="MainPage,SideBar,Head" />        
          <apex:commandLink rendered="{! !hasPermission}" styleClass="btn btn-primary darkBlueButton" value="SAVE" action="{! save}" html-data-toggle="modal" html-data-target="#myModal5" html-data-backdrop="static" reRender="x"/>
          <apex:commandLink rendered="{! !hasPermission}" styleClass="btn btn-primary darkBlueButton" value="CANCEL" action="{! cancel}" html-data-toggle="modal" html-data-target="#myModal5" html-data-backdrop="static" reRender="x"/>
        </apex:outputPanel>
        </div>
        <!----Tools & Setting------------------------------>
        <div class="setting" style="overflow:auto;">
        <apex:outputPanel rendered="{! showSettings}" layout="block" style="padding-left:57px;">
        <apex:outputPanel layout="block" style="padding-top:20px;">
        <div>
          <apex:commandLink styleClass="btn btn-primary btn-sm ActiveButton" value="ON" rendered="{! continuousNewSObject}" action="{! setContinuousNewSObjectON}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <apex:commandLink styleClass="btn btn-primary btn-sm InactiveButton" style="margin-left:15px;" value="OFF" rendered="{! continuousNewSObject}" action="{! setContinuousNewSObjectOFF}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <apex:commandLink styleClass="btn btn-primary btn-sm InactiveButton" value="ON" rendered="{! !continuousNewSObject}" action="{! setContinuousNewSObjectON}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <apex:commandLink styleClass="btn btn-primary btn-sm ActiveButton" style="margin-left:15px;" value="OFF" rendered="{! !continuousNewSObject}" action="{! setContinuousNewSObjectOFF}" oncomplete="datePickerJS();resizeSetting();"  reRender="MainPage"/>
          <span style="font-size:13px; font-weight:300;"> Apply mapping to new leads and contacts</span>
        </div>
        <div style="padding-top:5px;">
          <apex:commandLink styleClass="btn btn-primary btn-sm ActiveButton" value="ON" rendered="{! continuousUpdateSObject}" action="{! setcontinuousUpdateSObjectON}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <apex:commandLink styleClass="btn btn-primary btn-sm InactiveButton" style="margin-left:15px;" value="OFF" rendered="{! continuousUpdateSObject}" action="{! setcontinuousUpdateSObjectOFF}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <apex:commandLink styleClass="btn btn-primary btn-sm InactiveButton" value="ON" rendered="{! !continuousUpdateSObject}" action="{! setcontinuousUpdateSObjectON}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <apex:commandLink styleClass="btn btn-primary btn-sm ActiveButton" style="margin-left:15px;" value="OFF" rendered="{! !continuousUpdateSObject}" action="{! setcontinuousUpdateSObjectOFF}" oncomplete="datePickerJS();resizeSetting();" reRender="MainPage"/>
          <span style="font-size:13px; font-weight:300;"> Apply mapping to updated leads and contacts</span>
        </div>
        </apex:outputPanel>
        <apex:outputPanel layout="block">
          <div style="padding-top:20px; padding-bottom:10px;"> kick-off or clear buyer persona tagging for existing leads and contacts</div>
          <apex:selectRadio value="{!sobjectType}" styleClass="RadioClass" style="font-size:13px;">
            <apex:selectOptions value="{!sobjectTypeSelectList}"/>
          </apex:selectRadio>
        </apex:outputPanel>
        <apex:outputPanel layout="block">
        <table class="DateTable">
          <tr>
            <td style="font-weight:bold;">Start</td>
            <td style="font-weight:bold;">End</td>
          </tr>
          <tr>
            <td>
            <apex:actionFunction name="setStartDateAF" reRender="x" >
              <apex:param value="" name="sd" assignTo="{!startDate}" />
            </apex:actionFunction>
            <input id="startDate" class="InputText startDate" style="float:left;" onChange="setStartDate(this);"   />                          
            <label for="startDate" class="add-on"><apex:image style="padding-left:5px;" url="{!URLFOR($Resource.LeanData__calendar)}" width="35" height="30" /></label>
            </td>
            <td>
            <apex:actionFunction name="setEndDateAF" reRender="x" >
              <apex:param value="" name="ed" assignTo="{!endDate}" />
            </apex:actionFunction>
            <input id="endDate" class="InputText endDate" style="float:left;" onChange="setEndDate(this);"   />                          
            <label for="endDate" class="add-on"><apex:image style="padding-left:5px;" url="{!URLFOR($Resource.LeanData__calendar)}" width="35" height="30" /></label>
            </td>
          </tr>
          <tr>
            <td style="font-size:14px;">Select a date range</td>
            <td style="font-size:14px;">Select a date range</td>
          </tr>
          <tr>
            <td>
              <apex:inputCheckbox value="{! selectedBeginning}"/><span style="font-size:13px;padding-left:5px;">beginning of time</span>
            </td>
            <td>
              <apex:inputCheckbox value="{! selectedCurrent}"/><span style="font-size:13px;padding-left:5px;">current</span>
            </td>
          </tr>
        </table>
        </apex:outputPanel>
        <div>
          <div style="font-weight:bold;">Buyer Persona</div>
          <apex:outputPanel layout="block" id="selectedPersonalPanel" style="padding-top:8px;padding-bottom:10px;">
          <apex:commandLink styleClass="SelectList" style="padding-left:5px;padding-right:80px;"  value="{! OneTimePersonaNum} Selected" oncomplete="datePickerJS();bindTable();" html-data-toggle="modal" html-data-target="#selectWindow" html-data-backdrop="static" reRender="x"/>
          </apex:outputPanel>
          <apex:selectRadio value="{!jobType}" styleClass="RadioClass" style="font-size:13px;">
            <apex:selectOptions value="{!jobTypeSelectList}"/>
             <apex:actionSupport event="onchange" reRender="startPanel"/>
          </apex:selectRadio>  
        </div>
        <apex:outputPanel layout="block" id="startPanel" style="padding-top:20px;">
          <div><apex:commandLink styleClass="btn btn-primary darkBlueButton" rendered="{! AND(!startJob,hasPermission,OR(jobType=='Tag',isBlank(jobType)))}" value="START" action="{! oneTimeBuyerPersona}" reRender="HistoryPanel,startPanel" onComplete="datePickerJS();resizeSetting();"/>
          <apex:commandLink styleClass="btn btn-primary darkBlueButton" rendered="{! AND(!startJob,hasPermission,jobType=='Clear')}" value="START" html-data-toggle="modal" html-data-target="#myModal6" html-data-backdrop="static" reRender="x"/>
          <apex:outputPanel rendered="{! IF(errorMessageInSetting=='',false,true)}" style="color:red;padding-bottom:10px;"> {! errorMessageInSetting} </apex:outputPanel></div>
          <apex:commandLink styleClass="btn btn-primary darkBlueButton" rendered="{! !hasPermission}" value="START" html-data-toggle="modal" html-data-target="#myModal5" html-data-backdrop="static" reRender="x"/>
        </apex:outputPanel>
        <div style="font-weight:900;margin-top:15px; margin-bottom:5px;padding-top:4px;padding-bottom:4px; background-color:#e1f0fb; width:100%;">History</div>
        <apex:outputPanel layout="block" style="padding-top:20px;">
        <apex:outputPanel layout="block"  id="HistoryPanel" style="height:380px; oveflow:auto;">
        <apex:outputText rendered="{! startJob}"><span style="font-size:13px; color:#00accf;"> Buyer Persona is running! Please click on the refresh button to proceed.</span></apex:outputText>
        <apex:outputPanel rendered="{! jobList.size!=0}">
        <table class="HistoryTable">
          <tr>
          <td>Date</td>
          <td>Date Range</td>
          <td>Action</td>
          <td>Record</td>
          <td>User</td>
          <td>Status</td>
          <td>Buyer Persona</td>
          </tr>
          <apex:variable value="{! 0}" var="counter"/>
          <apex:repeat value="{!jobIndexList}" var="jobIndex">
          <tr>
            <td>{! dateList[jobIndex]}</td>
            <td>{! jobMap[jobIndex]['Date_Range']}</td>
            <td>{! jobMap[jobIndex]['Action']}</td>
            <td>{! jobMap[jobIndex]['Record']}</td>    
            <td>{! NULLVALUE(jobMap[jobIndex]['Name'], userName)}</td>
            <td>{! jobMap[jobIndex]['Status']}</td>
            <td>{! jobMap[jobIndex]['Selected_Buyer_Persona_Num']}</td>          
            <td>
            <apex:outputPanel rendered="{! counter==0}">
              <apex:commandlink value="Refresh" reRender="HistoryPanel,startPanel" action="{! refreshStatus}" rendered="{! startJob}" style="font-size:14px; color:##00accf;" oncomplete="resizeSetting();">
                <apex:param name="jobNum" value="{! jobIndex}" assignTo="{! currentJobIndex}"/>
              </apex:commandLink> 
            </apex:outputPanel>
            </td>
          </tr>
          <apex:variable var="counter" value="{! counter+1}"/>
          </apex:repeat>
        </table>
        </apex:outputPanel>
        </apex:outputPanel>
        </apex:outputPanel>
        </apex:outputPanel>
        </div>
        <!-------clear reminder delete window----------------->
          <div class="modal fade" id="myModal6" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-dialog">
          <div class="modal-content">
          <div class="modal-body">
                <h5>This will clear Buyer Persona tags and rerun Tagging for the selected personas according to existing rules in place. Make sure Buyer Persona Tag rules are updated to the desired settings</h5>
          </div>
          <div class="modal-footer">
            <apex:commandLink style="padding: 5px 4px;"  html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="CANCEL"  onComplete="resizeSideBar();resizeSetting();datePickerJS();" reRender="MainPage,saveCancelButtonPanel,title,SideBar"/>
            <apex:commandLink style="padding: 5px 4px;margin-left:15px;" html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="START" action="{! oneTimeBuyerPersona}" reRender="HistoryPanel,startPanel" onComplete="datePickerJS();resizeSetting();"/>
          </div>
          </div>
          </div>
          </div>
        <!----select persona window------------>
        <div class="modal fade" id="selectWindow" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-body">
        <apex:outputPanel id="SelectPanel">
          <div class="LightBoxTable">
           <apex:outputPanel layout="block" id="contentPanel1" style="padding-left:60px;" >
                <table>
                <tr>
                <td>
                    <div class="selectorPanel">
                        <table class="lightTable">
                            <tr>
                            <th>
                                Available:
                            </th>
                            </tr>
                        </table>
                        <div class="selectorContents selectable" style="background-color:#f5f5f5;margin-top:10px;">
                            <table class="lightTable selector-table">
                                <apex:repeat value="{!availableList}" var="AF" >
                            <tr>
                                <td class="selectRow fieldBackground">
                                <div >
                                   <span class="fieldContent"> {!AF.fieldName} <apex:inputCheckBox value="{!AF.isSelected}" style="display:none;"/></span>
                                </div>
                                </td>
                            </tr>
                                </apex:repeat>
                            </table>
                        </div>
                    </div>
                </td>
                <td>
                    <div  style= "padding: 10px;">
                    <div>
                    <apex:commandLink action="{!addOnePersona}"  onComplete="bindTable();" rerender="contentPanel1"><apex:image style="padding-left:5px;" url="{!URLFOR($Resource.LeanData__SelectA)}" width="25" height="20" /></apex:commandLink> 
                    </div>
                    <div style="margin-bottom:20px;">
                    <apex:commandLink action="{!addAllPersona}"  onComplete="bindTable();" rerender="contentPanel1"><apex:image style="padding-left:5px;" url="{!URLFOR($Resource.LeanData__SelectAll)}" width="25" height="20" /></apex:commandLink> 
                    </div>
                    <div>
                    <apex:commandLink action="{! deselectOnePersona}" onComplete="bindTable();" rerender="contentPanel1" ><apex:image style="padding-left:5px;" url="{!URLFOR($Resource.LeanData__deselectA)}" width="25" height="20" /></apex:commandLink>      
                    </div>
                    <div>
                    <apex:commandLink action="{! deselectAllPersona}" onComplete="bindTable();" rerender="contentPanel1"><apex:image style="padding-left:5px;" url="{!URLFOR($Resource.LeanData__deselectAll)}" width="25" height="20" /></apex:commandLink>      
                    </div>
                    </div>
                </td>
                <td>
                    <div class="selectorPanel">
                        <table class="lightTable">
                            <tr>
                            <th>
                                Selected:
                            </th>
                            </tr>
                        </table>
                        <apex:outputPanel id="selectedPanel" >
                        <div class="selectorContents selectable" style="background-color:#f5f5f5;margin-top:10px;">
                            <table class="lightTable selector-table selectedFieldsTable">
                                <apex:repeat value="{!selectedList}" var="AF" >
                            <tr class="selectedFieldsRow">
                                <td class="selectableCell fieldBackground">
                                <div >
                                    <span style="fieldContent">{!AF.fieldName} <apex:inputCheckBox value="{!AF.isSelected}" style="display:none;" /></span>
                                </div>
                                </td>
                            </tr>
                                </apex:repeat>
                            </table>
                        </div>
                        </apex:outputPanel>
                    </div>
                </td>
                </tr>
                </table>
              </apex:outputPanel>
           <div style="padding-left:200px;padding-top:20px;">
            <apex:commandLink html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="SAVE" action="{! savePersona}" onComplete="resizeSideBar();datePickerJS();bindTable();" reRender="contentPanel1,selectedPersonalPanel"/>
            <apex:commandLink html-data-dismiss="modal" styleClass="btn btn-primary darkBlueButton" value="CANCEL" action="{! cancelPersona}"  onComplete="resizeSideBar();datePickerJS();bindTable();" reRender="contentPanel1,selectedPersonalPanel"/>
          </div>
          </div>
        </apex:outputPanel>
        </div>
        </div>
        </div>
        </div>
      </apex:outputPanel>
      </section>
    </apex:define>
  </apex:composition>
</apex:form>
</apex:outputPanel>
<script> 
  if({!isProductionOrg}) {
    (function(apiKey) {
        (function(p, e, n, d, o) {
            var v, w, x, y, z;
            o = p[d] = p[d] || {};
            o._q = [];
            v = ['initialize', 'identify', 'updateOptions', 'pageLoad'];
            for (w = 0, x = v.length; w < x; ++w)(function(m) {
                o[m] = o[m] || function() {
                    o._q[m === v[0] ? 'unshift' : 'push']([m].concat([].slice.call(arguments, 0)));
                };
            })(v[w]);
            y = e.createElement(n);
            y.async = !0;
            y.src = 'https://cdn.pendo.io/agent/static/' + apiKey + '/pendo.js';
            z = e.getElementsByTagName(n)[0];
            z.parentNode.insertBefore(y, z);
        })(window, document, 'script', 'pendo');
    })('7e7cd4b3-14da-445e-7723-b673afae6f3c');

    pendo.initialize({
        visitor: {
            id: '{!userId}', // Salesforce User Id
            userProfile: '{!userProfile}', //Salesforce User Profile
            userRole: '{!userRole}' //Salesforce User Role
        },
        account: {
            id: '{!orgId}' // Salesforce Org Id
        }
    });
  }

  var showSummery;
  var showDetail;
  var showSetting;
  function resetValue(str) {
    if (str=='summary') {
      showSummary = true;
      showEdit = false;
      showSetting = false;
    } else if(str == 'edit') {
      showSummary = false;
      showEdit = true;
      showSetting = false;
    } else if(str == 'setting') {
      showSummary = false;
      showEdit = false;
      showSetting = true;
    }
  }

  function whichToResize(){
    if(showSummary) { resizeTable(); console.log('summary'); }
    if(showEdit) { resizeDetail(); console.log('detail'); }
    if(showSetting) { resizeSetting(); console.log('setting'); }
  }
   
  j$(window).resize(whichToResize);
 
  function resizeTable(){
    j$('.page-content').height(j$(window).height());
    j$('.left-sidebar').height(j$('.page-content').height()-33);
    j$('#main-content').height(j$('.page-content').height());
    j$('#main-content .container:nth-child(2) ' ).height(j$('.page-content').height()-100);
    j$('#main-content .container:nth-child(2) #MainPage:nth-child(2)' ).height(j$('.page-content').height()-100);
    j$('#main-content .container:nth-child(2) div:nth-child(2) #summary:nth-child(2)' ).height(j$('.page-content').height()-100);
    j$('#main-content .container:nth-child(2) div:nth-child(2) div:nth-child(2) .SummaryTable').css({'height':(j$(".page-content").height() - 100 +'px')});
  }
 
  function resizeDetail(){
    j$('.page-content').height(j$(window).height());
    j$('.left-sidebar').height(j$('.page-content').height()-33);
    j$('#main-content').height(j$('.page-content').height());
    j$('#main-content .container:nth-child(2) ' ).height(j$('.page-content').height()-100);
    j$('#main-content .container:nth-child(2) div:nth-child(2)  .detail:nth-child(3)' ).height(j$('.page-content').height()-100);
  }
 
  function resizeSetting(){
    j$('.page-content').height(j$(window).height());
    j$('.left-sidebar').height(j$('.page-content').height()-33);
    j$('#main-content').height(j$('.page-content').height());
    j$('#main-content .container:nth-child(2) ' ).height(j$('.page-content').height()-100);
    j$('#main-content .container:nth-child(2) div:nth-child(2)  .setting:nth-child(4)' ).height(j$('.page-content').height()-100);
  }

  function setContactIndex(param){
    setContactIndexAF(param);
  }

  function bindTable(){
    j$( ".selector-table" ).selectable({
      filter: 'tr',
      stop: function() {
        j$( this ).find('input[type=checkbox]').prop('checked', false);
        j$( ".ui-selected", this).each(function() {
        j$( this ).find('input[type=checkbox]').prop('checked',true);
      });
      }
    });
  }

  function setStartDate( sel ){
    setStartDateAF( sel.value );
  }

  function setEndDate( sel ){
    setEndDateAF( sel.value );
  }

  function bindToolsAndSettingsJS(){
    datePickerJS();
    bindTable();
  }

  function datePickerJS(){
    j$( ".startDate" ).datepicker({
      defaultDate: "+1w",
      changeMonth: true,
      changeYear: true,
      onClose: function( selectedDate ) {
        j$( ".endDate" ).datepicker( "option", "minDate", selectedDate );
      },
    });
    j$( ".endDate" ).datepicker({
      defaultDate: "+1w",
      changeMonth: true,
      changeYear: true,
      onClose: function( selectedDate ) {
        j$( ".startDate" ).datepicker( "option", "maxDate", selectedDate );
      },
    });
  }

  // set sideBar width
  function resizeWidth() {
    var maxWidth = Math.max.apply( null, j$( '.sider-button' ).map( function () {
      return j$( this ).outerWidth( true )+10;
    }).get() );

    if(maxWidth<240) maxWidth=240;

    j$(".sideBackground").css({'width':(maxWidth +'px')});
    j$(".whiteSideBackground").css({'width':(maxWidth +'px')});
    j$('.bs ul li').css({'width':(maxWidth +'px')});
  } 

  j$(document).ready(function(){
    ss();
     //$( "#sortable" ).disableSelection();

    resizeTable();
    resetValue('summary');
    resizeWidth();
    if({!buyerPersonaList.size!=0 }) j$(".SummaryTable").show();
    j$(document).on('shown.bs.modal','.modal', function(){
      this.classList.add("in");
    });/*manually add .in class after adding .show on click to make sure the modal pops up. (Firefox and some Chrome browsers needed this function*/
  });
  
  function ss(){
    j$( ".sortable" ).selectable({
      cancel: '.sort-handle, .ui-selected',
      filter: '> li'
    }).sortable({
      axis: 'y',
      opacity: 0.9,
      items: "> li",
      handle: 'div, .sort-handle, .ui-selected',
      selecting: function(event, ui){
        if( j$(".ui-selected, .ui-selecting").length > 1){
          j$(ui.selecting).removeClass("ui-selecting");
        }
      },
      helper: function(e, item) {
        if ( ! item.hasClass('ui-selected') ) {
          item.parent().children('.ui-selected').removeClass('ui-selected');
          item.addClass('ui-selected');
        }
        var selected = item.parent().children('.ui-selected').clone();
        ph = item.outerHeight() * selected.length;
        item.data('multidrag', selected).siblings('.ui-selected').remove();
        return j$('<li/>').append(selected);
      },
      start: function(e, ui) {
        ui.placeholder.css({'height':ph});
      },
      stop: function(e, ui) {
        var selected = ui.item.data('multidrag');
        ui.item.after(selected);
        ui.item.remove();
      }
    });   
  }
 
  function reorderPersona(){
    var personaList = [];
    j$(".sortable li").each(function(){
      personaList.push(j$(this).find('a').text());
    });

    var str = JSON.stringify(personaList);

    Visualforce.remoting.Manager.invokeAction(
      '{!$RemoteAction.BuyerPersonaController.getOrder}',
      str,
      function(result, event) {
        if(event.status)
          alert('persona order saved!');
        else
          alert(event.message);
      }
    );
  }
 
  function resetColor(name){
    j$(".sortable li").each(function(){
      if(j$(this).find('a').text() == name){
        j$(this).css({"background-color" : "#ffffff"});
        j$(this).find('a').css({"color" : "#043e57"});
      }
      else{
        j$(this).css({"background-color" : "#70797b"});
        j$(this).find('a').css({"color" : "#ffffff"});
      }
    });
  }

  j$(document).on("click", ".lead-delete", function () {
    var leadIndex = j$(this).data('id');
    j$("#myModal .modal-body #leadIndex").html(leadIndex );
  });
  j$(document).on("click", ".contact-delete", function () {
    var contactIndex = j$(this).data('id');
    j$("#myModal2 .modal-body #contactIndex").html(contactIndex );
  });

  function setLeadIndex(){
    var leadIndex = j$("#myModal .modal-body #leadIndex").html();
    setLeadIndexAF(leadIndex);
  }

  function setContactIndex(){
    var contactIndex = j$("#myModal2 .modal-body #contactIndex").html();
    setContactIndexAF(contactIndex);
  }

  // loading page
  function showLoadingDiv(){
    j$('.loading').css("display", "block");
  }
  function hideLoadingDiv() {
    j$('.loading').css("display", "none");
  }
</script>
<apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'jquery-3.7.0.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'jquery-ui-1.13.2.min.js')}" />
</apex:page>