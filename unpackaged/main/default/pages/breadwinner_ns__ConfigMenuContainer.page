<apex:page controller="breadwinner_ns.BreadwinnerController" extensions="breadwinner_ns.ItemOperationsController,breadwinner_ns.BreadwinnerExtension" id="MenuContainerPage">
	<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">        
<!-- ItemOperationsController added because
        1. performProductMatch
    -->
     <!-- Custom URL Generator Section Starts -->
     <div id="customURLGenerator" class="slds-hide" aria-labelledby="cURLGenerator">
        <apex:outputPanel id="curlPage-section" layout="block">
            <apex:outputPanel rendered="{!loadCURLPage}" layout="block" >
                <apex:include pageName="breadwinner_ns__CustomURLGenerator" id="curl-page"/>
            </apex:outputPanel>
        </apex:outputPanel>

    </div>
    <!-- Custom URL Generator Section End -->

    <script>assignLoadSetupCustObjCmpToFalse();</script>
	<style>
		.font-weight{
			font-weight: bold;
		}
	</style>

    
        <apex:variable value="{!OR($User.UIThemeDisplayed == 'Theme4d', $User.UIThemeDisplayed == 'Theme4t')}" var="isLightning" />

        <apex:form id="MenuForm">
            <apex:actionFunction name="refreshCURLGenerator" action="{!loadCustomURLGenerator}" reRender="curlPage-section" status="action-status" oncomplete="message();"/>

            <apex:actionFunction name="initializeSubsidiaries" action="{!initializeSubsidiaries}" reRender="subsidiary-content" status="action-status" oncomplete="processSubsidiaries();message();">
                <apex:param name="subsidiaries" value="" assignTo="{!nsSubsidiaries}" />
            </apex:actionFunction>
            <apex:actionFunction name="initializeCurrencies" action="{!initializeCurrencies}" reRender="currency-content" status="action-status"/>
            <apex:actionFunction name="refreshTSContent" action="{!renderTroubleshootingSection}" oncomplete="onTabEnterPushToInteractionLog('Troubleshooting');" reRender="troubleshooting-content" status="action-status" />
            <apex:actionFunction name="refreshSyncSettings" action="{!initializeItemNetSuiteObjectSyncConfiguration}" reRender="SyncSettings-content" status="action-status" oncomplete="addallstyles();onTabEnterPushToInteractionLog('Sync Settings');"/>
            <apex:actionFunction name="performProductMatch" action="{!performProductMatch}" reRender="productmatch-content,mapInitDefaultActionScript,PMHeader,productMatchAFComplete" status="action-status" oncomplete="handlePerformProductMatchComplete();" >
                <apex:param name="UnMNSopName" assignTo="{!operationName}" value="" />
            </apex:actionFunction>
            <apex:actionFunction name="refreshGeneralConfigContent" action="{!generalConfig}" reRender="GeneralConfig-content" status="action-status"/>
            <apex:actionFunction name="refreshCompanyConfigContent" action="{!companyConfig}" reRender="CompanyConfig-content" status="action-status" oncomplete="addallstyles();onTabEnterPushToInteractionLog('Company Configuration');"/>
            <apex:actionFunction name="refreshPrimaryContactConfigContent" action="{!loadPrimaryContactConfig}" reRender="PrimaryContactConfig-content" status="action-status" oncomplete="addallstyles();onTabEnterPushToInteractionLog('Primary Contact Configuration');"/>
            <apex:actionFunction name="refreshPDFsConfigContent" action="{!loadInvoicePDFConfig}" reRender="PDFsConfig-content" status="action-status" oncomplete="addallstyles();onTabEnterPushToInteractionLog('PDFs Configuration');"/>
            <apex:actionFunction name="refreshNetSuiteObjectsContent" reRender="NetSuiteObjects-content" status="action-status" oncomplete="message();"/>
            <apex:actionFunction name="refreshExpenseReportContent" action="{!newEmployeeExpenseReport}" reRender="ExpenseReport-content" status="action-status" oncomplete="message();initSelect2();onTabEnterPushToInteractionLog('Enter Expense Report');"/>
            <apex:actionFunction name="refreshCustomFieldsContent" action="{!loadCustomFieldsTab}" reRender="CustomFields-content,CFieldsPgMsg" status="action-status" oncomplete="message();"/>
            <apex:actionFunction name="refreshApexGenerator" action="{!loadApexGenerator}" reRender="ApexGenerator" status="action-status" oncomplete="message();"/>

            <apex:actionFunction name="refreshEmployeeMatchAF" reRender="EmployeeMatchSectionPanel" status="action-status" oncomplete="message();initializeEmployeeMatchData();">
                <apex:param name="empMatchParam" value="SHOW" assignTo="{!showHideEmpMatchWizard}" />
            </apex:actionFunction>

            <apex:actionFunction name="checkImportProgress" action="{!checkImportProgress}" reRender="progress-content" status="action-status" oncomplete="addallstyles();"/>
            <apex:actionFunction name="refreshReportBuilderSection" action="{!refreshReportBuilderSection}" reRender="reportBuilder-content" status="action-status"/>
            <apex:actionFunction name="refreshBillingData" reRender="billing-content" status="action-status" oncomplete="message();onTabEnterPushToInteractionLog('Billing');"/>
			<div >
                <div class="slds-modal slds-modal_xxx-small" aria-hidden="false" role="dialog" id="alert_popup">
                    <div class="slds-modal__container">
                        <header class="slds-modal__header">
                             <button id="alert_popupCanBtn" class="slds-button slds-button_icon-inverse slds-modal__close" type="button" onclick="showHideModal('alert_popup','alert_backdrop');">
                                    <svg aria-hidden="true" class="slds-button__icon slds-button__icon_large" >
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </button>
							<h2 class="slds-text-heading_medium" id="alert_popup_heading">Sync Interval</h2>
                        </header>
                    	<div class="slds-modal__content slds-p-around_medium">
                            <div>
                                <p id="alert_popup_text">Dynamic Popup Text will come here</p>
                            </div>
                            <div align="right" class="slds-m-top_medium">
                                <apex:commandLink rel="noopener noreferrer" id="okaybutton" styleClass="slds-button slds-button_brand executeOnEscape" value="OK" onclick="showHideModal('alert_popup','alert_backdrop')" reRender="nothing"/>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="slds-backdrop" id="alert_backdrop"></div>
            </div>
            <apex:outputpanel id="productMatchAFComplete">
                <script>
                    function handlePerformProductMatchComplete() {
                        const operationName = '{!JSENCODE(operationName)}';
                        addallstyles();
                        onTabEnterPushToInteractionLog(operationName);
                    }
                </script>
            </apex:outputpanel>

            <!-- Contact Support Section Starts -->
            <div id="contact" class="slds-hide" aria-labelledby="ContactSupport">
                <c:PageHeader headerText="Contact Support"
                    svgName="/icons/action-sprite/svg/symbols.svg#email"
                    spanIconClasses="slds-icon-action-description"
                    svgClasses="slds-icon_small"
                />

                <div id="Contact_SupportPage"></div>
            </div>
            <!-- Contact Support Section End -->

            <!-- Knowledge Base Section Starts -->
            <div id="knowledge" class="slds-hide" aria-labelledby="KnowledgeBase">
                <c:PageHeader headerText="Knowledge Base"
                    svgName="/icons/action-sprite/svg/symbols.svg#google_news"
                    spanIconClasses="slds-icon-action-description"
                    svgClasses="slds-icon_small"
                />
                <div id="Knowledge_BasePage"></div>
            </div>
            <!-- Knowledge Base Section End -->

            <!-- Billing Section Start -->
            <div id="billing" class="slds-hide" aria-labelledby="Billing">
                <c:PageHeader headerText="Billing"
                    svgName="/icons/action-sprite/svg/symbols.svg#google_news"
                    spanIconClasses="slds-icon-action-description"
                    svgClasses="slds-icon_small"
                />
                <apex:outputPanel layout="block" id="billing-content" styleClass="slds-p-around_small">
                    <apex:actionStatus id="assign-action-status" layout="block">
                        <apex:facet name="start">
                            <div class="slds-spinner_container">
                                <div class="slds-spinner_brand slds-spinner slds-spinner_medium" role="alert">
                                    <span class="slds-assistive-text">Loading</span>
                                    <div class="slds-spinner__dot-a"></div>
                                    <div class="slds-spinner__dot-b"></div>
                                </div>
                                <div class="slds-spinner-displaytext" role="alert">
                                    <P>
                                        Please wait while we redirect you to your billing portal.
                                    </P>
                                </div>
                            </div>
                        </apex:facet>
                    </apex:actionStatus>
                    <div class="slds-m-top_medium slds-m-horizontal_small" id="BillingDiv" >
                        <apex:outputPanel rendered="{!isBreadwinnerAdministrator}" layout="block">
                            <!-- Subscription Details -->
                            <h3 class="slds-section-title_divider slds-m-top_medium">Your Breadwinner Subscription </h3>
                            <apex:outputPanel layout="block" styleClass="slds-m-top_medium" rendered="{!bsWrapper.status =='expired'}" >
                                <apex:pageMessage severity="WARNING" strength="3" summary="Your Subscription to Breadwinner has Expired. Please contact sales@breadwinner.com"/>
                            </apex:outputPanel>

                            <apex:outputPanel rendered="{!bsWrapper.status != 'expired'}">
                                <apex:outputPanel layout="block" styleClass="slds-m-top_medium" rendered="{!AND(bsWrapper.status != 'subscribed',bsWrapper.status != 'canceled')}" >
                                    <apex:pageMessage severity="INFO" strength="3" summary="This tab is used to update your payment information, and will be active once you subscribe."/>
                                </apex:outputPanel>
                                <div Class="slds-m-horizontal_small"  >
                                    <apex:outputPanel layout="block" styleClass="slds-m-top_medium" rendered="{!OR(bsWrapper.status == 'subscribed',bsWrapper.status == 'canceled')}" >
                                        <apex:outputPanel layout="block" styleClass="slds-m-bottom_small">
                                            <apex:pageMessages id="bill-pgMsg"/>
                                        </apex:outputPanel>
                                        <div class="slds-text-longform slds-m-bottom_small" >
                                            Click the button below to redirect to your billing portal where you can change your billing information, add a new payment method, or cancel your subscription.
                                        </div>
                                        <apex:commandButton styleClass="slds-button slds-button_brand" action="{!getCustomerPortalUrl}" status="assign-action-status" value="Redirect to Billing Portal" oncomplete="redirectToCustomerPortal();message();" reRender="customerPortalJS, bill-pgMsg" />
                                    </apex:outputPanel>
                                    <apex:outputPanel id="customerPortalJS">
                                        <script type="text/javascript">
                                            function redirectToCustomerPortal(){
                                                let customerPortalURL = '{!JSENCODE(customerPortalURL)}';
                                                if(customerPortalURL){
                                                    window.open(customerPortalURL,'_blank');
                                                }
                                            }
                                        </script>
                                    </apex:outputPanel>
                                </div >
                            </apex:outputPanel>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!NOT(isBreadwinnerAdministrator)}">
                            <apex:pageMessage severity="INFO" strength="3" summary="You must be an Administrator to access billing information."/>
                        </apex:outputPanel>
                    </div>
                </apex:outputPanel>
            </div>
            <!-- Billing Section End -->

            <!-- Troubleshooting Section Start -->
            <div id="troubleshooting" class="slds-hide" aria-labelledby="Troubleshooting">
                <c:PageHeader headerText="Troubleshooting" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <div class="slds-tabs--default">
                    <ul class="slds-tabs--default__nav" role="tablist">
                        <li class="slds-tabs--default__item slds-text-heading--label slds-active" title="Overview" role="presentation" >
                            <a class="slds-tabs--default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="refreshTSContent();" role="tab" tabindex="0" aria-selected="true" aria-controls="TroubleshootingOverviewContentSection" id="TroubleshootingOverviewContentSection__item" style="text-decoration:none">Overview</a></li>
                        <li class="slds-tabs--default__item slds-text-heading--label" title="Connection" role="presentation" >
                            <a class="slds-tabs--default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="refreshTSContent();CheckBWConnection();"  role="tab" tabindex="-1" aria-selected="false" aria-controls="connectionTabContentSection" id="connectionTabContentSection__item" style="text-decoration:none">Connection</a></li>
                    </ul>
                    <div id="TroubleshootingOverviewContentSection" class="slds-tabs--default__content slds-show" role="tabpanel" aria-labelledby="TroubleshootingOverviewContentSection__item">

                <apex:outputPanel layout="block" id="troubleshooting-content" styleClass="slds-p-around_small">
                    <apex:actionFunction name="DeleteRecordsSection" reRender="deleteSection" status="action-status">
                        <apex:param name="showhide" value="" assignTo="{!showHideDeleteSection}" />
                    </apex:actionFunction>
                    <apex:inputHidden id="isFromDSOthersTabId" value="{!isFromDSOthersTab}"/>
                    <apex:outputPanel layout="block">
                        <apex:pageMessages id="tbPMS"/>
                        <h3 class="slds-section-title_divider slds-m-bottom_small">Breadwinner Info</h3>
                        <div class="slds-m-horizontal_small">
                            <table class="slds-table slds-no-row-hover" border="0" cellpadding="0" style="width: auto;" id="BreadwinnerInfo">
                                <tr>
                                    <td>Salesforce Edition:</td>
                                    <td><apex:outputtext value="{!SFOrg.OrganizationType}"> </apex:outputtext></td>
                                </tr>
                                <tr>
                                    <td>Salesforce Org Type:</td>
                                    <td><apex:outputtext value="{!IF(SFOrg.IsSandbox==true, 'Sandbox', 'Production')}{!IF(SFOrg.TrialExpirationDate!= null,' - Trial','')}"></apex:outputtext></td>
                                </tr>
                                <tr>
                                    <td>Salesforce Org Id:</td>
                                    <td><apex:outputtext value="{!SFOrg.Id}"></apex:outputtext></td>
                                </tr>
                                <!-- uncomment it when we use plan codes -->
                                <!--<tr>
                                    <td>Breadwinner Plan Code:</td>
                                    <td><apex:outputtext value="{!bsWrapper.planCode}"></apex:outputtext></td>
                                </tr>-->
                                <tr>
                                    <td>Breadwinner Plan Name:</td>
                                    <td><apex:outputtext value="{!PlanName}"></apex:outputtext></td>
                                </tr>
                                <tr>
                                    <td>Breadwinner Version:</td>
                                    <td><apex:outputtext value="{!BreadwinnerVersion}"></apex:outputtext></td>
                                </tr>
                            </table>
                        </div>
                    </apex:outputPanel>

                    <apex:outputPanel layout="block" rendered="{!isBreadwinnerAdministrator}" id="JobsStatus">
                        <h3 class="slds-section-title_divider slds-m-bottom_small slds-m-top_medium">Scheduled Jobs Status</h3>
                        <div class="slds-m-horizontal_medium">
                            Scheduled jobs are running under&nbsp;<apex:outputText value="{!IF(isScheduledJobsRunbyActiveUser,'Active User','Inactive User')}" style="font-weight:bold;font-style: italic;color: {!IF(isScheduledJobsRunbyActiveUser,'','red')}" />
                            <apex:outputPanel >
                                <apex:commandLink rel="noopener noreferrer" id="restartScheduledJobsId" action="{!restartScheduledJobs}" status="action-status" styleClass="slds-m-left_medium slds-button slds-button_brand" reRender="JobsStatus" oncomplete="addPopupText('Successfully restarted Scheduled Jobs to run under you.','NULL');" >Restart Scheduled Jobs under my Admin User</apex:commandLink>
                            </apex:outputPanel>
                        </div>
                    </apex:outputPanel>

                    <apex:outputPanel layout="block" rendered="{!AND(bsWrapper.active, isAdministrator)}">
                        <div class="slds-section slds-p-bottom_xx-small" id="PageLayoutsUpdateSection">
                            <h3 class="slds-section__title">
                                <button class="slds-button slds-section__title-action" type="button" onclick="showHideSectionConent('PageLayoutsUpdateSection','PageLayoutsUpdateSectionImage');" style="letter-spacing: .0625rem;text-transform: initial;">
                                    <img id="PageLayoutsUpdateSectionImage" src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionClose.png')}" style="margin-bottom: 3px;margin-right: 4px;" />
                                    <span style="color: rgb(62, 62, 60); text-transform: uppercase; font-size: .75rem;padding-left: 3px;">Update Page Layouts</span>
                                </button>
                            </h3>
                            <div class="slds-section__content slds-p-top_none">
                                <apex:outputPanel layout="block" id="pageLayoutSection" styleClass="slds-m-horizontal_medium">
                                    <apex:outputPanel rendered="{!!bsWrapper.pageLayoutsUpdated}">
                                        <div class="slds-grid slds-grid_vertical">
                                            <div class="slds-text-title slds-m-vertical_small">Clicking the button below would update the page layouts of Account, Opportunity, Product, Price Book and Price Book Entry.</div>
                                            <apex:outputPanel id="pageLayoutUpdateButton" >
                                                <apex:commandButton id="updatePageLayouts" action="{!updatePageLayouts}" value="Update Page Layouts" styleClass="slds-button slds-button_brand" status="action-status" reRender="troubleshooting-content,tbPMS,pageLayoutSection,pageLayoutUpdateButton" rendered="{!!bsWrapper.pageLayoutsUpdated}" oncomplete="message();" />
                                            </apex:outputPanel>
                                        </div>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!bsWrapper.pageLayoutsUpdated}">
                                        <div class="slds-text-title slds-m-top_small">Page Layouts were successfully updated.</div>
                                    </apex:outputPanel>

                                </apex:outputPanel>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!AND(bsWrapper.active, isBreadwinnerAdministrator,isNetSuiteConnected)}">
                        <div class="slds-section slds-p-bottom_xx-small" id="RestartUpdateSection">
                            <h3 class="slds-section__title">
                                <button class="slds-button slds-section__title-action" type="button" onclick="showHideSectionConent('RestartUpdateSection','RestartUpdateSectionImage');" style="letter-spacing: .0625rem;text-transform: initial;">
                                    <img id="RestartUpdateSectionImage" src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionClose.png')}" style="margin-bottom: 3px;margin-right: 4px;" />
                                    <span style="color: rgb(62, 62, 60); text-transform: uppercase; font-size: .75rem;padding-left: 3px;">Restarting and Updating</span>
                                </button>
                            </h3>
                            <div class="slds-section__content slds-p-top_none">
                                <apex:outputPanel layout="block" id="reStartSyncsSection" styleClass="slds-m-horizontal_medium slds-m-top_xx-small">
                                    <apex:commandLink rel="noopener noreferrer" id="tsBillSyncBtn" value="Restart NetSuite Bill Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Bill Sync started successfully.','Historical NetSuite Bill Sync job was running or unable to restart the Historical NetSuite Bill Sync. Please try again later.')}','NULL');">
                                        <apex:param name="BillSync" value="VendorBill" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCashRefundSyncBtn" value="Restart NetSuite Cash Refund Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Cash Refund Sync started successfully.','Historical NetSuite Cash Refund Sync job was running or unable to restart the Historical NetSuite Cash Refund Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CashRefundSync" value="CashRefund" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCashSaleSyncBtn" value="Restart NetSuite Cash Sale Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Cash Sale Sync started successfully.','Historical NetSuite Cash Sale Sync job was running or unable to restart the Historical NetSuite Cash Sale Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CashSaleSync" value="CashSale" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCheckSyncBtn" value="Restart NetSuite Check Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Check Sync started successfully.','Historical NetSuite Check Sync job was running or unable to restart the Historical NetSuite Check Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CheckSync" value="Check" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsContactSyncBtn" value="Restart NetSuite Contact Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Contact Sync started successfully.','Historical NetSuite Contact Sync job was running or unable to restart the Historical NetSuite Contact Sync. Please try again later.')}','NULL');">
                                        <apex:param name="ContactSync" value="Contact" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCreditMemoSyncBtn" value="Restart NetSuite Credit Memo Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Credit Memo Sync started successfully.','Historical NetSuite Credit Memo Sync job was running or unable to restart the Historical NetSuite Credit Memo Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CreditMemoSync" value="CreditMemo" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCustomerSyncBtn" value="Restart NetSuite Customer Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Customer Sync started successfully.','Historical NetSuite Customer Sync job was running or unable to restart the Historical NetSuite Customer Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CustomerSync" value="Customer" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCustomerDepositSyncBtn" value="Restart NetSuite Customer Deposit Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Customer Deposit Sync started successfully.','Historical NetSuite Customer Deposit Sync job was running or unable to restart the Historical NetSuite Customer Deposit Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CustomerDepositSync" value="CustomerDeposit" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCustomerPaymentSyncBtn" value="Restart NetSuite Customer Payment Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Customer Payment Sync started successfully.','Historical NetSuite Customer Payment Sync job was running or unable to restart the Historical NetSuite Customer Payment Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CustomerPaymentSync" value="CustomerPayment" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsEmployeeSyncBtn" value="Restart NetSuite Employee Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Employee Sync started successfully.','Historical NetSuite Employee Sync job was running or unable to restart the Historical NetSuite Employee Sync. Please try again later.')}','NULL');">
                                        <apex:param name="EmployeeSync" value="Employee" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsEstimateSyncBtn" value="Restart NetSuite Estimate Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Estimate Sync started successfully.','Historical NetSuite Estimate Sync job was running or unable to restart the Historical NetSuite Estimate Sync. Please try again later.')}','NULL');">
                                        <apex:param name="EstimateSync" value="Estimate" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsInvoiceSyncBtn" value="Restart NetSuite Invoice Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Invoice Sync started successfully.','Historical NetSuite Invoice Sync job was running or unable to restart the Historical NetSuite Invoice Sync. Please try again later.')}','NULL');">
                                        <apex:param name="InvoiceSync" value="Invoice" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsItemFulfillmentSyncBtn" value="Restart NetSuite Item Fulfillment Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Item Fulfillment Sync started successfully.','Historical NetSuite Item Fulfillment Sync job was running or unable to restart the Historical NetSuite Item Fulfillment Sync. Please try again later.')}','NULL');">
                                        <apex:param name="ItemFulfillmentSync" value="ItemFulfillment" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsItemSyncBtn" value="Restart NetSuite Item Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Item Sync started successfully.','Historical NetSuite Item Sync job was running or unable to restart the Historical NetSuite Item Sync. Please try again later.')}','NULL');">
                                        <apex:param name="ItemSync" value="Item" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandButton id="tsMetaDataSyncBtn" value="Restart NetSuite Metadata Sync" onclick="addPopupText('This would restart the Importing of NetSuite Subsidiaries, Locations, Currencies, Price Levels, Classes, Departments and Billing Schedules.','Metadata');" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" reRender="nothing"/>
                                    <apex:commandLink rel="noopener noreferrer" id="tsPurchaseOrderSyncBtn" value="Restart NetSuite Purchase Order Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Purchase Order Sync started successfully.','Historical NetSuite Purchase Order Sync job was running or unable to restart the Historical NetSuite Purchase Order Sync. Please try again later.')}','NULL');">
                                        <apex:param name="PurchaseOrderSync" value="PurchaseOrder" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsRMASyncBtn" value="Restart NetSuite Return Authorization Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Return Authorization Sync started successfully.','Historical NetSuite Return Authorization Sync job was running or unable to restart the Historical NetSuite Return Authorization Sync. Please try again later.')}','NULL');">
                                        <apex:param name="RMASync" value="ReturnAuthorization" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsSalesOrderSyncBtn" value="Restart NetSuite Sales Order Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Sales Order Sync started successfully.','Historical NetSuite Sales Order Sync job was running or unable to restart the Historical NetSuite Sales Order Sync. Please try again later.')}','NULL');">
                                        <apex:param name="SalesOrderSync" value="SalesOrder" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsVendorSyncBtn" value="Restart NetSuite Vendor Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Vendor Sync started successfully.','Historical NetSuite Vendor Sync job was running or unable to restart the Historical NetSuite Task Sync. Please try again later.')}','NULL');">
                                        <apex:param name="VendorSync" value="Vendor" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsVendorCreditSyncBtn" value="Restart NetSuite Vendor Credit Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Vendor Credit Sync started successfully.','Historical NetSuite Vendor Credit Sync job was running or unable to restart the Historical NetSuite Vendor Credit Sync. Please try again later.')}','NULL');">
                                        <apex:param name="VendorCreditSync" value="VendorCredit" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsVendorPaymentSyncBtn" value="Restart NetSuite Vendor Payment Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Vendor Payment Sync started successfully.','Historical NetSuite Vendor Payment Sync job was running or unable to restart the Historical NetSuite Vendor Payment Sync. Please try again later.')}','NULL');">
                                        <apex:param name="VendorPaymentSync" value="VendorPayment" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsSuiteBillingSyncBtn" value="Restart Suite Billing Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" rendered="{!bsWrapper.suiteBillingEnabled}" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical Suite Billing Sync started successfully.','Historical Suite Billing Sync job was running or unable to restart the Historical Suite Billing Sync. Please try again later.')}','NULL');">
                                        <apex:param name="SuiteBillingSync" value="SuiteBillingSync" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsCustomObjectSyncBtn" value="Restart NetSuite Custom Object Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Custom Object Sync started successfully.','Historical NetSuite Custom Object Sync job was running or unable to restart the Historical NetSuite Custom Object Sync. Please try again later.')}','NULL');">
                                        <apex:param name="CustomObjectSync" value="CustomObjectSync" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                    <apex:commandLink rel="noopener noreferrer" id="tsRegularSyncBtn" value="Reschedule Regular Sync" action="{!restartHourlySync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Regular Sync scheduled successfully.','Unable to restart the regular sync as Initial Sync is not completed. Please try again later.')}','NULL');" />
                                    <apex:commandButton id="tsWeeklySyncBtn" disabled="{!bswrapper.weeklySyncTimeframe='0'}" value="Restart Weekly Sync" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'Weekly Sync started successfully.','Weekly or Historical Sync was running or unable to restart the Weekly Sync. Please try again later.')}','NULL');">
                                        <apex:param name="WeeklySync" value="WeeklySync" assignTo="{!objectName}"/>
                                    </apex:commandButton>
                                    <apex:commandLink rel="noopener noreferrer" id="tsAllSyncBtn" value="Restart ALL Sync" action="{!restartAllSync}" styleClass="slds-button slds-button_brand slds-m-top_x-small" status="action-status" reRender="nothing" oncomplete="addPopupText('{!IF(isBatchStarted,'ALL Sync started successfully.','Historical or Weekly Sync was running or unable to restart the ALL Sync. Please try again later.')}','NULL');"/>

                                    <div class="slds-p-top_medium slds-text-title" >
                                        <p style="color: #f3f3f3;">Background Syncs Currently Running for Breadwinner: {!currentSyncsInfo}</p>
                                    </div>

                                    <div align="right">
                                        <apex:commandLink rel="noopener noreferrer" action="{!toggleShowCustomRequestEditor}" status="action-status" reRender="CustomWhereFilterEditor" rendered="{!isNetSuiteConnected}" id="showCustomRequestBtn" styleClass="GrayLinks">.</apex:commandLink>
                                        <apex:outputPanel id="CustomWhereFilterEditor" layout="block">
                                            <apex:outputPanel layout="block" styleClass="slds-box slds-float_right" rendered="{!showCustomRequestEditor}">
                                                <div class="slds-form-element">
                                                    <label class="slds-form-element__label" >Enter Params:</label>
                                                    <div class="slds-form-element__control">
                                                        <apex:inputText value="{!customParams}" styleClass="slds-input"/>
                                                    </div>
                                                </div>
                                                <div class="slds-form-element">
                                                    <label class="slds-form-element__label" >Enter Page Size:</label>
                                                    <div class="slds-form-element__control">
                                                        <apex:inputText value="{!customPageSize}" styleClass="slds-input"/>
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                    </div>
                                </apex:outputPanel>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!AND(bsWrapper.active, canPerformBreadwinnerOperations, isNetSuiteConnected)}">
                        <div class="slds-section slds-p-bottom_xx-small" id="oneClickImportSection">
                            <h3 class="slds-section__title">
                                <button class="slds-button slds-section__title-action" type="button" onclick="showHideSectionConent('oneClickImportSection','oneClickImportSectionImage');" style="letter-spacing: .0625rem;text-transform: initial;">
                                    <img id="oneClickImportSectionImage" src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionClose.png')}" style="margin-bottom: 3px;margin-right: 4px;" />
                                    <span style="color: rgb(62, 62, 60); text-transform: uppercase; font-size: .75rem;padding-left: 3px;">One-Click NetSuite Import</span>
                                </button>
                            </h3>
                            <div class="slds-section__content slds-p-top_none">
                                <apex:outputPanel layout="block" id="oneClickImportButtonSection" styleClass="slds-m-horizontal_medium">
                                    <div class="slds-text-title slds-m-top_small">Do not use this functionality on your production environment, unless asked explicitly by Breadwinner team.</div>
                                    <div class="slds-grid slds-grid_vertical">
                                        <apex:outputPanel layout="block" rendered="{!hasCustomerSyncInformation}">
                                            <h2 class="slds-p-top_medium oneClick">NetSuite Companies</h2>
                                            <div class="slds-col slds-p-left_small">
                                                <p class="slds-p-vertical_xx-small slds-text-title slds-m-bottom_xx-small"><span class="font-weight">USE WITH CAUTION AND AFTER READING THIS NOTICE ONLY:</span> With this feature, Breadwinner will automate the Account Match between NetSuite and Salesforce. Breadwinner will perform the Account Match based on the <span class="font-weight">Company Name</span>. If the NetSuite Company name exactly matches a Salesforce Account name, Breadwinner will auto-match these; otherwise, it will create a new Salesforce Account. <span class="font-weight">Please Note: you must have set the NetSuite Object Sync for that Subsidiary to any value other than “Do Not Match Accounts.”</span></p>
                                                <apex:commandButton id="oneClickNetSuiteCompanyImportButton" disabled="{!objectNameAndOrgSyncStatus['Customer']!='Active'}" value="Auto Match/Create Salesforce Accounts from NetSuite Companies" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand" status="action-status" reRender="setup-content" oncomplete="addPopupText('{!IF(isBatchStarted,'Your auto match/create of NetSuite Companies as new Salesforce Accounts has started successfully.',IF($ObjectType.Account.Createable,'Unable to start this process. Please try again later.','You do not have sufficient permissions on Account object to perform this operation. Please contact your System Administrator.'))}','NULL');">
                                                    <apex:param name="MassAccountMatch" value="AccountMatch" assignTo="{!objectName}"/>
                                                </apex:commandButton>
                                                <apex:outputPanel layout="block" styleClass="slds-p-vertical_xx-small slds-text-title" rendered="{!objectNameAndOrgSyncStatus['Customer']!='Active'}">
                                                    Warning:
                                                    <apex:outputText value=" NetSuite Company sync is disabled in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to enable it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Customer']=='Inactive'}"/>
                                                    <apex:outputText value=" NetSuite Company sync is not configured Org Wide. To perform this operation,  {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Customer']=='Not Configured'}"/>
                                                    <apex:outputText value=" Auto-Match Salesforce Accounts from NetSuite Companies is set to 'Do Not Match'. To perform this operation,  {!IF(isBreadwinnerAdministrator,'you need to change this configuration in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Customer']=='Do Not Match'}"/>
                                                    <apex:outputText value=" Auto-Match Salesforce Accounts from NetSuite Companies is not yet set. To perform this operation,  {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Customer']=='Account Match Configuration Not Set'}"/>
                                                </apex:outputPanel>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" rendered="{!hasContactSyncInformation}">
                                            <h2 class="slds-p-top_medium oneClick">NetSuite Contacts</h2>
                                            <div class="slds-col slds-p-left_small">
                                                <p class="slds-p-vertical_xx-small slds-text-title">Click the button below, to mass create Salesforce Contacts from NetSuite Contacts. Please note that this may cause duplicate Contacts in Salesforce, and it is not recommended to use in Production environments.</p>
                                                <apex:commandButton id="oneClickNetSuiteContactImportButton" disabled="{!objectNameAndOrgSyncStatus['Contact']!='Active'}" value="Mass Create Salesforce Contacts from NetSuite Contacts" onclick="{!IF($ObjectType.Contact.Createable,'openContactModal();','openTroubleshootMessage();')}" styleClass="slds-button slds-button_brand" reRender="nothing">
                                                </apex:commandButton>
                                                <apex:outputPanel layout="block" styleClass="slds-p-vertical_xx-small slds-text-title" rendered="{!objectNameAndOrgSyncStatus['Contact']!='Active'}">
                                                    Warning:
                                                    <apex:outputText value=" NetSuite Contact sync is disabled in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to enable it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Contact']=='Inactive'}"/>
                                                    <apex:outputText value=" NetSuite Contact sync is not configured in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'to perform this operation you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Contact']=='Not Configured'}"/>
                                                </apex:outputPanel>
                                            </div>
                                            <apex:actionFunction name="openContactModal" oncomplete="showHideModal('NSContactModal','NSContactModaldrop');" reRender="nothing" status="action-status"/>
                                            <apex:actionFunction name="openTroubleshootMessage" oncomplete="addPopupText('You do not have sufficient permissions on Contact object to perform this operation. Please contact your System Administrator.','NULL');" reRender="nothing" status="action-status"/>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" rendered="{!hasItemSyncInformation}">
                                            <h2 class="slds-p-top_medium oneClick">NetSuite Items</h2>
                                            <div class="slds-col slds-p-left_small">
                                                <p class="slds-p-vertical_xx-small slds-text-title slds-m-bottom_xx-small"><span style="font-weight: bold;">USE WITH CAUTION AND AFTER READING THIS NOTICE ONLY:</span> With this feature, Breadwinner will automate the Product Match between NetSuite and Salesforce. Breadwinner will perform the Product Match based on the <span style="font-weight: bold;">Item Name </span>(1st priority) and <span style="font-weight: bold;">Display Name </span>(2nd priority). If the NetSuite Item name or display name exactly matches a Salesforce Product name, Breadwinner will auto-match these; otherwise, it will create a new Salesforce Product. This also auto-matches or creates related NetSuite Price Levels and NetSuite Item Prices as Salesforce PriceBooks and Salesforce PriceBook Entries respectively.</p>
                                                <apex:commandButton id="oneClickNetSuiteItemImportButton" disabled="{!objectNameAndOrgSyncStatus['Item']!='Active'}" value="Auto Match/Create Salesforce Products from NetSuite Items" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand slds-m-right_xx-small" status="action-status" reRender="setup-content" oncomplete="addPopupText('{!IF(isBatchStarted,'Your auto match/create of NetSuite Items as new Salesforce Products has started successfully.',IF(AND($ObjectType.Product2.Createable,$ObjectType.PricebookEntry.Createable,$ObjectType.Pricebook2.Createable),'Unable to start this process. Please try again later.','You do not have sufficient permissions on Product object to perform this operation. Please contact your System Administrator.'))}','NULL');">
                                                    <apex:param name="MassProductMatch" value="ProductMatch" assignTo="{!objectName}"/>
                                                </apex:commandButton>
                                                <apex:outputPanel layout="block" styleClass="slds-p-vertical_xx-small slds-text-title" rendered="{!objectNameAndOrgSyncStatus['Item']!='Active'}">
                                                    Warning:
                                                    <apex:outputText value=" NetSuite Item sync is disabled in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to enable it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Item']=='Inactive'}"/>
                                                    <apex:outputText value=" NetSuite Item sync is not configured in Breadwinner. To perform this operation,  {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Item']=='Not Configured'}"/>
                                                    <apex:outputText value=" Auto-Create Salesforce Products from NetSuite Items is set to 'Do Not Create'. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to change this configuration in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Item']=='Do Not Create'}"/>
                                                    <apex:outputText value=" Auto-Create Salesforce Products from NetSuite Items is not yet set. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" rendered="{!objectNameAndOrgSyncStatus['Item']=='Product Configuration Not Set'}"/>
                                                </apex:outputPanel>
                                            </div>
                                        </apex:outputPanel>
                                    </div>
                                </apex:outputPanel>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!isBreadwinnerAdministrator}">
                        <div class="slds-section" id="DeleteRecordsSection">
                            <h3 class="slds-section__title">
                                <button class="slds-button slds-section__title-action" type="button" onclick="showHideSectionConent('DeleteRecordsSection','DeleteSectionImage');" style="letter-spacing: .0625rem;text-transform: initial;">
                                    <img id="DeleteSectionImage" src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionClose.png')}" style="margin-bottom: 3px;margin-right: 4px;" />
                                    <span style="color: rgb(62, 62, 60); text-transform: uppercase; font-size: .75rem;padding-left: 3px;">Delete NetSuite Data in Salesforce</span>
                                </button>
                            </h3>
                            <div class="slds-section__content slds-p-top_none">
                                <apex:outputPanel layout="block" styleclass="slds-m-horizontal_medium" id="NSDeleteSection">
                                    <div class="slds-text-title_caps slds-m-top_small" style="color:red;">Don&apos;t use the delete functionality unless specifically asked by Breadwinner Support.</div>
                                    <div class="slds-text-title slds-m-top_small">Use the below Delete buttons to delete the specific object related NetSuite records in Salesforce. (no data in NetSuite will be affected)<br/><br/>Due to Salesforce limitations, Breadwinner may not delete all of your records at once, if you have more than 10000 records, please continue deleting records until all records are deleted.</div>
                                    <div class="slds-tabs_scoped">
                                        <ul class="slds-tabs_scoped__nav slds-m-top_small NSObjectTabs " role="tablist">
                                            <li class="slds-tabs_scoped__item slds-text-heading_label slds-is-active {!IF(NOT(isNetSuiteConnected), 'slds-hide','')}" title="{!acWrapper.Name}" role="presentation">
                                                <a class="slds-tabs_scoped__link" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="delete-section" id="delete_section__tab" onclick="selectNSDeleteTab(this,'Connected Org');">{!acWrapper.Name}</a>
                                            </li>
                                            <li class="slds-tabs_scoped__item slds-text-heading_label {!IF(NOT(isNetSuiteConnected), 'slds-is-active','')}" title="Others" role="presentation">
                                                <a class="slds-tabs_scoped__link" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="delete-section" id="delete_section__tab" onclick="selectNSDeleteTab(this,'Others');">Others</a>
                                            </li>
                                        </ul>
                                        <div id="delete-section" class="slds-tabs_scoped__content" role="tabpanel" aria-labelledby="delete_section__tab">
                                            <apex:outputPanel id="deleteSection" layout="block">
                                                <apex:outputPanel layout="block" rendered="{!IF(showHideDeleteSection=='SHOW',true,false)}">
                                                    <apex:outputPanel layout="block" styleClass="slds-text-title slds-m-bottom_x-small" rendered="{!AND(isNetSuiteConnected,isFromDSOthersTab)}">Below buttons will delete the NetSuite records in Salesforce related to NetSuite Orgs that are not connected.</apex:outputPanel>
                                                    <div id="DeleteRecordsCmpSection"/>
                                                    <script>
                                                        try{
                                                            showspinner();
                                                            console.log('namespace:'+'{!namespace}');
                                                            $Lightning.use("{!JSENCODE(If(namespace!= '', namespace, 'c'))}:lightningOutUnstyled", function() {
                                                                $Lightning.createComponent(
                                                                    "{!JSENCODE(If(namespace!= '', namespace, 'c'))}:deleteRecords",
                                                                    {"connectedOrgName":'{!If(isFromDSOthersTab, "Others", acWrapper.Name)}'},
                                                                    "DeleteRecordsCmpSection",
                                                                    function(cmp) {
                                                                        console.log("Component is created!");
                                                                        console.log(cmp);
                                                                        setTimeout(function(){hidespinner();},5000);
                                                                    });
                                                                });
                                                        }
                                                        catch(e){
                                                            console.log("exception while loading the component"+e);
                                                        }

                                                    </script>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </div>
                                    </div>
                                </apex:outputPanel>
                                <div align="left">
                                    <apex:commandLink rel="noopener noreferrer" action="{!toggleShowCustomQueryFilter}" status="action-status" reRender="CustomQueryFilterEditor" id="showCustomQueryFilterBtn" styleClass="GrayLinks">.</apex:commandLink>
                                    <apex:outputPanel id="CustomQueryFilterEditor" layout="block">
                                        <apex:outputPanel layout="block" styleClass="slds-box slds-float_left" rendered="{!showCustomQueryFilter}">
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control">
                                                    <apex:inputText value="{!queryString}" styleClass="slds-input"/>
                                                    <apex:commandButton value="Run Query" action="{!executeQuery}" styleClass="slds-button slds-button_brand slds-m-top_small slds-m-right_small" reRender="nothing"/>
                                                    <apex:commandButton value="Execute Delete" action="{!executeDelete}" styleClass="slds-button slds-button_brand slds-m-top_small slds-m-right_small" reRender="nothing"/>
                                                    <apex:commandButton value="Execute Update" action="{!executeUpdate}" styleClass="slds-button slds-button_brand slds-m-top_small" reRender="nothing"/>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" id="customSettingSection" styleClass="slds-m-horizontal_medium" rendered="{!isBreadwinnerAdministrator}">
                        <apex:commandLink rel="noopener noreferrer" action="{!toggleShowCustomSettings}" status="action-status" reRender="customSettingSection" styleClass="slds-float_right GrayLinks">.</apex:commandLink>
                        <apex:outputPanel layout="block" rendered="{!showCustomSettings}">
                            <div class="slds-form slds-size_1-of-1 slds-grid slds-grid_vertical">
                                <label class="slds-truncate slds-form-element_horizontal" title="App Config Settings">App Config Settings</label>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Is Customer Match Completed</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputCheckbox value="{!acWrapper.IsCustomerMatchCompleted}"/>
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Is Product Match Completed</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputCheckbox value="{!acWrapper.IsProductMatchCompleted}"/>
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Need To Reconnect</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputCheckbox disabled="true" value="{!acWrapper.NeedToReconnect}" />
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Deleted Records Last Sync Time</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:outputText styleClass="slds-wrap" value="{!acWrapper.DeletedRecordsLastSyncTime}" />
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Subsidiary Status</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:outputText value="{!acWrapper.SubsidiaryStatus}" />
                                    </div>
                                </div><br/>
                                <label class="slds-truncate slds-form-element_horizontal" title="Breadwinner Settings">Breadwinner Settings</label>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Date of Expiration</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:outputText styleClass="slds-wrap" value="{!bsWrapper.DateofExpiration}" />
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Endpoint URL</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:outputText styleClass="slds-wrap" value="{!bsWrapper.EndpointURL}" />
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Page Layouts Updated</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputCheckbox disabled="true" value="{!bsWrapper.PageLayoutsUpdated}" />
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Active Mode</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputCheckbox disabled="true" value="{!bsWrapper.activeMode}" />
                                    </div>
                                </div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Status</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:outputText styleClass="slds-wrap" value="{!bsWrapper.Status}" />
                                    </div>
                                </div>
								<div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Suite Billing Enabled</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputCheckbox value="{!bsWrapper.suiteBillingEnabled}" />
                                    </div>
								</div>
                                <div class="slds-form-element slds-form-element_horizontal">
                                    <label class="slds-form-element__label">Password</label>
                                    <div class="slds-form-element__control slds-p-top_x-small">
                                        <apex:inputText styleClass="slds-wrap" value="{!bwPassword}" />
                                    </div>
                                </div>
                            </div>
                            <div align="center" class="slds-m-top_large slds-m-bottom_large">
                                <apex:commandButton id="CSCancelButton" value="Cancel" action="{!toggleShowCustomSettings}" reRender="customSettingSection" status="action-status" styleClass="slds-button slds-button_neutral slds-m-right_small" />
                                <apex:commandButton id="CSSaveButton" value="Save" action="{!saveCustomSettingsChanges}" reRender="customSettingSection" status="action-status" styleClass="slds-button slds-button_brand" />
                            </div>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:outputPanel>
                <!-- Starts SLDS Modal for popup box -->
                <div>
                    <div id="tsModal" class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog">
                        <div class="slds-modal__container">
                            <div class="slds-modal__header">
                                <button id="tsModalCanBtn" class="slds-button slds-button_icon-inverse slds-modal__close" type="button" onclick="showHideModal('tsModal','tsBackdrop');">
                                    <svg aria-hidden="true" class="slds-button__icon slds-button__icon_large" >
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </button>
                                <h2 class="slds-text-heading_medium">Troubleshooting</h2>
                            </div>
                            <div class="slds-modal__content slds-p-around_medium">
                                <p>
                                    Dynamic popup text goes here.
                                </p>
                                <div align="right" class="slds-m-top_medium">
                                    <!-- <apex:commandButton id="tsDeleteBtn" value="Yes" action="{!deleteRecords}" status="action-status" reRender="deleteSection" styleClass="slds-button slds-button_brand slds-m-right_xx-small" oncomplete="showHideModal('tsModal','tsBackdrop');"/> -->
                                    <apex:commandButton id="tsOKCancelBtn" onclick="showHideModal('tsModal','tsBackdrop');" styleClass="slds-button slds-m-right_small popupBtn executeOnEscape" reRender="nothing"/>
									<apex:commandLink rel="noopener noreferrer" id="tsMetaDataLink" value="Continue to Restart Metadata Sync" onclick="showHideModal('tsModal','tsBackdrop');" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand" status="action-status" reRender="setup-content" oncomplete="addPopupText('{!IF(isBatchStarted,'Historical NetSuite Metadata Sync started successfully.','Historical NetSuite Metadata Sync job was running or unable to restart the Historical NetSuite Metadata Sync. Please try again later.')}','NULL');">
                                        <apex:param name="MetaDataSync" value="Metadata" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="slds-backdrop" id="tsBackdrop"></div>
                </div>
                <!-- End SLDS Modal for popup box -->
                <!-- Starts SLDS Modal popup for Salesforce Contacts creation from NetSuite Contacts -->
                <div>
                    <div id="NSContactModal" class="slds-modal slds-modal_small" aria-hidden="false" role="dialog">
                        <div class="slds-modal__container">
                            <div class="slds-modal__header">
                                <button id="NSContactModalCanBtn" class="slds-button slds-button_icon-inverse slds-modal__close" type="button" onclick="showHideModal('NSContactModal','NSContactModaldrop');">
                                    <svg aria-hidden="true" class="slds-button__icon slds-button__icon_large" >
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#close')}" ></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </button>
                                <h2 class="slds-text-heading_medium">Mass Create Salesforce Contacts from NetSuite Contacts</h2>
                            </div>
                            <div class="slds-modal__content slds-p-around_medium">
                                <p>Warning: Breadwinner will create Salesforce Contacts from all NetSuite Contacts without checking for duplicates. This could lead to unwanted data. Only continue if you are certain you want to create a Salesforce Contact from each NetSuite Contact. (Breadwinner will not create Salesforce Contacts from NetSuite Contacts that are orphaned / not under a NetSuite Company) </p><br/>
                                <div align="middle" class="slds-m-top_medium">
                                    <apex:commandButton id="NSContactModalCancel" value="Cancel" onclick="showHideModal('NSContactModal','NSContactModaldrop');" styleClass="slds-button slds-button_neutral slds-m-right_xx-small executeOnEscape" reRender="nothing"/>
									<apex:commandLink rel="noopener noreferrer" id="NSContactModalCreate" value="Continue and Create Salesforce Contacts from NetSuite Contacts" onclick="showHideModal('NSContactModal','NSContactModaldrop');" action="{!restartHistoricalSync}" styleClass="slds-button slds-button_brand" status="action-status" reRender="setup-content" oncomplete="addPopupText('{!IF(isBatchStarted,'Your mass create of NetSuite Contacts as new Salesforce Contacts has started successfully.','Unable to start this process. Please try again later.')}','NULL');">
                                        <apex:param name="MassContactMatch" value="ContactMatch" assignTo="{!objectName}"/>
                                    </apex:commandLink>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="slds-backdrop" id="NSContactModaldrop"></div>
                </div>
                <!-- Ends SLDS Modal popup for Salesforce Contacts creation from NetSuite Contacts-->
                <Script type="text/javascript">
                    function addPopupText(popupMsg,objName) {
                        j$("#tsModal p").text(popupMsg);

                        const tsOKCancelBtn = '{!$Component.page.menuComponents.MenuContainerPage.MenuForm.tsOKCancelBtn}';
                        const tsMetaDataLink = '{!$Component.page.menuComponents.MenuContainerPage.MenuForm.tsMetaDataLink}';

                        document.getElementById(tsOKCancelBtn).style.display = "";

                        if(objName =='Metadata') {
                            document.getElementById(tsMetaDataLink).style.display = "";
                            //document.getElementById("page:formId:tsDeleteBtn").style.display = "none";
                            j$(".popupBtn").addClass('slds-button_neutral').removeClass('slds-button_brand');
                            j$(".popupBtn").prop('value', 'No');
                        }
                        else if(objName!='NULL'){
                            document.getElementById(tsMetaDataLink).style.display = "none";
                            //document.getElementById("page:formId:tsDeleteBtn").style.display = "";
                            j$(".popupBtn").addClass('slds-button_neutral').removeClass('slds-button_brand');
                            j$(".popupBtn").prop('value', 'No');
                        }
                        else{
                            document.getElementById(tsMetaDataLink).style.display = "none";
                            //document.getElementById("page:formId:tsDeleteBtn").style.display = "none";
                            j$(".popupBtn").prop('value', 'OK');
                            j$(".popupBtn").addClass('slds-button_brand').removeClass('slds-button_neutral');
                        }
                        showHideModal('tsModal','tsBackdrop');
                    }
                    function selectNSDeleteTab(elmnt,nstype) {
                        // slds-active
                        j$(elmnt).parent("li").siblings(".slds-is-active").removeClass("slds-is-active");
                        j$(elmnt).parent("li").addClass("slds-is-active");

                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);

                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);

                        // hiding previouly selected tab (slds-show/slds-hide)
                        j$(elmnt).closest(".slds-tabs_default").children("div[role='tabpanel'].slds-show").addClass("slds-hide").removeClass("slds-show");
                        // displaying newly selected tab (slds-show/slds-hide)
                        j$(elmnt).closest(".slds-tabs_default").children("div[aria-labelledby='"+elmnt.id+"']").addClass("slds-show").removeClass("slds-hide");

                        if(nstype === 'Connected Org' || nstype === 'Others') {
                            if(nstype === 'Connected Org') document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.isFromDSOthersTabId)}').value = false;
                            else document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.isFromDSOthersTabId)}').value = true;
                            DeleteRecordsSection('SHOW');
                        }
                        //TroubleshootchangeValue();
                    }
                    function showHideSectionConent(sectionId,imageid){
                        var sectiondiv = document.getElementById(sectionId);
                        var imagediv = document.getElementById(imageid);
                        if(j$(sectiondiv).hasClass("slds-is-open")){
                            j$(sectiondiv).removeClass("slds-is-open");
                            j$(imagediv).attr("src","{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionClose.png')}");
                            j$(imagediv).css({"margin-bottom":"3px", "margin-right":"5px", "width":"14px"});
                        }
                        else{
                            if(sectionId == 'DeleteRecordsSection'){  DeleteRecordsSection('SHOW');}
                            j$(sectiondiv).addClass("slds-is-open");
                            j$(imagediv).attr("src","{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionOpen.png')}");
                            j$(imagediv).css({"margin-bottom":"0px", "margin-right":"5px", "width":"15px"});
                        }
                    }
                </Script>
            </div>
            <div id="connectionTabContentSection" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="connectionTabContentSection__item">
                    <!--<apex:outputPanel id="ConnectionMenuSectionId" >
                        <ul class="slds-tabs_default__nav" role="tablist">
                            <apex:repeat value="{!appConfigMap}" var="appcon">
                                <li class="slds-tabs_default__item slds-is-active slds-text-title_caps slds-truncate" title="{!acWrapper.Name}" role="presentation">
                                    <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="selectAppConfigTab(this, {!acWrapper.Name})" role="tab" tabindex="0" aria-selected="true" aria-controls="{!acWrapper.Name}" id="{!acWrapper.Name}">{!acWrapper.Name}</a>
                                </li>
                            </apex:repeat>
                        </ul>
                    </apex:outputPanel> -->
                        <apex:actionFunction name="CheckBWConnection" action="{!checkBreadwinnerConnection}" reRender="connectiontabcontent" status="action-status" oncomplete="checkNetsuiteEndpoint();message();" />
                        <apex:actionFunction name="checkNetsuiteEndpoint" action="{!checkNetsuiteEndpoint}" reRender="connectiontabcontent" status="ConnectionToNetsuiteStatus" oncomplete="SubsidaryConnectionsection();message();" />
                        <apex:actionFunction name="SubsidaryConnectionsection" action="{!checkNSObjectEndpoint}"  reRender="connectiontabcontent" status="Subsidarysyncload" oncomplete="CustomerConnectionsection();message();">
                            <apex:param name="obj" value="subsidiary"/>
                        </apex:actionFunction>
                        <apex:actionFunction name="CustomerConnectionsection" action="{!checkNSObjectEndpoint}" reRender="connectiontabcontent" status="Custsyncload" oncomplete="ItemConnectionsection();message();">
                            <apex:param name="obj" value="customer"/>
                        </apex:actionFunction>
                        <apex:actionFunction name="ItemConnectionsection" action="{!checkNSObjectEndpoint}" reRender="connectiontabcontent" status="Itemsyncload" oncomplete="SalesOrderConnectionsection();message();">
                            <apex:param name="obj" value="item"/>
                        </apex:actionFunction>
                        <apex:actionFunction name="SalesOrderConnectionsection" action="{!checkNSObjectEndpoint}" reRender="connectiontabcontent" status="SOsyncload" oncomplete="message();">
                            <apex:param name="obj" value="salesOrder"/>
                        </apex:actionFunction>
                        <apex:outputPanel id="connectiontabcontent">
                            <apex:outputPanel layout="block" styleClass="slds-m-around_small" rendered="{!NOT(isNetSuiteConnected)}">
                                <apex:pageMessage severity="WARNING" summary="Please connect to a NetSuite Org from the Setup section of Breadwinner tab."/>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="slds-m-around_small" rendered="{!NOT(isBWServerWorking)}">
                                <apex:pageMessage severity="WARNING" summary="Breadwinner Servers are Low."/>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="slds-m-around_small"  id="ConnectionTabSection">
                                <apex:outputPanel layout="block" >
                                    <h3 class="slds-section-title_divider slds-m-bottom_small">Troubleshooting Netsuite Connection</h3>
                                    <div class="slds-m-horizontal_small slds-m-bottom_medium">
                                        <apex:variable var="sno" value="{!0}"/>
                                        <table border="0" width="60%" cellpadding="2" style="font-size:medium;line-height:2;">
                                            <tr>
                                                <td style="width:4%">
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td style="width:55%">
                                                    Checking Breadwinner Servers
                                                </td>
                                                <td align="left" style="width: 10%;">
                                                    <apex:actionStatus id="BreadwinnerConnection" >
                                                        <apex:facet name="start" >
                                                            <div role="alert">
                                                                <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                    <span class="slds-assistive-text">Loading</span>
                                                                    <div class="slds-spinner__dot-a"></div>
                                                                    <div class="slds-spinner__dot-b"></div>
                                                                </div>
                                                            </div>
                                                        </apex:facet>
                                                        <apex:facet name="stop">
                                                            <apex:image value="{! IF(isBWServerWorking , URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}"   height="20" width="20"/>
                                                        </apex:facet>
                                                    </apex:actionStatus>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:4%">
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td style="width:55%">
                                                    Checking if NetSuite Credentials are saved in Breadwinner
                                                </td>
                                                <td align="left" style="width: 10%;">
                                                    <apex:actionStatus id="ConsumerDetailsExistStatus" >
                                                        <apex:facet name="start" >
                                                            <div role="alert">
                                                                <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                    <span class="slds-assistive-text">Loading</span>
                                                                    <div class="slds-spinner__dot-a"></div>
                                                                    <div class="slds-spinner__dot-b"></div>
                                                                </div>
                                                            </div>
                                                        </apex:facet>
                                                        <apex:facet name="stop">
                                                            <apex:image value="{! IF(AND(isNetSuiteConnected,acWrapper!=null) , URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}"   height="20" width="20"/>
                                                        </apex:facet>
                                                    </apex:actionStatus>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td>
                                                    Checking if NetSuite Credentials are Valid
                                                </td>
                                                <td>
                                                    <apex:outputPanel id="ConnectionToNetsuiteStatuss">
                                                        <apex:actionStatus id="ConnectionToNetsuiteStatus" >
                                                            <apex:facet name="start" >
                                                                <div role="alert">
                                                                    <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                        <span class="slds-assistive-text">Loading</span>
                                                                        <div class="slds-spinner__dot-a"></div>
                                                                        <div class="slds-spinner__dot-b"></div>
                                                                    </div>
                                                                </div>
                                                            </apex:facet>
                                                            <apex:facet name="stop">
                                                                <apex:image value="{! IF(AND(isNSConnectionValid,isNetSuiteConnected), URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}" height="20" width="20" />
                                                            </apex:facet>
                                                        </apex:actionStatus>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                </td>
                                                <td colspan ="2">
                                                    <apex:outputPanel layout="block" id="ConnectionToNetsuiteError">
                                                        <apex:outputText rendered="{!AND(isNetSuiteConnected,NOT(IsBlank(connectionError)))}" value="{!connectionError}" style="color:red;font-size:small"  ></apex:outputText>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td>
                                                    Checking for API of NetSuite Subsidiary
                                                </td>
                                                <td>
                                                    <apex:outputPanel id="Subsidarysync">
                                                        <apex:actionStatus id="Subsidarysyncload" >
                                                            <apex:facet name="start" >
                                                                <div role="alert">
                                                                    <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                        <span class="slds-assistive-text">Loading</span>
                                                                        <div class="slds-spinner__dot-a"></div>
                                                                        <div class="slds-spinner__dot-b"></div>
                                                                    </div>
                                                                </div>
                                                            </apex:facet>
                                                            <apex:facet name="stop">
                                                                <apex:image value="{!IF(AND(OR(objectEndpointDetailMap['Subsidiary'].isWorking,isSubsidiaryDisabledInNetSuite),isNetSuiteConnected), URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}" style="{!IF(NOT(objectEndpointDetailMap['Subsidiary'].isDisplay), 'opacity: 0;','')}"  height="20" width="20" />
                                                            </apex:facet>
                                                        </apex:actionStatus>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                </td>
                                                <td colspan ="2">
                                                    <apex:outputPanel layout="block" id="ConnectionTosubsError">
                                                        <apex:outputText rendered="{!AND(isNetSuiteConnected,NOT(objectEndpointDetailMap['Subsidiary'].isWorking))}" value="{!objectEndpointDetailMap['Subsidiary'].message}" style="color:red;font-size:small"  ></apex:outputText>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td>
                                                    Checking for API of NetSuite Customer
                                                </td>
                                                <td>
                                                    <apex:outputPanel id="Custsync">
                                                        <apex:actionStatus id="Custsyncload" >
                                                            <apex:facet name="start" >
                                                                <div role="alert">
                                                                    <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                        <span class="slds-assistive-text">Loading</span>
                                                                        <div class="slds-spinner__dot-a"></div>
                                                                        <div class="slds-spinner__dot-b"></div>
                                                                    </div>
                                                                </div>
                                                            </apex:facet>
                                                            <apex:facet name="stop">
                                                                <apex:image value="{!IF(AND(objectEndpointDetailMap['Customer'].isWorking,isNetSuiteConnected), URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}" style="{!IF(NOT(objectEndpointDetailMap['Customer'].isDisplay), 'opacity: 0;','')}"  height="20" width="20" />
                                                            </apex:facet>
                                                        </apex:actionStatus>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                </td>
                                                <td colspan ="2">
                                                    <apex:outputPanel layout="block" id="ConnectionToCustError">
                                                        <apex:outputText rendered="{!AND(isNetSuiteConnected,NOT(objectEndpointDetailMap['Customer'].isWorking))}" value="{!objectEndpointDetailMap['Customer'].message}" style="color:red;font-size:small"  ></apex:outputText>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td>
                                                    Checking for API of NetSuite Item
                                                </td>
                                                <td>
                                                    <apex:outputPanel id="Itemsync">
                                                        <apex:actionStatus id="Itemsyncload" >
                                                            <apex:facet name="start" >
                                                                <div role="alert">
                                                                    <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                        <span class="slds-assistive-text">Loading</span>
                                                                        <div class="slds-spinner__dot-a"></div>
                                                                        <div class="slds-spinner__dot-b"></div>
                                                                    </div>
                                                                </div>
                                                            </apex:facet>
                                                            <apex:facet name="stop">
                                                                <apex:image value="{!IF(AND(objectEndpointDetailMap['Item'].isWorking,isNetSuiteConnected), URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}" style="{!IF(NOT(objectEndpointDetailMap['Item'].isDisplay), 'opacity: 0;','')}"  height="20" width="20" />
                                                            </apex:facet>
                                                        </apex:actionStatus>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                </td>
                                                <td colspan ="2">
                                                    <apex:outputPanel layout="block" id="ConnectionToItemError">
                                                        <apex:outputText rendered="{!AND(isNetSuiteConnected,NOT(objectEndpointDetailMap['Item'].isWorking))}" value="{!objectEndpointDetailMap['Item'].message}"  style="color:red;font-size:small" ></apex:outputText>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <apex:variable var="sno" value="{!sno+1}"/>
                                                    {!sno})
                                                </td>
                                                <td>
                                                    Checking for API of NetSuite Sales Order
                                                </td>
                                                <td>
                                                    <apex:outputPanel id="SalesOrdersync">
                                                        <apex:actionStatus id="SOsyncload" >
                                                            <apex:facet name="start" >
                                                                <div role="alert">
                                                                    <div role="status" class="slds-spinner slds-spinner_small slds-spinner_brand troubleshootspinner">
                                                                        <span class="slds-assistive-text">Loading</span>
                                                                        <div class="slds-spinner__dot-a"></div>
                                                                        <div class="slds-spinner__dot-b"></div>
                                                                    </div>
                                                                </div>
                                                            </apex:facet>
                                                            <apex:facet name="stop">
                                                                <apex:image value="{! IF(AND(objectEndpointDetailMap['SalesOrder'].isWorking,isNetSuiteConnected), URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/green_check.png'), URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/red_check.png'))}" style="{!IF(NOT(objectEndpointDetailMap['SalesOrder'].isDisplay), 'opacity: 0;','')}" height="20" width="20" />
                                                            </apex:facet>
                                                        </apex:actionStatus>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                </td>
                                                <td colspan ="2">
                                                    <apex:outputPanel layout="block" id="ConnectionToSoError">
                                                        <apex:outputText rendered="{!AND(isNetSuiteConnected,NOT(objectEndpointDetailMap['SalesOrder'].isWorking))}" value="{!objectEndpointDetailMap['SalesOrder'].message}" style="color:red;font-size:small"></apex:outputText>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </div>
                </div>
            </div>
            <!-- Troubleshooting Section End -->

            <!-- Import Progress Section Starts -->
            <div id="progress" class="slds-hide" aria-labelledby="Progress">
                <!-- Page Header Start -->
				<div id="theImportPageHeader" class="slds-page-header" role="banner">
					<div class="slds-media slds-media_center">
						<div class="slds-media__figure slds-icon_container slds-icon-action-description">
							<svg class="slds-icon slds-icon_small" aria-hidden="true">
								<use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS,'assets/icons//utility-sprite/svg/symbols.svg#sync')}" />
							</svg>
						</div>
						<div class="slds-media__body">
							<p class="slds-page-header__title slds-truncate"><apex:outputText value="Import Progress"/></p>
							<p class="slds-text-body_small">Breadwinner • NetSuite </p>
						</div>
						<apex:commandButton id="refreshBtn" value="Refresh" action="{!checkImportProgress}" status="action-status" styleClass="slds-button slds-button_brand slds-m-left_medium slds-m-right_medium slds-m-top_xxx-small" reRender="progress-content"/>
					</div>
				</div>
				<!-- Page Header END -->
				<apex:outputPanel layout="block" id="progress-content" styleClass="slds-p-around_small" rendered="{!AND($ObjectType.breadwinner_ns__BW_NetSuite_Object__c.Accessible)}">
                    <apex:outputPanel layout="block" rendered="{!showProgressSection}">
                        <apex:outputPanel layout="block">
                            <h3 class="slds-section-title_divider slds-m-bottom_small">Post Connection Sync Status</h3>
                            <div class="slds-grid slds-wrap">
                                <div class="slds-m-horizontal_small orgLevelImportProgressCls slds-large-size_4-of-12 slds-medium-size_4-of-12 slds-small-size_6-of-12 slds-size_3-of-12 slds-col_bump-right">
                                    <ul class="slds-has-dividers_around-space slds-size_1-of-1" style="margin-inline-start:0px;margin-block-end:0px;">
                                        <apex:repeat value="{!allOrgWideObjectProgress}" var="syncObj" first="0" rows="{!CEILING(allOrgWideObjectProgress.size/2)}">
                                            <apex:outputPanel layout="block" styleClass="slds-item" style="background-color:{!syncObj.statusColor};" >
                                                <div class="slds-tile slds-tile_board">
                                                    <h3 class="slds-tile__title slds-truncate" title="Importing {!syncObj.ObjectPluralName}" style="font-weight:600;">
                                                        {!syncObj.ObjectPluralName}  {!IF(syncObj.totalRecordCount!=null,'('+syncObj.totalRecordCount+')','')}
                                                    </h3>
                                                    <div class="slds-tile__detail">
                                                        <apex:outputText value="{! IF(syncObj.status=='Finished', 'Last Synced at ' & syncObj.dateDone, syncObj.status ) }" />
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                        </apex:repeat>
                                    </ul>
                                </div>
                                <div class="slds-m-horizontal_small orgLevelImportProgressCls slds-large-size_4-of-12 slds-medium-size_4-of-12 slds-small-size_6-of-12 slds-size_3-of-12 slds-col_bump-right">
                                    <ul class="slds-has-dividers_around-space slds-size_1-of-1" style="margin-inline-start:0px;margin-block-end:0px;">
                                        <apex:repeat value="{!allOrgWideObjectProgress}" var="syncObj" first="{!CEILING(allOrgWideObjectProgress.size/2)}" rows="{!allOrgWideObjectProgress.size}">
                                            <apex:outputPanel layout="block" styleClass="slds-item" style="background-color:{!syncObj.statusColor};" >
                                                <div class="slds-tile slds-tile_board">
                                                    <h3 class="slds-tile__title slds-truncate" title="Importing {!syncObj.ObjectPluralName}" style="font-weight:600;">
                                                        {!syncObj.ObjectPluralName}  {!IF(AND(syncObj.totalRecordCount!=null, syncObj.status != 'In Progress') ,'('+syncObj.totalRecordCount+')','')}
                                                    </h3>
                                                    <div class="slds-tile__detail">
                                                        <apex:outputText value="{! IF(syncObj.status=='Finished', 'Last Synced at ' & syncObj.dateDone, syncObj.status ) }" />
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                        </apex:repeat>
                                    </ul>
                                </div>
                                <div class="slds-size_1-of-5 slds-col_bump-left slds-p-around_medium">
                                    <table class="slds-size_1-of-1">
                                        <tr>
                                            <td><div style="width:15px;height:15px;background-color:#7dc37d;"></div></td>
                                            <td>Finished</td>
                                        </tr>
                                        <tr>
                                            <td><div style="width:15px;height:15px;background-color:#62cfe4;margin-rigth:15px;"></div></td>
                                            <td>In Progress</td>
                                        </tr>
                                        <tr>
                                            <td><div style="width:15px;height:15px;background-color:#eadf72;margin-rigth:15px;"></div></td>
                                            <td>Not Started</td>
                                        </tr>
                                        <tr>
                                            <td><div style="width:15px;height:15px;background-color:#D3D3D3;margin-rigth:15px;"></div></td>
                                            <td>Sync Disabled</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </apex:outputPanel>
						<apex:outputPanel layout="block" id="previewSyncPanel" rendered="{!isShowPreviewSyncSection}" styleClass="slds-m-top_small">
							<apex:outputPanel layout="block">
								<h3 class="slds-section-title_divider slds-m-bottom_x-small">Preview Data Sync Status</h3>
							</apex:outputPanel>
							<div id="PreviewTableSection" styleClass="slds-m-bottom_small">
								<apex:DataTable value="{!previewSyncProgressList}" var="preview" styleclass="slds-table slds-max-medium-table_stacked-horizontal slds-no-row-hover" style="border-spacing: 5px;border-collapse:separate">
									<apex:column headerValue="" html-data-label="" styleClass="previewTableHeaders">
                                        <apex:outputText style="display: inline-block;vertical-align: middle;"/>
									</apex:column>	
									<apex:repeat value="{!previewSyncObjects}" var="object">
										<apex:column headerClass="slds-text-align_center"
											styleClass="previewObjColumn"
											style="width:10%;color: rgb(81, 79, 77);font-weight: 700; border-radius:5px;background-color:{!preview.ObjectProgressByObjectName[object].statusColor}"
											title="{!preview.ObjectProgressByObjectName[object].status} {!IF(preview.ObjectProgressByObjectName[object].status=='Finished',preview.ObjectProgressByObjectName[object].dateDone, '')}"
										>
										<apex:facet name="header">
											<apex:outputText value="{!object}" />
										</apex:facet>
										</apex:column>
									</apex:repeat>
								</apex:DataTable>
							</div>
						</apex:outputPanel>

						<apex:outputPanel layout="block" id="itemSyncSection" rendered="{!allOrgWideItemObjectProgress.size>0}">
							<h3 class="slds-section-title_divider slds-m-top_small slds-m-bottom_small">Org Wide Sync Status</h3>
							<div class="slds-grid slds-wrap">
								<div class="slds-m-horizontal_small orgLevelImportProgressCls slds-large-size_4-of-12 slds-medium-size_4-of-12 slds-small-size_6-of-12 slds-size_3-of-12 slds-col_bump-right">
									<ul class="slds-has-dividers_around-space slds-size_1-of-1" style="margin-inline-start:0px;margin-block-end:0px;">
										<apex:repeat value="{!allOrgWideItemObjectProgress}" var="syncObj" first="0" rows="{!CEILING(allOrgWideItemObjectProgress.size/2)}">
											<apex:outputPanel layout="block" styleClass="slds-item" style="background-color:{!syncObj.statusColor};" >
												<div class="slds-tile slds-tile_board">
													<h3 class="slds-tile__title slds-truncate" title="Importing {!syncObj.ObjectPluralName}" style="font-weight:600;">
														{!syncObj.ObjectPluralName}  {!IF(syncObj.totalRecordCount!=null,'('+syncObj.totalRecordCount+')','')}
													</h3>
													<div class="slds-tile__detail">
														<apex:outputText value="{! IF(syncObj.status=='Finished', 'Last Synced at ' & syncObj.dateDone, syncObj.status ) }" />
													</div>
												</div>
											</apex:outputPanel>
										</apex:repeat>
									</ul>
								</div>
								<div class="slds-m-horizontal_small orgLevelImportProgressCls slds-large-size_4-of-12 slds-medium-size_4-of-12 slds-small-size_6-of-12 slds-size_3-of-12 slds-col_bump-right">
									<ul class="slds-has-dividers_around-space slds-size_1-of-1" style="margin-inline-start:0px;margin-block-end:0px;">
										<apex:repeat value="{!allOrgWideItemObjectProgress}" var="syncObj" first="{!CEILING(allOrgWideItemObjectProgress.size/2)}" rows="{!allOrgWideItemObjectProgress.size}">
											<apex:outputPanel layout="block" styleClass="slds-item" style="background-color:{!syncObj.statusColor};" >
												<div class="slds-tile slds-tile_board">
													<h3 class="slds-tile__title slds-truncate" title="Importing {!syncObj.ObjectPluralName}" style="font-weight:600;">
														{!syncObj.ObjectPluralName}  {!IF(AND(syncObj.totalRecordCount!=null, syncObj.status != 'In Progress') ,'('+syncObj.totalRecordCount+')','')}
													</h3>
													<div class="slds-tile__detail">
														<apex:outputText value="{! IF(syncObj.status=='Finished', 'Last Synced at ' & syncObj.dateDone, syncObj.status ) }" />
													</div>
												</div>
											</apex:outputPanel>
										</apex:repeat>
									</ul>
								</div>
							</div>	
						</apex:outputPanel>

                        <apex:outputPanel layout="block" styleClass="slds-p-top_medium" rendered="{!hasSubsidiaries}">
                            <h3 class="slds-section-title_divider slds-m-top_small">Subsidiary Level Sync Status</h3>
                            <div class="slds-m-horizontal_small">
                                <div class="slds-scrollable_x" id="ProgressTableSection">
                                    <apex:outputPanel rendered="{!AND(subsidiariesAndObjectDetails.size>=49,NOT(isSubsidiaryDisabledInNetSuite))}">
                                        <apex:pageMessage severity="Warning" strength="2" summary="<b>Breadwinner is showing only actively configured subsidiaries as there are too many Subsidiaries.<b/>" escape="false" />
                                    </apex:outputPanel>
                                    <apex:DataTable value="{!subsidiariesAndObjectDetails}" var="subsidiary" styleclass="slds-table slds-max-medium-table_stacked-horizontal slds-no-row-hover" style="border-spacing: 5px;border-collapse:separate">
                                        <apex:column headerValue="" html-data-label="" style="width:10%;color: rgb(81, 79, 77);font-weight: 700;">
                                            <apex:repeat var="d" value="{!subsidiary.DepthList}">
                                                <apex:outputText styleClass="circleClass" />
                                            </apex:repeat>
                                            <apex:outputText value="{!subsidiary.Name}" style="display: inline-block;vertical-align: middle;"/>
                                        </apex:column>

                                        <apex:repeat value="{!progressSyncObjects}" var="syncObjectName">
                                            <apex:column headerClass="slds-text-align_center"
                                                styleClass="progressObjColumn"
                                                style="border-radius:5px;background-color:{!subsidiary.ObjectProgressByObjectName[syncObjectName].statusColor}"
                                                title="{!subsidiary.ObjectProgressByObjectName[syncObjectName].status} {!IF(subsidiary.ObjectProgressByObjectName[syncObjectName].status=='Finished',subsidiary.ObjectProgressByObjectName[syncObjectName].dateDone,IF(subsidiary.ObjectProgressByObjectName[syncObjectName].status=='In Progress',subsidiary.ObjectProgressByObjectName[syncObjectName].inProgressRecordCount,''))}"
                                            >
                                                <apex:facet name="header">
                                                    <apex:outputText value="{! syncObjectName}" />
                                                </apex:facet>
                                            </apex:column>
                                        </apex:repeat>
                                    </apex:DataTable>
                                </div>
                            </div>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- Import Progress Section End -->


            <!-- Status Logs Section Start -->
            <div id="statuslogs" class="slds-hide" aria-labelledby="StatusLogs">
                <c:PageHeader headerText="Status Logs" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />

                <div class="slds-m-horizontal_small slds-m-top_medium">
                    <div style="color: #54698d;" >
                        This page shows error messages and exceptions. To check logs please click on the button below.
                    </div>
                    <apex:commandButton id="checkRecentLogsButton" value="Check Log for Recent Errors" styleClass="slds-m-top_medium slds-button slds-button_brand" action="{!getStatusLogstableChartData}" status="action-status" reRender="nothing" oncomplete="drawTable('{!statusLogs}');message();" />
                    <div class="slds-m-top_medium" id="StatusLogs_table_div"></div>
                    <div id="statusLogMessage" class="slds-m-top_medium" ></div>
                </div>
                <apex:outputPanel id="chartPanel">
                    <script type="text/javascript">
                        google.charts.load("visualization", "1", {packages:["table"]});
                        function drawTable(statusLogs) {
                            if(statusLogs.length > 0) {
                                var result = JSON.parse(statusLogs);
                                if(result.length > 0) {
                                    var dataAsArray = new Array();
                                    var columnArray = ["Log Id", "Event Type", "Event Detail", "Additional Detail", "Time"];
                                    dataAsArray.push(columnArray);

                                    for (var i=0; i<result.length; i++) {
                                        var obj =result[i];
                                        var rowArray = [obj.log_id, obj.event_type, obj.event_detail, decodeHtml(obj.additional_detail), {v: obj.timestamp, f: obj.formatted_timestamp}];
                                        dataAsArray.push(rowArray);
                                    }

                                    var data = google.visualization.arrayToDataTable(dataAsArray, false);

                                    var table = new google.visualization.Table(document.getElementById('StatusLogs_table_div'));

                                    table.draw(data,{showRowNumber: true, width: '100%', height: '100%', page: 'enable', pageSize: 10, pagingButtons: 'auto'});

                                    var headerClassDiv = document.getElementsByClassName('google-visualization-table-th');
                                    if(headerClassDiv != undefined) {
                                        headerClassDiv[5].style.width = '9%';
                                        j$(".google-visualization-table-th").removeAttr("tabindex");
                                    }
                                }
                                else {
                                    document.getElementById("statusLogMessage").innerHTML = "Congratulations! There are no error logs.";
                                    document.getElementById("StatusLogs_table_div").style.display = "none" ;
                                }
                            }
                        }
                        function decodeHtml(html) {
                            var txt = document.createElement("textarea");
                            txt.innerHTML = html;
                            var decodedURIComp = decodeURIComponent(txt.value);
                            var repalceAmpersend=decodedURIComp.replace(/&amp;/g, '&');
                            var repalceQuotes=repalceAmpersend.replace(/&quot/g, '"');
                            var repalceNewLines=repalceQuotes.replace(/&nl/g, ' ');
                            return repalceNewLines;
                        }
                    </script>
                </apex:outputPanel>
            </div>
            <!-- Status Logs Section End -->

            <!-- General Configuration Section Start -->
            <div id="GeneralConfiguration" class="slds-hide" aria-labelledby="GeneralConfig">
                <c:PageHeader headerText="General Configuration" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />

                <apex:outputPanel layout="block" id="GeneralConfig-content" styleClass="slds-p-around_small">
                    <apex:pagemessages rendered="{!showPageMsg}" id="updaterecordspgmsg"/>
                    <apex:outputPanel layout="block" id="ConcurrentLimit-Content" styleClass="slds-p-top_small">
                        <h3 class="slds-section-title_divider">Number of NetSuite Connections</h3>
                        <div class="slds-p-horizontal_small">
                            <div class="slds-size_1-of-1 slds-medium-size_3-of-6 slds-large-size_1-of-1 slds-m-top_small">
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label slds-p-bottom_xx-small" >NetSuite’s concurrency limits let you allocate a part of your NetSuite account’s concurrent request limits to specific integrations. Adding more requests here will speed up the Breadwinner sync processes.</label>
                                    <div class="slds-text-body_small"><i>Note: Breadwinner by default sets the concurrent limit to 2. Please change the limit based on your NetSuite Integration record limits</i>.</div>
                                    <div class="slds-grid">
										<div class="slds-form-element__control slds-large-size_1-of-3 slds-m-right_xx-small">
											<apex:inputText id="concurrentLimit" value="{!bsWrapper.concurrentLimit}" styleClass="slds-input" onblur="validateConcurrentLimit(this.value,this.id);">
											</apex:inputText>
										</div>
										<label class="slds-form-element__label slds-p-bottom_x-small"> Connections</label>
									</div>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" id="SyncInterval-Content" styleClass="slds-p-top_medium">
                        <h3 class="slds-section-title_divider">Sync Interval - NetSuite to Salesforce Data Flow</h3>
                        <div class="slds-p-horizontal_small">
                            <div class="slds-size_1-of-1 slds-medium-size_3-of-6 slds-large-size_1-of-1 slds-m-top_small">
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label slds-p-bottom_xx-small" >Check NetSuite for records that were updated or created directly in NetSuite every:</label>
									<div class="slds-grid">
										<div class="slds-form-element__control slds-large-size_1-of-3 slds-m-right_xx-small">
											<apex:inputText id="regularSyncFrequencyId" value="{!bsWrapper.regularSyncFrequency}" styleClass="slds-input" onblur="validateSyncInterval(this.value,this.id);">
											</apex:inputText>
										</div>
										<label class="slds-form-element__label slds-p-bottom_x-small"> Minutes</label>
									</div>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" id="WeeklySyncTimeframe-Content" styleClass="slds-p-top_medium">
                        <h3 class="slds-section-title_divider">Weekly Sync Timeframe</h3>
                        <div class="slds-p-horizontal_small">
                            <div class="slds-size_1-of-1 slds-medium-size_3-of-6 slds-large-size_1-of-1 slds-m-top_small">
                                <div class="slds-form-element">
                                    <div class="slds-text-body_small slds-p-bottom_xx-small">The weekly sync will retrieve data for all the NetSuite objects that have been configured in the NetSuite Object Sync Configuration. The purpose of this is to make sure the Salesforce data always matches with NetSuite but that may not always be possible with large data sets.  This option allows you to decide how far back you want to sync.</div>
                                    <div class="slds-form-element__control slds-large-size_1-of-3">
                                        <div class="slds-select_container">
                                            <apex:selectList id="weeklySyncTimeframeId" value="{!bsWrapper.weeklySyncTimeframe}" styleClass="slds-select" size="1">
                                                <apex:selectOption itemValue="0" itemLabel="Do not run weekly sync"/>
                                                <apex:selectOption itemValue="14" itemLabel="Go back 2 weeks"/>
                                                <apex:selectOption itemValue="28" itemLabel="Go back 4 weeks"/>
                                                <apex:selectOption itemValue="42" itemLabel="Go back 6 weeks"/>
                                                <apex:selectOption itemValue="56" itemLabel="Go back 8 weeks"/>
                                                <apex:selectOption itemValue="999" itemLabel="Go back beginning"/>
                                            </apex:selectList>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" id="DeletedRecords-Content" styleClass="slds-p-top_medium">
                        <h3 class="slds-section-title_divider">Deleted Records in NetSuite</h3>
                        <div class="slds-p-horizontal_small">
                            <div class="slds-size_1-of-1 slds-medium-size_3-of-6 slds-large-size_1-of-1 slds-m-top_small">
                                <div class="slds-form-element">
                                    <div class="slds-text-body_small"><i>Note: Breadwinner updates the deleted records of NetSuite into Salesforce within 24 - 36 hours</i>.</div>
                                    <label class="slds-form-element__label slds-p-bottom_xx-small" >When records are deleted in NetSuite, then the corresponding slave-data records in Salesforce should be</label>
                                    <div class="slds-form-element__control slds-large-size_1-of-3">
                                        <div class="slds-select_container">
                                            <apex:selectList value="{!isDeleteActionByDefault}" id="deletedRecordsAction" styleClass="slds-select" size="1">
                                                <apex:selectOption itemvalue="TRUE" itemLabel="--Deleted (Default)--"/>
                                                <apex:selectOption itemvalue="FALSE" itemLabel="Kept but change status to Deleted"/>
                                                <apex:actionSupport event="onchange" reRender="GeneralConfig-content" oncomplete="displayCSMsg();"/>
                                            </apex:selectList>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                    <div align="center" class="slds-m-top_large slds-m-bottom_large">
                        <apex:commandButton id="generalConfigSaveButton" value="Save" action="{!saveGeneralConfig}" rendered="{!isBreadwinnerAdministrator}" reRender="GeneralConfig-content" status="action-status" styleClass="slds-button slds-button_brand"  oncomplete="message();"/>
                    </div>
                    <script type="text/javascript">
                    function displayCSMsg(){
                        var text = {!isDeleteActionByDefault};
                        if(!text){showHideModal('GeneralConfigModal','GeneralConfigBackdrop');}
                    }
                    function refreshGeneralConfigSection(){
                        document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.deletedRecordsAction)}').value = 'TRUE';
                    }
                    </script>
                </apex:outputPanel>
            </div>
            <div>
                <div class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog" id="GeneralConfigModal">
                    <div class="slds-modal__container">
                        <div class="slds-modal__header">
                            <button id="GeneralConfigModalCanBtn" class="slds-button slds-button_icon-inverse slds-modal__close" type="button" onclick="showHideModal('GeneralConfigModal','GeneralConfigBackdrop');generalConfigModalOnCancel();">
                                <svg aria-hidden="true" class="slds-button__icon slds-button__icon_large" >
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#close')}" ></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </button>
                            <h2 class="slds-text-heading_medium">Contact Support</h2>
                        </div>
                        <div class="slds-modal__content slds-p-around_medium">
                            <div>
                                Please contact support as this feature requires configuration and some custom coding.
                            </div>
                            <div align="Center" class="slds-m-top_large">
                                <apex:commandButton id="configOkButton" styleClass="slds-button slds-button_brand executeOnEscape" value="OK" onclick="showHideModal('GeneralConfigModal','GeneralConfigBackdrop');" oncomplete="refreshGeneralConfigSection();" reRender="GeneralConfig-content">
                                </apex:commandButton>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="slds-backdrop" id="GeneralConfigBackdrop"></div>
            </div>
            <apex:actionFunction name="generalConfigModalOnCancel" oncomplete="refreshGeneralConfigSection();" reRender="GeneralConfig-content" />
            <!-- General Configuration Section End -->

            <!-- Company Configuration Section Start -->
            <div id="CompanyConfiguration" class="slds-hide" aria-labelledby="CompanyConfig">
                <c:PageHeader headerText="Company Configuration" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <!-- This commented code will useful for MultiOrg Company Configuration
                <script>
                    function selectAppConfigTab(elmnt, selectedAppName){
                        // slds-active
                        j$(elmnt).parent("li").siblings(".slds-active").removeClass("slds-active");
                        j$(elmnt).parent("li").addClass("slds-active");
                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);
                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);
                    }
                </script>
                <apex:actionFunction name="PassAppConfigName" status="action-status"  reRender="CompanyConfig-content" oncomplete="message();" >
                    <apex:param name="AppConfigParam" value="" assignTo="{!SelectedOrg}"/>
                </apex:actionFunction>
                <apex:outputPanel id="CompanyMenuSectionId" >
                    <ul class="slds-tabs_default__nav" role="tablist">
                        <apex:repeat value="{!appConfigMap}" var="appcon">
                                <li class="slds-tabs_default__item slds-is-active slds-text-title_caps slds-truncate" title="{!acWrapper.Name}" role="presentation">
                                    <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="selectAppConfigTab(this, {!acWrapper.Name})" role="tab" tabindex="0" aria-selected="true" aria-controls="{!acWrapper.Name}" id="{!acWrapper.Name}">{!acWrapper.Name}</a>
                                </li>
                        </apex:repeat>
                    </ul>
                </apex:outputPanel> -->
                <apex:outputPanel layout="block" id="CompanyConfig-content" styleClass="slds-p-around_small">
                    <apex:outputPanel id="pmsgblock" layout="block" rendered="{!showPageMsg}">
                        <apex:pagemessages id="compgmsg"/>
                    </apex:outputPanel>
                    <h3 class="slds-section-title_divider">Account Match</h3>
                    <div class="slds-p-horizontal_small">
                        <label class="slds-form-element__label">Normally, when Breadwinner finds a NetSuite Customer or Vendor (which we refer to as NetSuite Company), Breadwinner compares the NetSuite Company name with the Salesforce Account name to determine if it should be auto-matched. You might, however, already have ID field in one or both of your systems. Breadwinner can instead use those ID fields to match records. Select one field from each platform for us to match based on these ID fields.</label>
                        <div class="slds-grid slds-gutters_large slds-has-flexi-truncate slds-wrap slds-p-top_x-small">
                            <div class="slds-col slds-large-size_1-of-2 slds-medium-size_1-of-2 slds-size_1-of-1">
                                <div class="slds-form-element slds-size_3-of-5">
                                    <label class="slds-form-element__label">NetSuite Company Field</label>
                                    <div class="slds-form-element__control">
                                        <div class="slds-select_container">
                                            <apex:selectList id="autoMatch_NS_FieldName" value="{!autoMatch_NS_FieldName}" styleClass="slds-select" size="1">
                                                <apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
                                                <apex:selectOptions value="{!nsCompanyTextFields}"/>
                                                <apex:actionSupport event="onchange" oncomplete="disableMassUpdateButton()" reRender="nothing" status="action-status"/>
                                            </apex:selectList>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-col slds-large-size_1-of-2 slds-medium-size_1-of-2 slds-size_1-of-1">
                                <div class="slds-form-element slds-size_3-of-5">
                                    <label class="slds-form-element__label">Salesforce Account Field</label>
                                    <div class="slds-form-element__control">
                                        <div class="slds-select_container">
                                            <apex:selectList id="autoMatch_SF_FieldName" value="{!autoMatch_SF_FieldName}" styleClass="slds-select" size="1">
                                                <apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
                                                <apex:selectOptions value="{!accountTextFields}"/>
                                                <apex:actionSupport event="onchange" oncomplete="disableMassUpdateButton()" reRender="nothing" status="action-status"/>
                                            </apex:selectList>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <apex:outputPanel layout="block" styleClass="slds-m-top_large slds-m-bottom_large" id="accountMatchSection">
                            <div align="center">
                                <apex:commandButton id="accountMatchSaveButton" value="Save" immediate="false" action="{!saveCompanyChanges}" rendered="{!isBreadwinnerAdministrator}" reRender="CompanyConfig-content, pmsgblock" status="action-status" styleClass="slds-button slds-button_brand slds-m-right_small" oncomplete="message();"/>
                            </div>
                            <div class="slds-text-body_small slds-p-top_small"><i>Note: When this custom Account match criteria is configured, then during the regular sync Breadwinner matches with Salesforce Accounts only using the above criteria, and does not create any Salesforce Accounts when it cannot find a match.</i></div>
                            <p><label class="slds-form-element__label slds-p-top_small">Click the button below, to perform mass match of NetSuite Companies to Salesforce Accounts based on the above match criteria.</label></p>
                            <apex:commandButton id="accountMatchButton" value="Perform Account Match" action="{!doMassAccountMatch}" disabled="{!!AND(NOT(ISBLANK(autoMatch_SF_FieldName)),NOT(ISBLANK(autoMatch_NS_FieldName)))}" rendered="{!isBreadwinnerAdministrator}" reRender="CompanyConfig-content, pmsgblock" status="action-status" styleClass="slds-button slds-button_brand" oncomplete="message();"/>
                        </apex:outputPanel>
                        <script type="text/javascript">
                            function disableMassUpdateButton(){ //on change of picklist
                                j$("[id$=accountMatchButton]").attr("disabled", "disabled");
                            }
                        </script>
                    </div>
					<apex:outputPanel layout="block" rendered="true" id="accountOwnerSection">
						<div class="slds-section-title_divider slds-m-top_medium">SHARING SETTINGS</div>
						<div class=" slds-m-left_small">
							<div class="slds-m-left_x-small slds-m-top_small slds-text-color_weak">By default, NetSuite Company and its related transaction owners will be the users who create those records in Salesforce.</div>
							<div class="slds-text-body_small slds-m-horizontal_small">
								<label class="slds-checkbox slds-m-top_x-small slds-m-bottom_medium">
									<apex:inputCheckbox id="AccountOwnerForRecords" value="{!useAcntOwnerForRecordOwner}"  />
									<span class="slds-checkbox_faux"></span>
									<span class="slds-form-element__label slds-m-left_small" style="font-size: .8125rem">
										Set the record ownership of the NetSuite Company and its related transactions to be the Account record owner
									</span>
									<p><i>Note: After saving the above setting, please navigate to the Troubleshoot General section and click on 'Restart All Sync' to update all existing records Ownership.</i></p>
								</label>
							</div>
						</div>
					</apex:outputPanel>
                    <div class="slds-section" id="FieldMappingSection">
                        <h3 class="slds-section__title">
                            <button class="slds-button slds-section__title-action" type="button" onclick="showHideSectionConent('FieldMappingSection','FieldMappingSectionImage');" style="letter-spacing: .0625rem;text-transform: initial;">
                                <img id="FieldMappingSectionImage" src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/SectionClose.png')}" style="margin-bottom: 3px;margin-right: 4px;" />
                                <span style="color: rgb(62, 62, 60); text-transform: uppercase; font-size: .75rem;padding-left: 3px;">PRE-POPULATE NETSUITE CUSTOMER FIELDS</span>
                            </button>
                        </h3>
                        <div class="slds-section__content slds-p-top_none">
                            <div class="slds-p-horizontal_small">
                                <label class="slds-form-element__label">When Breadwinner creates a NetSuite Customer from the provided wizard, you can populate NetSuite Customer fields with Salesforce Account fields.</label>


								<!-----------------NS Company Fields Section start------------>

								<div class="slds-section__title slds-m-top_medium">NetSuite Standard Fields</div>

								<apex:outputPanel layout="block" styleClass="slds-col slds-grid slds-wrap slds-p-top_medium">
									<div class="slds-size_1-of-1 slds-large-size_4-of-12" style="font-size: 14.4px;">NetSuite Company Field</div>
									<div class="slds-size_1-of-1 slds-large-size_2-of-12 slds-p-left_x-large slds-text-align_center" style="font-size: 14.4px;">Field Type</div>
									<div class="slds-size_1-of-1 slds-large-size_3-of-12 slds-text-align_center slds-p-left_small" style="font-size: 14.4px;">Salesforce Account Field</div>
								</apex:outputPanel>

								<apex:outputPanel id="companyFieldsSection">
									<div class="slds-grid slds-gutters_large slds-has-flexi-truncate slds-wrap slds-large-size_1-of-1 slds-medium-size_1-of-1 slds-size_1-of-1">
                                        <apex:repeat value="{!CompanyStandardFields}" var="field">
                                            <div class="slds-col slds-grid slds-wrap slds-p-top_small slds-large-size_1-of-1 slds-medium-size_1-of-1 slds-size_1-of-1">
                                                <div class="slds-form-element slds-size_4-of-12 slds-p-right_medium">
                                                     <div class="slds-form-element__control">
                                                        <div class="slds-select_container">
															<apex:selectList id="companyFields" value="{!field.sfFieldApiName}" styleClass="slds-select" size="1">
																<apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
																<apex:selectOptions value="{!field.listOfCompanyFields}"/>
																<apex:actionSupport event="onchange" action="{!getCompanyObjectFieldType}" status="action-status" reRender="datatype, accountFields, addNewStdField"/>
															</apex:selectList>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="slds-form-element slds-size_3-of-12" style="padding-left:5.5rem">
                                                    <apex:outputPanel id="datatype" styleclass="slds-form-element">
                                                        <p> {!field.sfDataType} </p>
                                                    </apex:outputPanel>
                                                </div>
                                                <div class="slds-form-element slds-size_4-of-12 slds-p-right_medium">
                                                    <apex:outputPanel id="accountFields">
														<div class="slds-form-element__control">
															<div class="slds-select_container">
																<apex:selectList id="matchAccountFieldsListtest" value="{!field.selectedAccountField}" styleClass="slds-select" size="1">
																	<apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
																	<apex:selectOptions value="{!field.matchedAccountFields}"/>
																</apex:selectList>
															</div>
														</div>
													</apex:outputPanel>
                                                </div>
                                            </div>
                                        </apex:repeat>
                                    </div>
									<br/>
									<apex:commandLink id="addNewStdField" action="{!addNewStandardField}" value="Add New" rerender="companyFieldsSection" rendered="{!showAddNewStdFields}" status="action-status"/>
								</apex:outputPanel>

								<apex:outputPanel id="customFieldsSection" layout="block" rendered="{!CompanyCustomFields.size>0}">
                                    <div class="slds-section__title slds-m-top_medium">NetSuite Custom Fields</div>
                                    <label class="slds-form-element__label">While populating custom fields, field type of the field is mandatory, please refer to the Custom Fields Tab for help.</label>

									<apex:outputPanel layout="block" styleClass="slds-col slds-grid slds-wrap slds-p-top_medium">
										<div class="slds-size_1-of-1 slds-large-size_4-of-12" style="font-size: 14.4px;">NetSuite Company Field</div>
										<div class="slds-size_1-of-1 slds-large-size_2-of-12 slds-m-left_xx-small slds-p-left_medium" style="font-size: 14.4px;padding-left:2.6rem">Field Type<abbr class="slds-required" title="required">*</abbr></div>
										<div class="slds-size_1-of-1 slds-large-size_3-of-12 slds-m-left_x-large slds-p-left_large" style="font-size: 14.4px;">Salesforce Account Field</div>
									</apex:outputPanel>

									<div class="slds-grid slds-gutters_large slds-has-flexi-truncate slds-wrap slds-large-size_1-of-1 slds-medium-size_1-of-1 slds-size_1-of-1">
                                        <apex:repeat value="{!CompanyCustomFields}" var="cfmap">
                                            <div class="slds-col slds-grid slds-wrap slds-p-top_small slds-large-size_1-of-1 slds-medium-size_1-of-1 slds-size_1-of-1">
                                                <div class="slds-form-element slds-size_4-of-12 slds-p-right_medium">
                                                    <div class="slds-form-element__control">
                                                        <div class="slds-select_container">
                                                            <apex:selectList id="customFields" value="{!cfmap.sfFieldApiName}" styleClass="slds-select" size="1">
                                                                <apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
                                                                <apex:selectOptions value="{!cfmap.listOfCompanyFields}"/>
																<apex:actionSupport event="onchange" reRender="addNewCustomField"/>
                                                            </apex:selectList>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="slds-p-left_small slds-form-element slds-size_3-of-12 slds-p-right_large">
                                                    <div class="slds-form-element__control slds-p-horizontal_large" style="padding-left:3rem;padding-right:3rem">
                                                        <div class="slds-select_container">
                                                            <apex:selectList id="customFieldType" value="{!cfmap.sfDataType}" styleClass="slds-select" size="1">
                                                                <apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
                                                                <apex:selectOption itemLabel="Checkbox" itemValue="checkbox"></apex:selectOption>
                                                                <apex:selectOption itemLabel="Date" itemValue="date"></apex:selectOption>
                                                                <apex:selectOption itemLabel="DateTime" itemValue="datetime"></apex:selectOption>
                                                                <apex:selectOption itemLabel="Integer" itemValue="integer"></apex:selectOption>
                                                                <apex:selectOption itemLabel="Number" itemValue="number"></apex:selectOption>
                                                                <apex:selectOption itemLabel="Picklist" itemValue="picklist"></apex:selectOption>
                                                                <apex:selectOption itemLabel="Text" itemValue="text"></apex:selectOption>
                                                            </apex:selectList>
                                                        </div>
                                                    </div>
                                                </div>

												<div class="slds-form-element slds-size_4-of-12 slds-p-right_medium">
                                                    <div class="slds-form-element__control">
                                                        <div class="slds-select_container">
                                                            <apex:selectList id="sfAccountFields" value="{!cfmap.selectedAccountField}" styleClass="slds-select" size="1">
                                                                <apex:selectOption itemLabel="--None--" itemValue=""></apex:selectOption>
                                                                <apex:selectOptions value="{!accountFields}"/>
                                                            </apex:selectList>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </apex:repeat>
                                    </div>
									<br/>
									<apex:commandLink id="addNewCustomField" action="{!addNewCustomField}" value="Add New" rerender="customFieldsSection" rendered="{!showAddNewCustomFields}" status="action-status"/>
                              	</apex:outputPanel>
                            </div>
                        </div>
                    </div>
                </apex:outputPanel>
				<div align="center" class="slds-m-top_large slds-m-bottom_large">
                    <apex:commandButton id="saveButton" value="Save" immediate="false" action="{!saveCompanyChanges}" rendered="{!isBreadwinnerAdministrator}" reRender="CompanyConfig-content, pmsgblock, companyFieldsSection, customFieldsSection" status="action-status" styleClass="slds-button slds-button_brand" oncomplete="message();scrollWinToTop();"/>
                </div>
            </div>
            <!-- Company Configuration Section End -->

            <!-- Primary Contact Configuration Starts -->
            <div id="PrimaryContactConfiguration" class="slds-hide" aria-labelledby="PrimaryContactConfig">
                <c:PageHeader headerText="Primary Contact Configuration" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <apex:outputPanel layout="block" id="PrimaryContactConfig-content" styleClass="slds-p-around_small">
                    <!-- objectNameAndOrgSyncStatus['Contact']!='Inactive' -> {!objectNameAndOrgSyncStatus['Contact']!='Inactive'}<br/>
                    objectNameAndOrgSyncStatus['Contact']!='Not Configured' -> {!objectNameAndOrgSyncStatus['Contact']!='Not Configured'}<br/> -->

                    <apex:outputPanel layout="block" id="PrimaryContactConfig-contentId" rendered="{!AND(bsWrapper.active,hasContactSyncInformation,AND(objectNameAndOrgSyncStatus['Contact']!='Inactive',objectNameAndOrgSyncStatus['Contact']!='Not Configured'))}">
                        <apex:outputPanel id="pcPageMsg" layout="block" rendered="{!showPageMsg}">
                            <apex:pagemessages id="pcmsg"/>
                        </apex:outputPanel>
                        <h3 class="slds-section-title_divider">Overview</h3>
                        <div class="slds-p-horizontal_small slds-m-top_small slds-m-bottom_medium">
                            <p>In order to provide Primary Contact information on Breadwinner NetSuite Objects, you must make a small customization to your NetSuite Org. Please provide&nbsp;<apex:outputLink rel="noopener noreferrer" styleClass="grayLinks" id="LinkToPCKBPage" value="https://help-netsuite.breadwinner.com/support/solutions/articles/44002187129-how-to-specify-your-netsuite-primary-contact-in-salesforce-using-breadwinner" target="_blank">this</apex:outputLink> help article to your NetSuite and Salesforce Admins.</p>
                        </div>

                        <h3 class="slds-section-title_divider">Primary Contact Settings</h3>
                        <apex:outputPanel layout="block" styleClass="slds-p-horizontal_small slds-m-top_small">

                            <p>Sync the Primary Contact Information into Salesforce for:</p>
                            <div class="slds-large-size_1-of-2 slds-medium-size_1-of-1 slds-size_1-of-1">
                                <apex:outputPanel layout="block" rendered="{!pcNSObjectLabelAndStatus!=NULL}">
                                    <apex:repeat value="{!pcNSObjectLabelAndStatus}" var="pcObject">
                                        <div class="slds-grid slds-wrap slds-gutters slds-p-top_small slds-large-size_1-of-1 slds-medium-size_1-of-1 slds-size_1-of-1">
                                            <div class="slds-col slds-size_1-of-5">
                                                <label class="slds-form-element__label">{!IF(pcObject=='SalesOrder','Sales Order',pcObject)}s</label>
                                            </div>
                                            <div class="slds-col slds-size_3-of-7">
                                                <apex:outputPanel layout="block" styleClass="slds-select_container" rendered="{!AND(pcNSObjectLabelAndStatus != NULL, pcNSObjectLabelAndStatus[pcObject] != NULL, pcNSObjectLabelAndStatus[pcObject] == 'UNSET')}">
                                                    <apex:selectList id="pcPicklist" value="{!pcNSObjectLabelAndStatus[pcObject]}" styleClass="slds-select" size="1">
                                                        <apex:selectOption itemLabel="-- Please Choose an Option --" itemValue="UNSET"></apex:selectOption>
                                                        <apex:selectOption itemLabel="Enabled" itemValue="Enabled"></apex:selectOption>
                                                        <apex:selectOption itemLabel="Disabled" itemValue="Disabled"></apex:selectOption>
                                                    </apex:selectList>
                                                </apex:outputPanel>
                                                <apex:outputPanel layout="block" styleClass="slds-select_container" rendered="{!AND(pcNSObjectLabelAndStatus != NULL, pcNSObjectLabelAndStatus[pcObject] != NULL, pcNSObjectLabelAndStatus[pcObject] != 'UNSET')}">
                                                    <!-- for already enabled objects -->
                                                    <apex:selectList id="pcPicklistAfterConfig" value="{!pcNSObjectLabelAndStatus[pcObject]}" styleClass="slds-select" size="1" >
                                                        <apex:selectOption itemLabel="Enabled" itemValue="Enabled"></apex:selectOption>
                                                        <apex:selectOption itemLabel="Disabled" itemValue="Disabled"></apex:selectOption>
                                                    </apex:selectList>
                                                </apex:outputPanel>
                                            </div>
                                        </div>
                                    </apex:repeat>
                                </apex:outputPanel>
                            </div>
                            <p class="slds-p-top_x-small"><apex:pageMessage severity="INFO" strength="2" summary="If you change the Primary Contact on a Customer or Vendor (while in NetSuite), Breadwinner will show that change in Salesforce in minutes. However, if you change the Primary Contact on a Sales Order, Invoice, or any other type of record (while in NetSuite) then it may take days for Breadwinner to reflect that change back to Salesforce. This is due to limitations in NetSuite." escape="false" /></p>
                            <p>To immediately see the updated information in Salesforce, navigate to the Troubleshoot/General menu, open the Restarting and Updating section of the page and click the Restart Weekly Sync button.</p>
                            <div class="slds-text-body_small slds-p-top_small"><i>Note: Please contact Breadwinner support if you wish to see Primary Contact Information for other NetSuite Objects</i>.</div>
                            <div align="center" class="slds-m-top_large slds-m-bottom_large">
                                <apex:commandButton id="savePCButton" value="Save" action="{!savePrimaryContactSettings}" rendered="{!isBreadwinnerAdministrator}" reRender="PrimaryContactConfig-content, pcPageMsg" status="action-status" styleClass="slds-button slds-button_brand" oncomplete="message();scrollWinToTop();"/>
                            </div>
                        </apex:outputPanel>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!NOT(bsWrapper.active)}">
                        <div class="slds-m-top_small slds-m-horizontal_small">
                            <apex:pageMessage summary="Your trial/subscription has expired" detail="You must have a valid subscription to Breadwinner to use the Primary Contact Configuration. Please Contact Breadwinner Support." severity="Warning" strength="3"/>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!AND(bsWrapper.active,hasContactSyncInformation,OR(objectNameAndOrgSyncStatus['Contact']=='Inactive',objectNameAndOrgSyncStatus['Contact']=='Not Configured'))}">
                        <div class="slds-m-top_small slds-m-horizontal_small">
                            <apex:pageMessage summary="NetSuite Contact sync is disabled in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to enable it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" severity="Warning" strength="3" rendered="{!objectNameAndOrgSyncStatus['Contact']=='Inactive'}"/>
                            <apex:pageMessage summary="NetSuite Contact sync is not configured in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" severity="Warning" strength="3" rendered="{!objectNameAndOrgSyncStatus['Contact']=='Not Configured'}"/>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- Primary Contact Configuration Ends -->

            <!-- PDFs Configuration Section Start -->
            <div id="PDFConfiguration" class="slds-hide" aria-labelledby="PDFsConfig">
                <c:PageHeader headerText="PDFs Configuration" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <apex:outputPanel layout="block" id="PDFsConfig-content" styleClass="slds-p-around_small">
                    <apex:pageMessages id="PdfsPgMsg"/>
                    <h3 class="slds-section-title_divider">Overview</h3>
                    <div class="slds-text-body_small slds-p-around_small">
                        <p>To download Transaction PDFs, Breadwinner requires a NetSuite's "Request URL" and one "Template Id" per each Transaction type you want to download. Please follow the steps in this&nbsp;<apex:outputLink rel="noopener noreferrer" target="_blank" value="https://docs.breadwinner.com/netsuite/download-pdf-button">help article</apex:outputLink> to generate and populate the below fields to enable PDF Downloading.</p>
                    </div>
                    <apex:outputPanel layout="block" id="Pdf-Invoice-Config" styleClass="slds-p-top_x-small">
                        <h3 class="slds-section-title_divider">Request URL</h3>
                        <div class="slds-grid slds-wrap slds-p-around_small">
                            <div class="slds-size_1-of-2 slds-medium-size_2-of-12 slds-large-size_2-of-12">
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label slds-p-bottom_xx-small" >Request URL</label>
                                </div>
                            </div>
                            <div class="slds-size_1-of-2 slds-medium-size_10-of-12 slds-large-size_10-of-12">
                                <div class="slds-col_padded slds-form-element__control"  style="max-width:50%">
                                    <apex:inputText value="{!acWrapper.downloadTransactionPDFRequestURL}" styleClass="slds-input" id="dwnldReqURL" ></apex:inputText>
                                </div>
                            </div>
                        </div>
                        <apex:outputPanel layout="block" id="templateIdPanel" styleClass="slds-p-top_x-small">
                            <h3 class="slds-section-title_divider">Template Id</h3>
                            <div class="slds-grid slds-wrap slds-p-horizontal_small">
                                <apex:repeat value="{!objSupportingDwnldPDF}" var="objTemplate" >
                                    <div class="slds-size_1-of-2 slds-medium-size_2-of-12 slds-large-size_2-of-12 slds-m-top_small">
                                        <div class="slds-form-element">
                                            <label class="slds-form-element__label slds-p-bottom_xx-small" >{!objTemplate} Template Id</label>
                                        </div>
                                    </div>
                                    <div class="slds-size_1-of-2 slds-medium-size_10-of-12 slds-large-size_10-of-12 slds-m-top_small">
                                        <div class="slds-col_padded slds-form-element__control"  style="max-width:25%">
                                            <apex:inputText value="{!nsObjWithDwnldPDFTemplateIds[objectLabelWithQueryLabelsMap[objTemplate]]}" styleClass="slds-input" ></apex:inputText>
                                        </div>
                                    </div>
                                </apex:repeat>
                            </div>
                        </apex:outputPanel>
                        <div align="middle" class="slds-m-top_medium">
                            <apex:commandButton id="saveInvoiceConfig" value="Save" action="{!saveInvoicePDFConfig}" status="action-status" styleClass="slds-button slds-button_brand slds-m-right_xx-small" reRender="Pdf-Invoice-Config,PdfsPgMsg,PDFsConfig-content" oncomplete="message();" disabled="{!NOT(isAdministrator)}"/>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- PDFs Configuration Section End -->

            <!-- Subsidiary Section Starts -->
            <div id="subsidiary" class="slds-hide" aria-labelledby="Subsidiary">
                <c:PageHeader headerText="Subsidiary Navigator" svgName="/icons/standard-sprite/svg/symbols.svg#hierarchy" spanIconClasses="slds-icon-standard-hierarchy" />

                <apex:outputPanel layout="block" id="subsidiary-content" styleClass="slds-p-around_small">
                    <script type="text/javascript">
                        function processSubsidiaries(){
                            const json = '{! JSENCODE(nsSubsidiaries)}';
                            if(json.length == 0) {
                                message();
                            }
                            else{
                                var records = JSON.parse(json);
                                var map = {}, node, roots = [], i;
                                for (i = 0; i < records.length; i += 1) {
                                    map[records[i].internalId] = i;
                                    records[i].children = [];
                                }
                                for (i = 0; i < records.length; i += 1) {
                                    node = records[i];
                                    if (node.parentId !== "") {
                                        records[map[node.parentId]].children.push(node);
                                    } else {
                                        roots.push(node);
                                    }
                                }
                                var isTreeStructure = roots.length == 1 ? 'TRUE' : 'FALSE';
                                processTree(roots,isTreeStructure);
                                j$( "#subsidiaryRepeat" ).remove();
                                if(isTreeStructure=='TRUE') refreshSubsidiarySection('ParentSubsidiary');
                            }
                        }

                        function processTree(data,isTree){
                            for(subsidiary in data){
                                if(data[subsidiary].parentId == '' && isTree == 'TRUE'){
                                    j$("#primarySubsidiaryName").text(data[subsidiary].name);
                                    j$("#listExtension").attr('id', 'listExtension'+data[subsidiary].internalId);
                                    j$("#recordLink").attr('id', 'recordLink'+data[subsidiary].internalId);
                                }
                                else{
                                    var clone = j$('#subsidiaryRepeat').clone(true).attr('id','subsidiary' + data[subsidiary].internalId);
                                    if(data[subsidiary].children.length > 0){
                                    j$(".slds-is-nested", clone).attr('id', 'listExtension'+data[subsidiary].internalId);
                                        j$(".slds-button img", clone).attr('id', 'subsidiaryImage'+data[subsidiary].internalId);
                                        j$(".noChild", clone).remove();
                                    }
                                    else{
                                        j$(clone).removeAttr("aria-expanded");
                                        j$(".slds-is-nested", clone).remove();
                                        j$(".slds-button", clone).addClass("slds-is-disabled");
                                        j$(".slds-button .slds-tree__item-label", clone).remove();
                                    }

                                    j$(".slds-tree__item-label", clone).text(data[subsidiary].name);
                                    j$(".slds-tree__item a", clone).attr('id', 'recordLink'+data[subsidiary].internalId);

                                    if(isTree == 'TRUE') j$("#listExtension"+data[subsidiary].parentId).append(clone);
                                    else{
                                        j$("#primaryList").append(clone);
                                        j$( "#ParentSubsidiary" ).remove();
                                    }
                                    var arialevel = parseInt(j$('#subsidiary'+data[subsidiary].parentId).attr("aria-level"));
                                    arialevel++;
                                    j$(clone).attr('aria-level',arialevel);
                                }
                                j$('#recordLink'+data[subsidiary].internalId).attr("href","/"+data[subsidiary].sfId).text("(View)");
                                if(data[subsidiary].children.length > 0) processTree(data[subsidiary].children,'TRUE');
                            }
                        }

                        function refreshSubsidiarySection(sectiondiv){
                            j$("#"+ sectiondiv).addClass("slds-is-open");
                            j$("#"+ sectiondiv+" .slds-is-nested").addClass("slds-show").removeClass("slds-hide");
                            j$("#"+ sectiondiv+" .slds-button img").attr("src","{!URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/chevrondown.png')}");
                        }
                    </script>

                    <apex:outputPanel layout="block" styleClass="slds-border_bottom slds-p-bottom_small slds-m-bottom_small">
                        <apex:outputText value="{!IF(isSubsidiaryDisabledInNetSuite,'You can configure NetSuite Standard Objects sync Org Wide','You can configure each Subsidiary to sync different NetSuite Standard Objects')}" styleClass="slds-text-heading_small"/><br/>
                        <apex:commandButton value="NetSuite Object Sync"
							styleClass="slds-button slds-button_brand slds-m-top_small"
							action="{!initializeNetSuiteObjectSyncConfiguration}"
							reRender="NSObjectSyncConfig"
							oncomplete="initNsObjectSync();showHideModal('setupNSObjectCofigModal','NSObjectCofigModalBackdrop');message();reRenderModalCloseIcon();"
							status="action-status"
						/>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!AND(isBatchStarted,len(nsSubsidiaries)==0,NOT(isSubsidiaryDisabledInNetSuite))}">
                        <apex:pageMessage severity="INFO" strength="2" summary="<b>NetSuite Subsidiaries haven't yet synced to Salesforce. Please try again after some time.<b/>" escape="false" >
                        </apex:pageMessage>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!AND(NOT(isBatchStarted),len(nsSubsidiaries)==0,NOT(isSubsidiaryDisabledInNetSuite))}">
                        <apex:pageMessage severity="INFO" strength="2" summary="<b>Import NetSuite Subsidiaries into Salesforce<b/>" escape="false">
                            <p>&nbsp;It appears that you don't have any NetSuite Subsidiaries in Salesforce.</p>
                        </apex:pageMessage>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!isSubsidiaryDisabledInNetSuite}">
                        <apex:pageMessage severity="INFO" strength="2" summary="<b>Subsidiary Feature is disabled or unavailable in NetSuite.<b/>" escape="false">
                        </apex:pageMessage>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!NOT(len(nsSubsidiaries)==0)}">
                        <div class="slds-tree_container">
                            <ul aria-labelledby="treeheading" class="slds-tree" role="tree" id="primaryList">
                                <li aria-expanded="true" aria-level="1" role="treeitem" id="ParentSubsidiary" class="slds-section slds-is-open slds-m-vertical_none">
                                    <div class="slds-tree__item">
                                        <button class="slds-button slds-m-top_none subBtn" onclick="showHideChildSubsidiaries(this);return false;">
                                            <img id="subsidiarySecImage" src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/chevronright.png')}" class="subsidiaryImageContainer"/>
                                            <span class="slds-tree__item-label" id="primarySubsidiaryName"> </span>
                                        </button>
                                        <a rel="noopener noreferrer" href="" id="recordLink" target="_blank" class="subsidiaryRecordLink slds-p-left_xx-small"> </a>
                                    </div>
                                    <ul role="group" class="slds-is-nested" id="listExtension"> </ul>
                                </li>
                            </ul>
                        </div>
                        <li aria-expanded="true" aria-level="1" role="treeitem" id="subsidiaryRepeat" class="slds-section slds-is-open slds-m-vertical_none">
                            <div class="slds-tree__item" style="min-height: 44px;">
                                <button class="slds-button slds-m-top_none subBtn" onclick="showHideChildSubsidiaries(this);return false;">
                                    <img src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/chevronright.png')}" class="subsidiaryImageContainer"/>
                                    <span class="slds-tree__item-label"> </span>
                                </button>
                                <span class="slds-tree__item-label noChild" style="margin-top:5px;"> </span>
                                <a rel="noopener noreferrer" href="" target="_blank" class="subsidiaryRecordLink slds-p-left_xx-small"> </a>
                            </div>
                            <ul role="group" class="slds-is-nested"> </ul>
                        </li>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- Subsidiary Section Ends -->

            <!-- NetSuite Objects Tabs Starts -->
            <div id="NetSuiteObjectsSection" class="slds-hide" aria-labelledby="NetSuiteObjects">
                <c:PageHeader headerText="NetSuite Objects" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <apex:outputPanel layout="block" id="NetSuiteObjects-content" styleClass="slds-p-around_small slds-is-relative">
                    <apex:outputPanel rendered="{! selectedSubMenu == 'NetSuiteObjects'}">
                        <apex:actionStatus id="action-status-co" layout="block">
                            <apex:facet name="start">
                                <div class="slds-spinner_container">
                                    <div class="slds-spinner slds-spinner_brand slds-spinner_medium" aria-hidden="false" role="alert">
                                        <span class="slds-assistive-text">Loading</span>
                                        <div class="slds-spinner__dot-a"></div>
                                        <div class="slds-spinner__dot-b"></div>
                                    </div>
                                </div>
                            </apex:facet>
                        </apex:actionStatus>

                        <apex:actionFunction name="reRenderCustomObjCmp" status="action-status-co" reRender="setupNetSuiteCustObjCmpPanel" >
                            <apex:param name="renderCustomObjCmpParam" value="TRUE" assignTo="{!loadSetupCustObjCmp}" />
                        </apex:actionFunction>

                        <apex:actionFunction name="assignLoadSetupCustObjCmpToFalse" status="action-status-co" reRender="setupNetSuiteCustObjCmpPanel" >
                            <apex:param name="renderCustomObjCmpParam" value="FALSE" assignTo="{!loadSetupCustObjCmp}" />
                        </apex:actionFunction>

                        <div class="slds-tabs_default">
                            <ul class="slds-tabs_default__nav NSObjectTabs" role="tablist">
                                <li class="slds-tabs_default__item slds-text-heading_label slds-is-active" title="Core" role="presentation">
                                    <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="core-object" id="core-objects__tab" onclick="selectNSObjectTab(this,'core');assignLoadSetupCustObjCmpToFalse();">Core</a>
                                </li>
                                <!-- li class="slds-tabs_default__item slds-text-heading_label" title="Additional" role="presentation">
                                    <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="additional-objects" id="additional-objects__tab" onclick="selectNSObjectTab(this,'additional');">Additional</a>
                                </li -->
                                <li class="slds-tabs_default__item slds-text-heading_label" title="Custom" role="presentation">
                                    <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="custom-objects" id="custom-objects__tab" onclick="reRenderCustomObjCmp();selectNSObjectTab(this,'custom');">Custom</a>
                                </li>
                            </ul>
                            <div id="core-objects" class="slds-tabs_default__content slds-show slds-p-top_none" role="tabpanel" aria-labelledby="core-objects__tab">
                                <apex:outputPanel layout="block" styleClass="slds-p-around_small">
                                <h3 class="slds-section-title_divider">NetSuite Core Objects</h3>
                                <div class="slds-p-horizontal_small slds-m-top_small">
                                    <div class="slds-p-bottom_small">
                                        Breadwinner syncs many standard NetSuite objects into corresponding Salesforce objects that are created upon the installation of Breadwinner.
                                        <p class="slds-m-top_small">
                                        The designation of 'Core' is our label to apply to the NetSuite objects that Breadwinner replicates as part of our standard managed package. You may also configure Breadwinner to replicate custom NetSuite objects, which is possible in the 'Custom' tab.</p>
                                        <p class="slds-m-top_small">
                                        You can click the button below to configure the NetSuite Object Sync.</p>
                                    </div>
                                    <apex:commandButton value="NetSuite Object Sync"
										styleClass="slds-button slds-button_brand slds-m-top_small"
										action="{!initializeNetSuiteObjectSyncConfiguration}"
										reRender="NSObjectSyncConfig"
										oncomplete="initNsObjectSync();showHideModal('setupNSObjectCofigModal','NSObjectCofigModalBackdrop');message();reRenderModalCloseIcon();"
										status="action-status"
									/>
                                </div>
                                </apex:outputPanel>
                            </div>
                            <div id="additional-objects" class="slds-tabs_default__content slds-hide slds-p-top_none" role="tabpanel" aria-labelledby="additional-objects__tab">
                                <apex:outputPanel rendered="false" layout="block" styleClass="slds-p-around_small">
                                    <h3 class="slds-section-title_divider">Configure NetSuite Additional Objects</h3>
                                    <apex:outputPanel styleClass="slds-p-horizontal_small slds-m-top_small" id="addtional_object_customization" layout="block">
                                        <div class="slds-p-bottom_small">
                                            Breadwinner will replicate what we have called Core NetSuite objects back to Salesforce. However, there may be additional Standard NetSuite objects you wish to replicate into Salesforce.
                                            The structure for this requires a precise API name for both the objects and the fields on those objects, so we recommend you create those custom Salesforce Objects using the buttons below for each and every object you wish to have replicated in Salesforce.
                                            Please note, that you can still create the records of NetSuite objects using our Global Classes and Methods even if you don't replicate those records/objects back to Salesforce.
                                            <p class="slds-m-top_small">Creating the Custom Object and Fields using the buttons below is a one-time operation. If Custom Fields are updated, created, or deleted in NetSuite after using our buttons below, you must manually update those custom fields in Salesforce.</p>
                                            <p class="slds-m-top_small">You must create a Permission Set for these custom fields, as the Breadwinner Permission Set can only reference fields in our Managed Package. You must also manually create a Tab for any created objects, and set the permissions on that Tab.</p>
                                        </div>
                                        <apex:DataTable value="{!additionalObjects}" var="addtObj" styleclass="slds-table slds-no-row-hover slds-table_bordered slds-border_bottom slds-max-medium-table_stacked-horizontal">
                                            <apex:column headerValue="NetSuite Object" html-data-label="NetSuite Object">
                                                <apex:outputText value="{!addtObj}" rendered="{!NOT(addtObj == 'ReturnAuthorization')}"/>
                                                <apex:outputText value="Return Authorization (RMA)" rendered="{!addtObj == 'ReturnAuthorization'}"/>
                                            </apex:column>
                                            <apex:column headerValue="Sync Status" html-data-label="Sync Status">
                                                <div class="slds-form-element syncNSObjToggle">
                                                    <label class="slds-checkbox_toggle slds-grid">
                                                        <input type="checkbox" id="syncAddtObjCheckbox" value="checkbox-toggle-15" disabled="true" aria-describedby="checkbox-toggle-15" />
                                                        <span class="slds-checkbox_faux_container" aria-live="assertive">
                                                        <span class="slds-checkbox_faux"></span>
                                                        <span class="slds-checkbox_on">Enabled</span>
                                                        <span class="slds-checkbox_off">Disabled</span>
                                                        </span>
                                                    </label>
                                                </div>
                                            </apex:column>
                                            <apex:column html-data-label="Salesforce Object exists?">
                                                <apex:facet name="header"><p>Salesforce</p><p class="slds-p-top_xxx-small">Object exists?</p></apex:facet>
                                                <apex:outputText style="font-weight:bold;font-size:14px;" value="No"/>
                                            </apex:column>
                                            <apex:column html-data-label="Salesforce Object Name">
                                                <apex:facet name="header"><p>Salesforce</p><p class="slds-p-top_xxx-small">Object Name</p></apex:facet>
                                                <apex:outputText value="___"/>
                                            </apex:column>
                                            <apex:column >
                                                <apex:commandButton styleClass="slds-button slds-button_brand" disabled="true" value="Create Salesforce Object" oncomplete="message();" id="createAdditionalObjectInSFBtn" />
                                            </apex:column>
                                        </apex:DataTable>
                                        <!--<apex:repeat value="{!additionalObjects}" var="addtObj">
                                            <div class="slds-grid slds-size_2-of-3 slds-gutters slds-p-bottom_medium">
                                                <div class="slds-col slds-size_2-of-3 NSObjects">
                                                    <apex:outputText styleClass="slds-text-heading_medium" value="NetSuite {!addtObj} Object "/>
                                                </div>
                                                <div class="slds-col slds-size_1-of-3">
                                                    <div class="slds-form-element">
                                                        <label class="slds-checkbox_toggle slds-grid">
                                                            <input type="checkbox" name="checkbox-toggle-15" value="checkbox-toggle-15" disabled="true" aria-describedby="checkbox-toggle-15" />
                                                            <span id="checkbox-toggle-15" class="slds-checkbox_faux_container" aria-live="assertive">
                                                            <span class="slds-checkbox_faux"></span>
                                                            <span class="slds-checkbox_on">Enabled</span>
                                                            <span class="slds-checkbox_off">Disabled</span>
                                                            </span>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </apex:repeat>-->
                                        <div align="middle" class="slds-m-top_medium">
                                            <apex:commandButton id="addtObjBottomSaveBtn" value="Save" reRender="addtional_object_customization" styleClass="slds-button slds-button_brand slds-m-right_xx-small" disabled="true" oncomplete="message();"/>
                                            <apex:commandButton styleClass="slds-button slds-button_neutral" disabled="true" value="Cancel" reRender="addtional_object_customization" oncomplete="message();" id="addtObjBottomCancelBtn" />
                                        </div>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </div>
                            <div id="custom-objects" class="slds-tabs_default__content slds-hide slds-p-top_none" role="tabpanel" aria-labelledby="custom-objects__tab">

                                <apex:outputPanel id="setupNetSuiteCustObjCmpPanel">
                                    <c:SetupCustomObjects rendered="{!loadSetupCustObjCmp}" ></c:SetupCustomObjects>
                                </apex:outputPanel>

                            </div>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
                <script>
                    function selectNSObjectTab(elmnt,nstype) {
                        // slds-active
                        j$(elmnt).parent("li").siblings(".slds-is-active").removeClass("slds-is-active");
                        j$(elmnt).parent("li").addClass("slds-is-active");

                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);

                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);

                        // hiding previouly selected tab (slds-show/slds-hide)
                        j$(elmnt).closest(".slds-tabs_default").children("div[role='tabpanel'].slds-show").addClass("slds-hide").removeClass("slds-show");
                        // displaying newly selected tab (slds-show/slds-hide)
                        j$(elmnt).closest(".slds-tabs_default").children("div[aria-labelledby='"+elmnt.id+"']").addClass("slds-show").removeClass("slds-hide");

                    }
                </script>
            </div>
            <!-- NetSuite Object Tabs Ends -->

            <!-- Custom Fields Section Starts -->
            <div id="CustomFieldsSection" class="slds-hide" aria-labelledby="CustomFields">
                <c:PageHeader headerText="Custom Fields" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <c:SetupCustomFields cancelSVGName="/icons/utility-sprite/svg/symbols.svg#close"/>
            </div>
            <!-- Custom Fields Section Ends -->

            <!-- Employee Sync Settings Section Starts -->
            <div id="EmployeeSyncSettingsSection" class="slds-hide" aria-labelledby="EmployeeSyncSettings">
                <c:PageHeader headerText="Sync Settings" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />
                <div class="slds-p-around_small" >
                    <p class="slds-text-body_small">This feature is still under development. Please contact Breadwinner Support for more information.</p>
                </div>
            </div>
            <!-- Employee Sync Settings Section Starts -->

            <!-- Employee Match Section Starts -->
            <div id="EmployeeMatchSection" class="slds-hide" aria-labelledby="EmployeeMatch">
                <c:PageHeader headerText="Breadwinner Employee Match for Salesforce User" svgName="/icons/utility-sprite/svg/symbols.svg#rotate" spanIconClasses="slds-icon-standard-user" />
                <apex:outputPanel layout="blok" id="EmployeeMatchSectionPanel">
                    <apex:outputPanel id="EmployeeMatchPanel" layout="block" styleClass="slds-p-around_small" rendered="{!showHideEmpMatchWizard!='HIDE'}">
                        <c:EmployeeMatch />
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- Employee Section Ends -->

            <!-- Currency Section Starts -->
            <div id="currency" class="slds-hide" aria-labelledby="Currency">
                <c:PageHeader headerText="Currency" svgName="/icons/custom-sprite/svg/symbols.svg#custom17" spanIconClasses="slds-icon-custom-custom18" />

                <apex:outputPanel layout="block" id="currency-content" styleClass="slds-p-around_small">
                    <apex:DataTable value="{!currencyCodes}" var="cur" styleclass="slds-table slds-no-row-hover slds-table_bordered slds-table_col-bordered slds-border_right slds-border_bottom slds-border_left slds-max-medium-table_stacked-horizontal" rendered="{!currencyCodes.size>0}" style="width:initial;" columnsWidth="20%,20%,20%,40%">
                        <apex:column headerClass="slds-text-align_center">
                            <apex:facet name="header"><p>ISO</p><p>Code</p></apex:facet>
                            <apex:outputText value="{!currencyList[cur].currencyIsoCode}" styleClass="slds-align_absolute-center"/>
                        </apex:column>
                        <apex:column headerClass="slds-text-align_center">
                            <apex:facet name="header"><p>In</p><p>NetSuite</p></apex:facet>
                            <apex:outputText rendered="{!currencyList[cur].inNetSuite}">
                                <img src="/img/checkbox_checked.gif" alt="Checked" width="21" class="checkImg slds-align_absolute-center" title="Checked"/>
                            </apex:outputText>
                        </apex:column>
                        <apex:column headerClass="slds-text-align_center" styleClass="{!IF(AND(NOT(currencyList[cur].inSalesforce),isMultiCurrencyEnabled), 'multicurrecyCls', '')}">
                            <apex:facet name="header"><p>In</p><p>Salesforce</p></apex:facet>
                            <apex:outputText rendered="{!currencyList[cur].inSalesforce}">
                                <img src="/img/checkbox_checked.gif" alt="Checked" width="21" class="checkImg slds-align_absolute-center" title="Checked"/>
                            </apex:outputText>
                            <apex:outputText rendered="{!AND(NOT(currencyList[cur].inSalesforce),isMultiCurrencyEnabled)}">
                            </apex:outputText>
                        </apex:column>
                        <apex:column headerClass="slds-text-align_center" value="{!currencyList[cur].nsCurrencyName}" styleClass="slds-cell-wrap {!IF(AND(NOT(currencyList[cur].inSalesforce), isMultiCurrencyEnabled), 'multicurrecyCls', '')}">
                            <apex:facet name="header"><p>NetSuite</p><p>Currency Name</p></apex:facet>
                        </apex:column>
                    </apex:DataTable>
                    <p class="slds-m-top_small">
                        You {!IF(isMultiCurrencyEnabled, 'have', "don't have")} Salesforce Multicurrency Enabled. {!IF(isMultiCurrencyEnabled, 'Because you have Salesforce Multicurrency Enabled, you must create corresponding Currencies in Salesforce for all your NetSuite Currencies.', '')}
                        <br/><br/>
                        <span style="{!IF(isMultiCurrencyEnabled, '', 'display:none')}">
                            <apex:outputLink rel="noopener noreferrer" value="{!IF(isLightning,'/lightning/setup/CompanyCurrency/home', '/setup/cur/currencylist.jsp?retURL=retURL=/ui/setup/Setup/setupid=CompanyProfile&setupid=CompanyCurrency')}" target="_blank" styleClass="GrayLinks">Click here</apex:outputLink>&nbsp;to create Currencies.
                        </span>
                    </p>
                </apex:outputPanel>
            </div>
            <!-- Currency Section Ends -->

            <!-- Sync Settings Section Start -->
            <div id="SyncSettings" class="slds-hide" aria-labelledby="SyncSettings">
                <c:PageHeader headerText="Sync Settings" svgName="/icons/custom-sprite/svg/symbols.svg#custom19" spanIconClasses="slds-icon-custom-custom3" />

                <apex:outputPanel layout="block" id="SyncSettings-content" styleClass="slds-p-around_small">
                    <apex:outputPanel id="ItemSyncPMblock" layout="block" rendered="{!showPageMsg}">
                        <apex:pagemessages id="ItemSyncpgmsg"/>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!NOT(acWrapper.isProductMatchCompleted)}">
                        <apex:pageMessage severity="WARNING" strength="2" summary="<b>You must complete the initial product match before the below settings will be used.<b/>" escape="false" />
                    </apex:outputPanel>
                    <h3 class="slds-section-title_divider">AUTO-CREATE SALESFORCE RECORDS</h3>
                    <div class="slds-p-horizontal_small">
                        <div class="slds-size_1-of-1 slds-large-size_1-of-1 slds-m-top_small">
                            <div class="slds-form-element">
                                <label class="slds-form-element__label">Auto-Create Salesforce Products from NetSuite Items?</label>
                                <div class="slds-form-element__control slds-large-size_1-of-3">
                                    <div class="slds-select_container">
                                        <apex:selectList id="nsProductsSyncSelectList" value="{!orgSubsidiaryWrapperForItem.sfProductConfig}" styleClass="slds-select" size="1" disabled="{!NOT(orgSubsidiaryWrapperForItem.isNSItemSyncEnabled)}">
                                            <apex:selectOption itemvalue="" itemLabel=""/>
                                            <apex:selectOption itemvalue="Auto Create (Active Items Only)" itemLabel="Active Items"/>
                                            <apex:selectOption itemvalue="Auto Create (Active and Inactive Items)" itemLabel="All Items"/>
                                            <apex:selectOption itemvalue="Do Not Create" itemLabel="Do Not Create"/>
                                            <apex:actionSupport event="onchange" reRender="nsPBEsSyncSelectList,pmsgblock" onsubmit="changePBSyncSettings();" status="action-status"></apex:actionSupport>
                                        </apex:selectList>
                                    </div>
                                </div>
                                <apex:outputPanel layout="block" styleClass="slds-p-vertical_medium slds-text-body_small slds-form-element__control">
                                    <i>Note: Please note that after Breadwinner creates Salesforce Product from a newly-discovered Active NetSuite Product, any future changes to that NetSuite Product (Such as changing its name) will not be reflected in the Salesforce Product. The ability to Auto-Sync is under active development.</i>
                                </apex:outputPanel>
                            </div>
                        </div>
                        <div class="slds-size_1-of-1 slds-large-size_1-of-1 slds-m-top_small">
                            <div class="slds-form-element">
                                <label class="slds-form-element__label">Auto-Create and Auto-Sync Salesforce Price Books and Price Book Entries from NetSuite Price Levels and Item Prices</label>
                                <div class="slds-form-element__control slds-large-size_1-of-3">
                                    <div class="slds-select_container">
                                        <apex:selectList id="nsPBEsSyncSelectList" value="{!orgSubsidiaryWrapperForItem.sfPriceBooksConfig}" disabled="{!OR(NOT(orgSubsidiaryWrapperForItem.isNSPriceLevelSyncEnabled),orgSubsidiaryWrapperForItem.sfProductConfig=='Do Not Create')}" styleClass="slds-select" size="1">
                                            <apex:selectOption itemvalue="" itemLabel="--None--"/>
                                            <apex:selectOption itemvalue="Enabled" itemLabel="Enabled"/>
                                            <apex:selectOption itemvalue="Disabled" itemLabel="Disabled"/>
                                        </apex:selectList>
                                    </div>
                                </div>
                                <apex:outputPanel layout="block" styleClass="slds-p-vertical_medium slds-text-body_small slds-form-element__control">
                                    <i>Note: Breadwinner will create and update the Salesforce Price Books and Price Book Entries based on the NetSuite Price Levels and Item Prices respectively with latest information.</i>
                                </apex:outputPanel>
                                <!-- div class="slds-form-element__control slds-text-title slds-p-top_xx-small" style="color:red;">
                                    This feature is under active development.
                                </div -->
                            </div>
                        </div>
                    </div>
                </apex:outputPanel>
                <div align="center" class="slds-m-top_large slds-m-bottom_large">
                    <apex:commandButton id="saveSyncSettingsButton" value="Save" action="{!saveItemSyncSettings}" rendered="{!isBreadwinnerAdministrator}" reRender="SyncSettings-content, pmsgblock" status="action-status" styleClass="slds-button slds-button_brand"  oncomplete="message();"/>
                </div>
            </div>
            <!-- Sync Settings Section End -->

            <!-- Product Match Section Stars -->
            <div id="ProductMatch" class="slds-hide" aria-labelledby="ProductMatch">
                <apex:actionFunction name="refreshUnmatchedRecordContent" action="{!performProductMatch}" reRender="productmatch-content,mapInitDefaultActionScript,PMHeader" status="action-status" oncomplete="addallstyles();reRenderPMSVG();">
                <apex:param name="UnmatchedNSopName" assignTo="{!operationName}" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="refreshUnmatchedSFRecordsContent" action="{!queryUnmatchedSFRecords}" reRender="UMSFRecords,mapInitDefaultActionScript,PMHeader" status="action-status" oncomplete="UpdateInfo('UnmatchedSFProducts');addallstyles();reRenderPMSVG();" >
                <apex:param name="UnmatchedSFopName" assignTo="{!operationName}" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="refreshMatchedRecordsContent" action="{!initializeMatchedRecords}" reRender="mItemsAndProducts" status="action-status" oncomplete="addallstyles();" >
                <apex:param name="MatchedopName" assignTo="{!operationName}" value="" />
                </apex:actionFunction>

                <apex:outputPanel styleClass="slds-page-header" id="PMHeader" layout="block">
                    <div class="slds-grid">
                        <div class="slds-col slds-has-flexi-truncate">
                            <div class="slds-media slds-media_center">
                                <div class="slds-media__figure">
                                    <span class="slds-icon_container slds-icon-standard-user pmIcon">
                                        <svg class="slds-icon slds-page-header__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS,'assets/icons/utility-sprite/svg/symbols.svg#rotate')}" />
                                        </svg>
                                        <span class="slds-assistive-text"></span>
                                    </span>
                                </div>
                                <div class="slds-media__body">
                                    <p class="slds-page-header__title slds-truncate" title="Breadwinner {!CASE(operationName, 'Products', 'Product', 'PriceBooks', 'Price Book', 'PriceBookEntries','Price Book Entry','')} Match for NetSuite {!CASE(operationName, 'Products', 'Item', 'PriceBooks', 'Price Level', 'PriceBookEntries','Item Price','')}">Breadwinner {!CASE(operationName, 'Products', 'Product', 'PriceBooks', 'Price Book', 'PriceBookEntries','Price Book Entry','')} Match for NetSuite {!CASE(operationName, 'Products', 'Item', 'PriceBooks', 'Price Level', 'PriceBookEntries','Item Price','')}</p>
                                    <p class="slds-text-body_small">Breadwinner • NetSuite </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </apex:outputPanel>

                <!-- <c:PageHeader id="PMHeader" headerText="Breadwinner {!CASE(operationName, 'Products', 'Product', 'PriceBooks', 'Price Book', 'PriceBookEntries','Price Book Entry','')} Match for NetSuite {!CASE(operationName, 'Products', 'Item', 'PriceBooks', 'Price Level', 'PriceBookEntries','Item Price','')}" svgName="/icons/utility-sprite/svg/symbols.svg#rotate" spanIconClasses="slds-icon-standard-user pmIcon" /> -->

                <apex:outputPanel id="mapInitDefaultActionScript">
                    <script type="text/javascript">
                        var mapNSItemIdAndAction = new Object();
                    </script>
                </apex:outputPanel>
                <script>
                    function selectPMTab(elmnt, selctedTabName, operationName){
                        // slds-active
                        j$(elmnt).parent("li").siblings(".slds-is-active").removeClass("slds-is-active");
                        j$(elmnt).parent("li").addClass("slds-is-active");
                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);
                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);

                        j$(elmnt).closest(".slds-tabs_default").children("div[role='tabpanel'].slds-show").addClass("slds-hide").removeClass("slds-show");
                        j$(elmnt).closest(".slds-tabs_default").children("div[aria-labelledby='"+elmnt.id+"']").addClass("slds-show").removeClass("slds-hide");

                        if(selctedTabName == 'MNSItemsandSFRecords') refreshMatchedRecordsContent(operationName);
                        else if(selctedTabName == 'UMSFRecords') refreshUnmatchedSFRecordsContent(operationName);
                        else if(selctedTabName == 'UMNSRecords') refreshUnmatchedRecordContent(operationName);
                    }
                </script>
                <apex:outputPanel layout="block" id="productmatch-content" styleClass="slds-p-around_small slds-p-top_x-small slds-is-relative">
                    <apex:variable var="netsuiteObjectName" value="{!CASE(operationName, 'Products', 'Item', 'PriceBooks', 'Price Level', 'Item Price')}" />
                    <apex:variable var="salesforceObjectName" value="{!CASE(operationName, 'Products', 'Product', 'PriceBooks', 'Price Book', 'Price Book Entry')}" />
                    <apex:outputPanel layout="block" rendered="{!AND(bsWrapper.active,IF(operationName != 'Products', (AND(HasPriceLevelSyncInformation,AND(objectNameAndOrgSyncStatus['PriceLevel']!='Inactive',objectNameAndOrgSyncStatus['PriceLevel']!='Not Configured'))),(AND(hasItemSyncInformation,AND(objectNameAndOrgSyncStatus['Item']!='Inactive',objectNameAndOrgSyncStatus['Item']!='Not Configured')))))}" styleClass="slds-tabs_default">
                        <ul class="slds-tabs_default__nav" role="tablist">
                            <li class="slds-tabs_default__item slds-is-active" title="Unmatched NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')}" role="presentation">
                                <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="selectPMTab(this, 'UMNSRecords', '{!operationName}')" role="tab" tabindex="0" aria-selected="true" aria-controls="unmatchedNSRecords" id="unmatchedNetSuiteRecords">Unmatched NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')}</a>
                            </li>
                            <li class="slds-tabs_default__item" title="Unmatched Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}" role="presentation" style="{!IF(operationName!='PriceBookEntries','','display:none')}">
                                <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="selectPMTab(this, 'UMSFRecords', '{!operationName}')" role="tab" tabindex="-1" aria-selected="false" aria-controls="unmatchedSFRecords" id="unmatchedSalesforceRecords">Unmatched Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}</a>
                            </li>
                            <li class="slds-tabs_default__item" title="Matched {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} and {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}" role="presentation">
                                <a class="slds-tabs_default__link" rel="noopener noreferrer" href="javascript:void(0);" onclick="selectPMTab(this, 'MNSItemsandSFRecords', '{!operationName}')" role="tab" tabindex="-1" aria-selected="false" aria-controls="matchedSFAndNSRecords" id="matchedSalesforceAndNSRecords">Matched {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} and {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}</a>
                            </li>
                        </ul>
                        <div id="unmatchedNSRecords" class="slds-tabs_default__content slds-show " role="tabpanel" aria-labelledby="unmatchedNetSuiteRecords">
                            <apex:outputPanel layout="block" id="matchItemAndProduct" styleClass="slds-p-right_small slds-p-left_small ">
                                <div>
                                    <apex:outputPanel layout="block" id="unmatchedNSIMsgSec" rendered="{!showMessages}">
                                        <apex:pagemessages rendered="{!NOT(isBackgroundjobRunning)}"/>
                                        <apex:outputPanel rendered="{!isBackgroundjobRunning}">
                                            <apex:pageMessage severity="INFO" strength="2" summary="NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} import is in progress." escape="false" />
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!noRecordsInSF}" >
                                            <apex:pageMessage severity="INFO" strength="2" summary="<b>Import NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} into Salesforce<b/>" escape="false" >
                                                <p><apex:outputText value="There are no NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} exist in Salesforce. It appears that your Import NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} background job has failed or there are no {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} in NetSuite. If there are {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} in NetSuite, please"/><apex:commandLink rel="noopener noreferrer" styleClass="restartLink" value=" restart the NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} Sync" action="{!restartHistoricalNSRecordsSync}" reRender="unmatchedNSIMsgSec" status="action-status" oncomplete="message();" id="unmatchedNSIRestartSync" />.</p>
                                            </apex:pageMessage>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" rendered="{!isProductMatchComplete}">
                                            <apex:pageMessage severity="CONFIRM" strength="2" summary="All Active NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} are already matched with Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}." escape="false" />
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <div id="unmatchedNSRecordContent">
                                        <apex:pagemessages id="pm"/>
                                        <apex:outputPanel layout="block" rendered="{!AND(NOT(isProductMatchComplete),nsRecordIdList.size > 0)}">
                                            <p class="slds-m-bottom_medium slds-m-horizontal_medium">
                                                <apex:outputText value="Each NetSuite {!netsuiteObjectName} has to match with one Salesforce {!salesforceObjectName}. Based on the NetSuite {!CASE(operationName, 'Products', 'Item name', 'PriceBooks', 'Price Level name', 'Item Price detail')}, Breadwinner tries to auto-match NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} with existing Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}. If Breadwinner couldn't match, {!CASE(operationName, 'Products', 'you can either select a Salesforce Product through the lookup box or', 'PriceBooks', 'you can either select a Salesforce Price Book through the lookup box or', 'choose to create a new Salesforce')} {!salesforceObjectName} based on the NetSuite {!netsuiteObjectName} details." />
                                                <apex:outputPanel layout="block" styleClass="slds-m-left_medium" rendered="{!operationName == 'PriceBookEntries'}">
                                                    <i>Note: This page shows the NetSuite Item Prices with the NetSuite's Base Price Level and Salesforce's Default Currency. To create all NetSuite Item Prices as Salesforce Price Book Entries, please use either the "Mass Create Salesforce Products from NetSuite Items" button in the One-Click NetSuite Import section from the Troubleshooting Tab or the "Auto-Create and Auto-Sync Salesforce Price Books and Price Book Entries from NetSuite Price Levels and Item Prices" from Sync Settings Tab under Product Match (this works if you have completed the product match)</i> <br/>
                                                    <br/>
                                                    <div style="display:inline-flex;">
                                                        <div style="width:1.5em;height:1.1em;background-color:#eadf72" class="slds-m-top_xx-small"></div>
                                                        <div class="slds-p-left_small">The color yellow indicates that the Price is different between Salesforce and NetSuite. And once we click on the Next button, Salesforce Price Book Entry List Price will be updated with NetSuite Base Price.</div>
                                                    </div>
                                                </apex:outputPanel>
                                            </p>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" id="SFRecordListPanel">
                                            <apex:pageMessage summary="Warning:" rendered="{!AND(operationName == 'PriceBookEntries', AND(NOT(isProductMatchComplete),OR(matchedNSItemsCount == 0, matchedNSPriceLevelCount == 0)))}" detail="Please complete {!IF(AND(matchedNSPriceLevelCount = 0, matchedNSItemsCount = 0), 'Product and Price Book' , IF(matchedNSItemsCount =0, 'Product', 'Price Book'))} match before starting the Price Book Entry match." severity="WARNING" strength="3"/>
                                            <apex:pageMessage summary="Error:" detail="{!exceptionMessage}" rendered="{!AND(NOT(ISBLANK(exceptionMessage)), LEN(exceptionMessage)>5)}"  severity="ERROR" strength="3"/>
                                            <div class="slds-m-horizontal_medium">
                                                <apex:outputPanel rendered="{!AND(NOT(isProductMatchComplete),nsRecordIdList.size > 0)}">
                                                    <div class="slds-grid slds-wrap ">
                                                        <div class="slds-m-top_large slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13 slds-text-align_center">
                                                            <div class="slds-text-heading_medium"> <apex:outputText value="{!netsuiteObjectName} Details in NetSuite" /> </div>
                                                        </div>
                                                        <div class="slds-m-top_large slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13 slds-col_bump-left slds-text-align_center">
                                                            <div class="slds-text-heading_medium"> <apex:outputText value="{!salesforceObjectName} Details in Salesforce" /> </div>
                                                        </div>
                                                    </div>
                                                </apex:outputPanel>
                                                <div class="slds-m-top_small">
                                                    <apex:repeat value="{!nsRecordIdList}" var="refId" rendered="{!AND(NOT(isProductMatchComplete),nsRecordIdList.size > 0)}">
                                                        <apex:variable var="NSItem" value="{!mapNSRecordIdAndRecord[refId]}"/>
                                                        <apex:variable var="actionByDefault" value="{!mapNSRecordIdAndDefaultAction[refId]}"/>
                                                        <apex:variable var="sfProduct" value="{!mapNSRecordIdAndSFRecord[refId]}"/>
                                                        <div class="slds-grid slds-wrap slds-has-dividers_around-space slds-grid_vertical-stretch">
                                                            <div valign="top" class="slds-col slds-grid slds-wrap slds-box slds-m-top_small slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13">
                                                                <div class="slds-col slds-p-bottom_medium slds-tile slds-size_1-of-1 slds-p-horizontal_medium">
                                                                    <ul class="slds-has-dividers_bottom-space slds-m-top_x-small">
                                                                        <li class="slds-item">
                                                                            <span class="slds-text-heading_medium">
                                                                                <apex:outputText value="{! IF(operationName != 'PriceBookEntries', NSItem.Name, NSItem.ItemName) }" />
                                                                            </span>
                                                                        </li>
                                                                    </ul>
                                                                    <apex:outputPanel layout="block">
                                                                        <div class="NSProductMatch slds-tile__detail">
                                                                            <apex:outputPanel layout="block" rendered="{!operationName != 'PriceBookEntries'}">
                                                                                <span class="slds-list_horizontal slds-wrap">
                                                                                    <dt class="slds-item_label">Name:</dt>
                                                                                    <dd class="slds-item_detail"><apex:outputText value=" {!NSItem.Name}" /></dd>
                                                                                </span>
                                                                                <apex:outputPanel rendered="{!operationName == 'Products'}">
                                                                                    <span class="slds-list_horizontal slds-wrap">
                                                                                        <dt class="slds-item_label" style="white-space: nowrap;">Display Name:</dt>
                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!NSItem.DisplayName}" /></dd>
                                                                                    </span>
                                                                                    <span class="slds-list_horizontal slds-wrap">
                                                                                        <dt class="slds-item_label">Type:</dt>
                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!NSItem.Type}" /></dd>
                                                                                    </span>
                                                                                </apex:outputPanel>
                                                                                <span class="slds-list_horizontal slds-wrap">
                                                                                    <dt class="slds-item_label">Is Active:</dt>
                                                                                    <dd class="slds-item_detail"><apex:outputText value="{!IF(NSItem.isInactive, 'No', 'Yes')}"/></dd>
                                                                                </span>
                                                                            </apex:outputPanel>

                                                                            <apex:outputPanel rendered="{!operationName == 'PriceBookEntries'}">
                                                                                <span class="slds-list_horizontal slds-wrap">
                                                                                    <dt class="slds-item_label">Item:</dt>
                                                                                    <dd class="slds-item_detail"><apex:outputText value="{!NSItem.ItemName}" /></dd>
                                                                                </span>
                                                                                <span class="slds-list_horizontal slds-wrap">
                                                                                    <dt class="slds-item_label">Price Level:</dt>
                                                                                    <dd class="slds-item_detail"><apex:outputText value="{!NSItem.PricelevelName}" /></dd>
                                                                                </span>
                                                                                <span class="slds-list_horizontal slds-wrap">
                                                                                    <dt class="slds-item_label">Currency:</dt>
                                                                                    <dd class="slds-item_detail"><apex:outputText value="{!NSItem.CurrencyName}" /></dd>
                                                                                </span>
                                                                                <span class="slds-list_horizontal slds-wrap" style="background-color:{!IF(AND(NSItem.UnitPrice != sfProduct.ListPrice, actionByDefault == 'suggestedMatch'), '#eadf72', '')}" >
                                                                                    <dt class="slds-item_label">Base Price:</dt>
                                                                                    <dd class="slds-item_detail"><apex:outputText value="{!NSItem.UnitPrice}" /></dd>
                                                                                </span>
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                </div>
                                                                <div class="slds-col slds-align-bottom slds-size_1-of-1 slds-p-top_medium">
                                                                    <img src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/netsuite_logo_30px.png')}" />
                                                                    &nbsp; <apex:outputText value="NetSuite {!netsuiteObjectName}"/>
                                                                </div>
                                                            </div>
                                                            <div class="slds-col slds-p-top_small slds-size_1-of-1 slds-medium-size_1-of-7 slds-large-size_1-of-13 slds-align-middle">
                                                                <div class="arrowCell slds-text-align_center" width="10%">
                                                                    <span class="arrow">&#10140;</span>
                                                                </div>
                                                            </div>
                                                            <div valign="top" class="slds-col slds-grid slds-wrap slds-box slds-m-top_small slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13">
                                                                <!--  options -->
                                                                <div class="slds-m-horizontal_medium slds-p-bottom_small slds-col slds-size_1-of-1">
                                                                    <!-- Suggested Match -->
                                                                    <apex:outputPanel rendered="{!IF(actionByDefault == 'suggestedMatch', true, false)}">
                                                                        <div class="slds-m-top_xx-small">
                                                                            <table style="width: 100%;">
                                                                                <tr>
                                                                                    <td valign="center" style="width: 3%;padding-right: 10px;">
                                                                                        <input type="radio" name="{!JSENCODE(refId)}" id="{!JSENCODE(refId)}-sm" onChange="clearManualMatchOnSelectingOther('{!JSENCODE(refId)}');pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'suggestedMatch', 'UnmatchedNSItems');"/>
                                                                                    </td>
                                                                                    <td valign="top" style="width: 97%;">
                                                                                        <span class="slds-radio">
                                                                                            <span class=" slds-form-element__label slds-p-top_none otherOptions">Suggested Match to Existing Salesforce {!salesforceObjectName}</span>
                                                                                        </span>
                                                                                    </td>
                                                                                </tr>
                                                                                <tr>
                                                                                    <td></td>
                                                                                    <td>
                                                                                        <div class="slds-m-horizontal_medium slds-tile">
                                                                                            <ul class="slds-has-dividers_bottom-space slds-m-top_x-small">
                                                                                                <li class="slds-item"><span class="slds-text-heading_medium"><apex:outputText value="{!sfProduct.Name}"/></span> </li>
                                                                                            </ul>
                                                                                            <apex:outputPanel layout="block">
                                                                                                <div class="NSProductMatch slds-tile__detail">
                                                                                                    <dl class="slds-list_horizontal slds-wrap">
                                                                                                        <dt class="slds-item_label">Name:</dt>
                                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!sfProduct.Name}"/></dd>
                                                                                                    </dl>
                                                                                                    <dl class="slds-list_horizontal slds-wrap" style="{!IF(operationName=='Products','','display:none')}">
                                                                                                        <dt class="slds-item_label">Product Code:</dt>
                                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!sfProduct.ProductCode}"/></dd>
                                                                                                    </dl>
                                                                                                    <dl class="slds-list_horizontal slds-wrap">
                                                                                                        <dt class="slds-item_label">Is Active:</dt>
                                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!IF(sfProduct.IsActive == NULL, '', IF(sfProduct.IsActive == true, 'Yes', 'No'))}"/></dd>
                                                                                                    </dl>
                                                                                                    <dl class="slds-list_horizontal slds-wrap" style="{!IF(operationName=='PriceBookEntries','','display:none')}">
                                                                                                        <dt class="slds-item_label">Product:</dt>
                                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!sfProduct.Product}"/></dd>
                                                                                                    </dl>
                                                                                                    <dl class="slds-list_horizontal slds-wrap" style="{!IF(operationName=='PriceBookEntries','','display:none')}">
                                                                                                        <dt class="slds-item_label">Price Book:</dt>
                                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!sfProduct.Pricebook}"/></dd>
                                                                                                    </dl>
                                                                                                    <dl class="slds-list_horizontal slds-wrap" style="{!IF(operationName=='PriceBookEntries','','display:none')}; background-color:{!IF(AND(NSItem.UnitPrice != sfProduct.ListPrice, actionByDefault == 'suggestedMatch'), '#eadf72', '')}">
                                                                                                        <dt class="slds-item_label">List Price:</dt>
                                                                                                        <dd class="slds-item_detail"><apex:outputText value="{!sfProduct.ListPrice}"/></dd>
                                                                                                    </dl>
                                                                                                </div>
                                                                                            </apex:outputPanel>
                                                                                        </div>
                                                                                    </td>
                                                                                </tr>
                                                                            </table>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                    <!-- Create New -->
                                                                    <apex:outputPanel layout="block" styleClass="slds-m-top_x-small" rendered="{!IF(AND(operationName == 'PriceBookEntries', actionByDefault == 'suggestedMatch'), false, true)}">
                                                                        <div class="slds-clearfix">
                                                                            <div class="slds-float_left radioButton">
                                                                                <input type="radio" name="{!JSENCODE(refId)}" id="{!JSENCODE(refId)}-cn" onChange="clearManualMatchOnSelectingOther('{!JSENCODE(refId)}');pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'createNew','UnmatchedNSItems');"/>
                                                                            </div>
                                                                            <div class="slds-float_left">
                                                                                <span class="slds-radio">
                                                                                    <span class=" slds-form-element__label slds-m-left_small slds-p-top_none otherOptions">Create New Salesforce {!salesforceObjectName} with details from NetSuite {!netsuiteObjectName}</span>
                                                                                </span>
                                                                            </div>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                    <!-- Manual Match -->
                                                                    <apex:outputPanel layout="block" rendered="{!operationName!='PriceBookEntries'}">
                                                                        <div class="slds-m-top_x-small">
                                                                            <div class="slds-clearfix">
                                                                                <div class="slds-float_left radioButton">
                                                                                    <input type="radio" name="{!JSENCODE(refId)}"  id="{!JSENCODE(refId)}-mm" onChange="pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'manualMatch', 'UnmatchedNSItems');" />
                                                                                </div>
                                                                                <div class="slds-float_left">
                                                                                    <span class="slds-radio">
                                                                                        <span class=" slds-form-element__label slds-m-left_small slds-p-top_none otherOptions">Manual Match to an existing Salesforce {!salesforceObjectName} you select</span>
                                                                                    </span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <apex:outputPanel id="lookupPanel">
                                                                            <div class="lookup slds-form-element__control slds-p-around_none slds-m-top_x-small " id="{!JSENCODE(refId)}-mm-lookup" style="margin-left: 2.25rem;">
                                                                                <apex:inputField rendered="{!operationName='Products'}" value="{!mapNSRefIdManualMatchLookupSelector[refId].Product2Id}" required="false" id="productLookup" styleClass="slds-size_1-of-2 slds-input" >
                                                                                    <apex:actionSupport event="onchange" oncomplete="checkRadioButtonForManualMatch('{!JSENCODE(refId)}-mm');pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'manualMatch', 'UnmatchedNSItems');addallstyles();" reRender="lookupPanel"/>
                                                                                </apex:inputField>
                                                                                <apex:inputField rendered="{!operationName='PriceBooks'}" value="{!mapNSRefIdManualMatchLookupSelector[refId].Pricebook2Id}" required="false" id="priceBookLookup" styleClass="slds-size_1-of-2 slds-input" >
                                                                                    <apex:actionSupport event="onchange" oncomplete="checkRadioButtonForManualMatch('{!JSENCODE(refId)}-mm');pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'manualMatch', 'UnmatchedNSItems');addallstyles();" reRender="lookupPanel"/>
                                                                                </apex:inputField>
                                                                            </div>
                                                                        </apex:outputPanel>
                                                                    </apex:outputPanel>
                                                                    <!-- Do Not Create SF Product -->
                                                                    <div class="slds-m-top_x-small">
                                                                        <div class="slds-clearfix">
                                                                            <div class="slds-float_left radioButton">
                                                                                <input type="radio" name="{!JSENCODE(refId)}" id="{!JSENCODE(refId)}-dn" onChange="clearManualMatchOnSelectingOther('{!JSENCODE(refId)}');pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'doNotCreate', 'UnmatchedNSItems');" />
                                                                            </div>
                                                                            <div class="slds-float_left">
                                                                                <span class="slds-radio">
                                                                                    <span class=" slds-form-element__label slds-m-left_small slds-p-top_none otherOptions">Do not match with any Salesforce {!salesforceObjectName}</span>
                                                                                </span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <apex:outputPanel layout="block" styleClass="slds-m-horizontal_medium slds-p-top_small" rendered="{!NSItem.isUnableToCreateProduct}">
                                                                        <div class="errorM3">
                                                                            <p>Breadwinner was unable to create/update this {!salesforceObjectName} </p>
                                                                            <p>{!NSItem.errorMessage}</p>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                </div>
                                                                <div class="slds-col slds-align-bottom slds-size_1-of-1">
                                                                    <img src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/sf_logo_30px.png')}" />
                                                                    &nbsp; Salesforce {!salesforceObjectName}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </apex:repeat>

                                                    <script type="text/javascript">
                                                        const defaultActionByNSRecordIdString = '{!JSENCODE(defaultActionByNSRecordIdJsonString)}';
                                                        const defaultActionByNSRecordId = JSON.parse(defaultActionByNSRecordIdString);

                                                        mapNSItemIdAndAction = defaultActionByNSRecordId;

                                                        for (const [recordId, defaultAction] of Object.entries(defaultActionByNSRecordId)) {
                                                            switch(defaultAction) {
                                                                case 'createNew':
                                                                    selectCreateNew(recordId);
                                                                    break;
                                                                case 'suggestedMatch':
                                                                    selectSuggestedMatch(recordId);
                                                                    break;
                                                                default:
                                                                    selectManualMatch(recordId);
                                                            }
                                                        }

                                                        function selectCreateNew(elementId) {
                                                            document.getElementById(`${elementId}-cn`).checked = true;
                                                        }

                                                        function selectSuggestedMatch(elementId) {
                                                            document.getElementById(`${elementId}-sm`).checked = true;
                                                        }

                                                        function selectManualMatch(elementId) {
                                                            document.getElementById(`${elementId}-mm`).checked = true;
                                                        }
                                                    </script>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                    </div>
                                    <apex:outputPanel styleClass="slds-p-top_medium slds-text-align_center" id="infoblock" layout="block" style="font-size:13px;" rendered="{!NOT(OR(NOT(isBreadwinnerAdministrator),nsRecordIdList.size == 0))}">
                                        <div id="info" style="color:red;"></div><br/>
                                    </apex:outputPanel>
                                    <script type="text/javascript">
                                        function UpdateInfo(tabName){
                                            try {
                                                var newSFRecords = 0;
                                                var matchSFRecords = 0;
                                                var updateSFRecords = 0;
                                                var doNotCreateSFRecords = 0;
                                                var nsObjectName;
                                                var sfObjectName;
                                                switch('{!operationName}') {
                                                case 'Products':
                                                    nsObjectName = 'Item';
                                                    sfObjectName = 'Product'
                                                    break;
                                                case 'PriceBooks':
                                                    nsObjectName = 'Price Level';
                                                    sfObjectName = 'Price Book'
                                                    break;
                                                default:
                                                    nsObjectName = 'Item Price';
                                                    sfObjectName = 'Price Book Entry'
                                                }
                                                for(key in mapNSItemIdAndAction){
                                                    var type = mapNSItemIdAndAction[key];
                                                    if(type=='createNew'){
                                                        newSFRecords++;
                                                    }
                                                    else if(type=='doNotCreate'){
                                                        doNotCreateSFRecords++;
                                                    }
                                                    else if(type == 'updateSFRecord'){
                                                        updateSFRecords++;
                                                    }
                                                    else if(type!='hardMatch'){
                                                        matchSFRecords++;
                                                    }
                                                }
                                                if(tabName == 'UnmatchedSFProducts'){
                                                    var infoMessage = document.getElementById('unmatchedSFPInfo');
                                                    var infoMessageText = 'Clicking Next will match '+updateSFRecords+' Salesforce '+(updateSFRecords >1 ?  sfObjectName == 'Price Book Entry' ? 'Price Book Entries':sfObjectName+"'s"+" to existing NetSuite "+nsObjectName+"s" : ''+sfObjectName+' to existing NetSuite ' +nsObjectName+'');
                                                    infoMessage.innerHTML = infoMessageText+'.';

                                                }
                                                else if(tabName == 'UnmatchedNSItems')
                                                {
                                                    var infoMessage = document.getElementById('info');
                                                    if(newSFRecords>0 || matchSFRecords >0 || doNotCreateSFRecords >0){
                                                        var infoMessageText = 'Clicking Next will create '+newSFRecords+' new Salesforce '+(newSFRecords >1 ? sfObjectName == 'Price Book Entry' ? 'Price Book Entries':sfObjectName+"s"+" from NetSuite "+nsObjectName+"'s" : ''+sfObjectName+' from NetSuite '+nsObjectName+'') +', and will match '+matchSFRecords+(matchSFRecords >1 ?  " NetSuite "+nsObjectName+"'s to existing Salesforce "+sfObjectName+"s" : ' NetSuite '+nsObjectName+' to existing Salesforce '+sfObjectName+'');
                                                        if(doNotCreateSFRecords > 0){
                                                            infoMessageText = infoMessageText+', and will not associate '+doNotCreateSFRecords+(doNotCreateSFRecords >1 ? ' NetSuite '+nsObjectName+"'s to Salesforce "+sfObjectName == 'Price Book Entry' ? 'Price Book Entries':' '+sfObjectName+'s' : ' NetSuite '+nsObjectName+' to any Salesforce '+sfObjectName+'');
                                                        }
                                                        infoMessage.innerHTML = infoMessageText+'.';
                                                    }
                                                }
                                            }
                                            catch(err) {
                                                console.log('UpdateInfo Error:'+err.message);
                                            }
                                        }
                                        UpdateInfo('UnmatchedNSItems');
                                    </script>
                                    <apex:outputPanel layout="block" id="buttonSection" styleClass="slds-m-bottom_large slds-align_absolute-center">
                                        <apex:commandButton id="theNextButton" value="Next" styleClass="slds-button slds-button_brand" status="action-status-pm" oncomplete="checkErrorMsg('UnmatchedNSItems');" reRender="Nothing" rendered="{!AND(NOT(isProductMatchComplete),nsRecordIdList.size>0)}" />
                                        <apex:inputHidden id="jsonOfActionsId" value="{!matchedJsonUserSelectedActions}"/>
                                        <apex:actionFunction name="finalSubmitANDNext" action="{!submitAndNext}" status="action-status-pm"  reRender="matchItemAndProduct,SFRecordListPanel,ProductFetchCompleteScript,mapInitDefaultActionScript,PMHeader,unmatchedNSRecordContent,pm" oncomplete="productFetchComplete('UnmatchedNSItems');UpdateInfo('UnmatchedNSItems');scrollWinToTop();addallstyles();reRenderPMSVG();"/>
                                    </apex:outputPanel>
                                </div>
                                <apex:outputPanel id="ProductFetchCompleteScript">
                                    <script>
                                        function productFetchComplete(tabName){
                                            if({!JSENCODE(IF(isProductMatchComplete,"true", "false")) == 'true'}){
                                                if(tabName == 'UnmatchedSFProducts'){
                                                    var elementHeaderText = document.getElementById('unmatchedSFRecordContent');
                                                    if(elementHeaderText){elementHeaderText.style.display = 'none';}
                                                    var elementInfo = document.getElementById('unmatchedSFPInfo');
                                                    if(elementInfo){elementInfo.style.display = 'none';}
                                                    var elementNextButton = document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.unmatchedSFPNextButton)}');
                                                    if(elementNextButton){elementNextButton.style.display = 'none';}
                                                }
                                                else if(tabName == 'UnmatchedNSItems'){
                                                    var elementHeaderText = document.getElementById('unmatchedNSRecordContent');
                                                    if(elementHeaderText){elementHeaderText.style.display = 'none';}
                                                    var elementInfo = document.getElementById('info');
                                                    if(elementInfo){elementInfo.style.display = 'none';}
                                                    var elementNextButton = document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.theNextButton)}');
                                                    if(elementNextButton){elementNextButton.style.display = 'none';}
                                                }
                                            }
                                        }
                                    </script>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </div>
                        <div id="unmatchedSFRecords" class="slds-tabs_default__content slds-hide" role="tabpanel" aria-labelledby="unmatchedSalesforceRecords">
                            <apex:outputPanel layout="block" id="UMSFRecords" styleClass="slds-p-right_small slds-p-left_small " >
                                <div>
                                    <apex:outputPanel layout="block" id="unmatchedSFPMsgSec" rendered="{!showMessages}">
                                        <apex:outputPanel rendered="{!noRecordsInSF}" >
                                            <apex:pageMessage severity="INFO" strength="2" summary="No Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')} Found." escape="false" />
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" rendered="{!isProductMatchComplete}">
                                            <apex:pageMessage severity="CONFIRM" strength="2" summary="All Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')} are already matched with NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')}." escape="false" />
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <div id="unmatchedSFRecordContent">
                                        <apex:pagemessages id="unmatchedSFPDPageMsg"/>
                                        <apex:outputPanel layout="block" id="ProductUpdateListPanel">
                                            <div class="slds-m-horizontal_medium">
                                                <apex:outputPanel rendered="{!unmatchedSFRecordIdList.size > 0}">
                                                    <div class="slds-grid slds-wrap ">
                                                        <div class="slds-m-top_large slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13 slds-text-align_center">
                                                            <div class="slds-text-heading_medium"><apex:outputText value="Unmatched {!salesforceObjectName} Details in Salesforce" /></div>
                                                        </div>
                                                    </div>
                                                </apex:outputPanel>
                                                <div class="slds-m-top_small">
                                                    <apex:repeat value="{!unmatchedSFRecordIdList}" var="refId" rendered="{!unmatchedSFRecordIdList.size > 0}">
                                                        <apex:variable var="SFProduct" value="{!mapUnmatchedSFRecordIdAndSFRecord[refId]}"/>
                                                        <div class="slds-grid slds-wrap slds-has-dividers_around-space slds-grid_vertical-stretch">
                                                            <div valign="top" class="slds-col slds-grid slds-wrap slds-box slds-m-top_small slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13">
                                                                <div class="slds-col slds-p-bottom_medium slds-tile slds-size_1-of-1 slds-p-horizontal_medium">
                                                                    <ul class="slds-has-dividers_bottom-space slds-m-top_x-small">
                                                                        <li class="slds-item"><span class="slds-text-heading_medium"><apex:outputText value="{!SFProduct.Name}" /></span></li>
                                                                    </ul>
                                                                    <apex:outputPanel layout="block">
                                                                        <div class="NSProductMatch slds-tile__detail">
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap">
                                                                                <dt class="slds-item_label item_label_cls">Name:</dt>
                                                                                <dd class="slds-item_detail item_detail_cls"><apex:outputText value=" {!SFProduct.Name}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap">
                                                                                <dt class="slds-item_label item_label_cls">Is Active:</dt>
                                                                                <dd class="slds-item_detail item_detail_cls"><apex:outputText value="{!IF(SFProduct.IsActive == NULL, '', IF(SFProduct.IsActive == true, 'Yes', 'No'))}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='Products'}">
                                                                                <dt class="slds-item_label item_label_cls" style="white-space: nowrap;">Product Code:</dt>
                                                                                <dd class="slds-item_detail item_detail_cls"><apex:outputText value="{!SFProduct.ProductCode}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                                <dt class="slds-item_label item_label_cls" style="white-space: nowrap;">Product:</dt>
                                                                                <dd class="slds-item_detail item_detail_cls"><apex:outputText value="{!SFProduct.Product}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                                <dt class="slds-item_label item_label_cls" style="white-space: nowrap;">Price Book:</dt>
                                                                                <dd class="slds-item_detail item_detail_cls"><apex:outputText value="{!SFProduct.Pricebook}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel id="productlookupPanel" styleClass="slds-list_horizontal slds-wrap slds-m-top_x-small">
                                                                                <dt class="slds-item_label item_label_cls slds-m-top_xx-small">Choose NetSuite {!netsuiteObjectName}:</dt>
                                                                                <dd class="slds-item_detail item_detail_cls">
                                                                                    <apex:inputField rendered="{!operationName='Products'}" value="{!mapSFPIdmmLookupSelector[refId].Item__c}" required="false" id="itemLookup" styleClass="slds-size_2-of-3 slds-input" >
                                                                                        <apex:actionSupport event="onchange" oncomplete="pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'updateSFRecord', 'UnmatchedSFProducts');addallstyles();" reRender="productlookupPanel"/>
                                                                                    </apex:inputField>
                                                                                    <apex:inputField rendered="{!operationName='PriceBooks'}" value="{!mapSFPIdmmLookupSelector[refId].PriceLevel__c}" required="false" id="plLookup" styleClass="slds-size_2-of-3 slds-input" >
                                                                                        <apex:actionSupport event="onchange" oncomplete="pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'updateSFRecord', 'UnmatchedSFProducts');addallstyles();" reRender="productlookupPanel"/>
                                                                                    </apex:inputField>
                                                                                    <apex:inputField rendered="{!operationName='PriceBookEntries'}" value="{!mapSFPIdmmLookupSelectorForPBE[refId].NetSuite_Item_Price__c}" required="false" id="ipLookup" styleClass="slds-size_2-of-3 slds-input" >
                                                                                        <apex:actionSupport event="onchange" oncomplete="pushToMapNSItemIdAndAction('{!JSENCODE(refId)}', 'updateSFRecord', 'UnmatchedSFProducts');addallstyles();" reRender="productlookupPanel"/>
                                                                                    </apex:inputField>
                                                                                </dd>
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                </div>
                                                                <div class="slds-col slds-align-bottom slds-size_1-of-1">
                                                                    <img src="{!URLFOR($Resource.Breadwinner_for_NetSuite, 'Breadwinner/Images/sf_logo_30px.png')}" />
                                                                    &nbsp; Salesforce {!salesforceObjectName}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </apex:repeat>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                    </div>
                                    <apex:outputPanel styleClass="slds-p-top_medium slds-text-align_center" id="unmatchedSFPInfoBlock" layout="block" style="font-size:13px;" rendered="{!NOT(OR(NOT(isBreadwinnerAdministrator),unmatchedSFRecordIdList.size == 0))}">
                                        <div id="unmatchedSFPInfo" style="color:red;"></div><br/>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="block" id="unmatchedSFPButtonSec" styleClass="slds-m-bottom_large slds-align_absolute-center">
                                        <apex:commandButton id="unmatchedSFPNextButton" value="Next" styleClass="slds-button slds-button_brand" status="action-status-pm" oncomplete="checkErrorMsg('UnmatchedSFProducts');" rendered="{!AND(NOT(isProductMatchComplete),unmatchedSFRecordIdList.size>0)}" />
                                        <apex:inputHidden id="unmatchedSFPJsonOfActionsId" value="{!umatchedJsonUserSelectedActions}"/>
                                        <apex:actionFunction name="submitSFRecordsAndNext" action="{!submitSFRecordsAndNext}" status="action-status-pm" reRender="UMSFRecords,ProductUpdateListPanel,ProductFetchCompleteScript,mapInitDefaultActionScript,PMHeader,unmatchedSFRecordContent,unmatchedSFPDPageMsg" oncomplete="productFetchComplete('UnmatchedSFProducts');scrollWinToTop();UpdateInfo('UnmatchedSFProducts');addallstyles();reRenderPMSVG();" />
                                    </apex:outputPanel>
                                </div>
                            </apex:outputPanel>
                        </div>
                        <div id="matchedSFAndNSRecords" class="slds-tabs_default__content slds-hide" role="tabpanel" aria-labelledby="matchedSalesforceAndNSRecords">
                            <apex:outputPanel layout="block" id="mItemsAndProducts" styleClass="slds-p-right_small slds-p-left_small " >
                                <apex:outputPanel layout="block" id="matchedSFPAndNSIMsgSec" rendered="{!showMessages}">
                                    <apex:pagemessages rendered="{!NOT(isBackgroundjobRunning)}"/>
                                    <apex:outputPanel rendered="{!isBackgroundjobRunning}">
                                        <apex:pageMessage severity="INFO" strength="2" summary="NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} import is in progress." escape="false" />
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!noRecordsInSF}" >
                                        <apex:pageMessage severity="INFO" strength="2" summary="<b>Import NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} into Salesforce<b/>" escape="false" >
                                            <p><apex:outputText value="There are no NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} exist in Salesforce. It appears that your Import NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Leves', 'Items')} background job has failed or there are no {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Itemm')} in NetSuite. If there are {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} in NetSuite, please"/><apex:commandLink rel="noopener noreferrer" styleClass="restartLink" value=" restart the NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} Sync" action="{!restartHistoricalNSRecordsSync}" reRender="matchedSFPAndNSIMsgSec" status="action-status" oncomplete="message();" id="matchedSFPAndNSIRestartSync" />.</p>
                                        </apex:pageMessage>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="block" rendered="{!AND(isProductMatchComplete, NOT(noRecordsInSF))}">
                                        <apex:pageMessage severity="INFO" strength="2" summary="There are no NetSuite {!CASE(operationName, 'Products', 'Items', 'PriceBooks', 'Price Levels', 'Item Prices')} that have been matched with Salesforce {!CASE(operationName, 'Products', 'Products', 'PriceBooks', 'Price Books', 'Price Book Entries')}." escape="false" />
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <div id="MatchedSFRecordsAndNSRecordsContent">
                                    <apex:pagemessages id="matchedSFPAndNSIPageMsg"/>
                                    <apex:outputPanel layout="block" id="MatchedContentPanel">
                                        <div class="slds-m-horizontal_medium">
                                            <apex:outputPanel rendered="{!matchedNSRecordIdList.size > 0}">
                                                <div class="slds-grid slds-wrap ">
                                                    <div class="slds-m-top_large slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13 slds-text-align_center">
                                                        <div class="slds-text-heading_medium"><apex:outputText value="Matched {!salesforceObjectName} Details in Salesforce" /></div>
                                                    </div>
                                                    <div class="slds-m-top_large slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13 slds-col_bump-left slds-text-align_center">
                                                        <div class="slds-text-heading_medium"><apex:outputText value="Matched {!netsuiteObjectName} Details in NetSuite" /></div>
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                            <div class="slds-m-top_small">
                                                <apex:repeat value="{!matchedNSRecordIdList}" var="refId" rendered="{!matchedNSRecordIdList.size > 0}">
                                                    <apex:variable var="NSItem" value="{!mapMatchedNSRecordIdAndRecord[refId]}"/>
                                                    <div class="slds-grid slds-wrap slds-has-dividers_around-space slds-grid_vertical-stretch">
                                                        <div valign="top" class="slds-col slds-grid slds-wrap slds-box slds-m-top_small slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13">
                                                            <apex:repeat value="{!mapMatchedNSRecordIdAndSFRecord[refId]}" var="SFProduct" rendered="{!matchedNSRecordIdList.size > 0}">
                                                                <div class="slds-col slds-p-top_xx-small slds-p-bottom_xx-small slds-tile slds-size_1-of-1 slds-p-horizontal_medium">
                                                                    <apex:outputPanel layout="block">
                                                                        <div class="NSProductMatch slds-tile__detail">
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap">
                                                                                <dt class="slds-item_label">Name:</dt>
                                                                                <dd class="slds-item_detail"><apex:outputText value=" {!SFProduct.Name}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='Products'}">
                                                                                <dt class="slds-item_label" style="white-space: nowrap;">Product Code:</dt>
                                                                                <dd class="slds-item_detail"><apex:outputText value="{!SFProduct.ProductCode}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap">
                                                                                <dt class="slds-item_label">Is Active:</dt>
                                                                                <dd class="slds-item_detail"><apex:outputText value="{!IF(SFProduct.IsActive == NULL, '', IF(SFProduct.IsActive == true, 'Yes', 'No'))}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                                <dt class="slds-item_label" style="white-space: nowrap;">Product:</dt>
                                                                                <dd class="slds-item_detail"><apex:outputText value="{!SFProduct.Product}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                                <dt class="slds-item_label" style="white-space: nowrap;">Price Book:</dt>
                                                                                <dd class="slds-item_detail"><apex:outputText value="{!SFProduct.Pricebook}" /></dd>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                                <dt class="slds-item_label" style="white-space: nowrap;">List Price:</dt>
                                                                                <dd class="slds-item_detail"><apex:outputText value="{!SFProduct.ListPrice}" /></dd>
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                </div>
                                                            </apex:repeat>
                                                        </div>
                                                        <div class="slds-col slds-p-top_small slds-size_1-of-1 slds-medium-size_1-of-7 slds-large-size_1-of-13 slds-align-middle">
                                                            <div class="arrowCell slds-text-align_center" width="10%">
                                                                <span class="arrow">&#10140;</span>
                                                            </div>
                                                        </div>
                                                        <div valign="top" class="slds-col slds-grid slds-wrap slds-box slds-m-top_small slds-size_1-of-1 slds-medium-size_3-of-7 slds-large-size_6-of-13">
                                                            <div class="slds-col slds-p-top_xx-small slds-p-bottom_xx-small slds-tile slds-size_1-of-1 slds-p-horizontal_medium">
                                                                <apex:outputPanel layout="block">
                                                                    <div class="NSProductMatch slds-tile__detail">
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap">
                                                                            <dt class="slds-item_label">Name:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value=" {!NSItem.Name}" /></dd>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='Products'}">
                                                                            <dt class="slds-item_label" style="white-space: nowrap;">Display Name:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value="{!NSItem.DisplayName}" /></dd>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='Products'}">
                                                                            <dt class="slds-item_label">Type:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value="{!NSItem.Type}" /></dd>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                            <dt class="slds-item_label">Item:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value="{!NSItem.ItemName}" /></dd>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                            <dt class="slds-item_label">Price Level:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value="{!NSItem.PriceLevelName}" /></dd>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName='PriceBookEntries'}">
                                                                            <dt class="slds-item_label">Value 01:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value="{!NSItem.UnitPrice}" /></dd>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel styleClass="slds-list_horizontal slds-wrap" rendered="{!operationName!='PriceBookEntries'}">
                                                                            <dt class="slds-item_label">Is Active:</dt>
                                                                            <dd class="slds-item_detail"><apex:outputText value="{!IF(NSItem.isInactive, 'No', 'Yes')}"/></dd>
                                                                        </apex:outputPanel>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </apex:repeat>
                                            </div>
                                            <apex:outputPanel layout="block" id="matchedSFPAndNSIButtonSec" styleClass="slds-p-top_large slds-m-bottom_small slds-align_absolute-center">
                                                <apex:commandButton id="matchedSFPAndNSINextButton" value="Next" action="{!queryMatchedSFAndNSRecords}" styleClass="slds-button slds-button_brand" status="action-status-pm" oncomplete="window.scrollTo(0,0);" rendered="{!matchedSFRecordIdList.size > 0}" disabled="{!matchedSFRecordIdList.size < 100}" reRender="mItemsAndProducts,MatchedContentPanel" />
                                            </apex:outputPanel>
                                        </div>
                                    </apex:outputPanel>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!NOT(bsWrapper.active)}">
                        <div class="slds-m-top_small slds-m-horizontal_small">
                            <apex:pageMessage summary="Your trial/subscription has expired" detail="You must have a valid subscription to Breadwinner to use the Product Match. Please Contact Breadwinner Support." severity="Warning" strength="3"/>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!AND(AND(operationName!='PriceBooks',operationName!='PriceBookEntries'),AND(hasItemSyncInformation,OR(objectNameAndOrgSyncStatus['Item']=='Inactive',objectNameAndOrgSyncStatus['Item']=='Not Configured')))}">
                        <div class="slds-m-top_small slds-m-horizontal_small">
                            <apex:pageMessage summary="NetSuite Item sync is disabled in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to enable it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" severity="Warning" strength="3" rendered="{!objectNameAndOrgSyncStatus['Item']=='Inactive'}"/>
                            <apex:pageMessage summary="NetSuite Item sync is not configured in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" severity="Warning" strength="3" rendered="{!objectNameAndOrgSyncStatus['Item']=='Not Configured'}"/>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!AND(operationName!='Products',AND(HasPriceLevelSyncInformation,OR(objectNameAndOrgSyncStatus['PriceLevel']=='Inactive',objectNameAndOrgSyncStatus['PriceLevel']=='Not Configured')))}">
                        <div class="slds-m-top_small slds-m-horizontal_small">
                            <apex:pageMessage summary="NetSuite Price and Price Level sync is disabled in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to enable it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" severity="Warning" strength="3" rendered="{!objectNameAndOrgSyncStatus['PriceLevel']=='Inactive'}"/>
                            <apex:pageMessage summary="NetSuite Price and Price Level sync is not configured in Breadwinner. To perform this operation, {!IF(isBreadwinnerAdministrator,'you need to configure it in the NetSuite Object Sync Settings from Setup.','please contact your system administrator.')}" severity="Warning" strength="3" rendered="{!objectNameAndOrgSyncStatus['PriceLevel']=='Not Configured'}"/>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- Product Match Section Ends -->

            <!-- Expense Report Section Starts -->
            <div id="expenseReport" class="slds-hide" aria-labelledby="ExpenseReport">
                <c:PageHeader headerText="Enter Expense Report" svgName="/icons/standard-sprite/svg/symbols.svg#report" spanIconClasses="slds-icon-standard-report" />

                <apex:outputPanel layout="block" id="ExpenseReport-content" styleClass="slds-p-around_small">
                    <div class="message infoM3 pageMessageTextCls">
                        <span>
                            This feature needs to be enabled in your Salesforce Org.&nbsp;Please contact&nbsp;<apex:outputLink rel="noopener noreferrer" onclick="OpenContactSupportTab();" value="javascript:void(0);">Breadwinner Support</apex:outputLink>&nbsp;to enable this feature.
                        </span>
                    </div>
                    <apex:outputPanel layout="block" styleClass="expReportPageMsg">
                        <apex:pageMessages escape="false" ></apex:pageMessages>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" id="expenseReportMore" rendered="{!AND(FALSE,expReport.entity==NULL)}">
                        <apex:commandButton value="Enter More Expense Reports" onclick="refreshExpenseReportContent();" styleClass="slds-button slds-button_brand" reRender="none"/>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" id="expenseReportDetails" rendered="{!OR(TRUE,expReport.entity.InternalId!=NULL)}">
                        <apex:outputPanel layout="block" styleClass="slds-m-vertical_small">
                            <div class="slds-section slds-is-open slds-p-bottom_small">
                                <h3 class="slds-section__title slds-theme_shade">
                                    <span class="slds-truncate slds-p-horizontal_small" title="Primary Details">Primary Details</span>
                                </h3>
                                <div aria-hidden="false" class="slds-section__content slds-p-top_none slds-p-horizontal_small">
                                    <apex:outputPanel layout="block" styleClass="slds-grid slds-wrap slds-size_1-of-1">
                                        <apex:outputPanel layout="block" id="expEmployee" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label slds-p-right_none">Employee</span>
                                                <div class="slds-form-element__control" style="min-height:10px;">
                                                    <apex:outputtext value="{!expReport.entity.Name}"/>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" id="expCurrency" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label slds-p-right_none">Currency</span>
                                                <abbr class="slds-required" title="required">*</abbr>
                                                <div class="slds-form-element__control" style="min-height:10px;">
                                                    <apex:outputPanel styleClass="slds-select_container" layout="block" rendered="{!employeeCurrencyList.size>0}">
                                                    <apex:actionRegion >
                                                        <apex:selectList styleClass="slds-select" id="expCurrencyInternalId" value="{!expReport.expenseReportCurrency.internalId}" size="1">
                                                                <apex:selectOption itemLabel="" itemValue=""></apex:selectOption>
                                                                <apex:selectOptions value="{!employeeCurrencyList}"></apex:selectOptions>
                                                            </apex:selectList>
                                                        </apex:actionRegion>
                                                    </apex:outputPanel>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" id="expSubsidiary" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small" rendered="{!NOT(isSubsidiaryDisabledInNetSuite)}">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label slds-p-right_none">Subsidiary</span>
                                                <div class="slds-form-element__control">
                                                    <apex:outputtext value="{!expReport.subsidiary.Name}"/>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label slds-p-right_none">Date</span>
                                                <abbr class="slds-required" title="required">*</abbr>
                                                <div class="slds-form-element__control">
                                                    <apex:inputText id="expDate" label="Date" value="{!expReport.tranDate}" styleClass="slds-input dateInput" onfocus="DatePicker.pickDate(false, this , false);"/>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label">Purpose</span>
                                                <div class="slds-form-element__control">
                                                    <apex:inputText id="memo" value="{!expReport.memo}" styleClass="slds-input"/>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label">Due Date</span>
                                                <div class="slds-form-element__control">
                                                    <apex:inputText id="expDueDate" label="Due Date" value="{!expReport.dueDate}" styleClass="slds-input" onfocus="DatePicker.pickDate(false, this , false);"/>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" styleClass="slds-col_padded slds-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-2 slds-m-top_small">
                                            <div class="slds-form-element slds-large-size_1-of-2">
                                                <span class="slds-form-element__label">Advance to Apply</span>
                                                <div class="slds-form-element__control">
                                                    <apex:inputText id="expAdvance" label="Advance To apply" value="{!expReport.advance}" styleClass="slds-input" html-autofocus="false" onblur="validateInput(this.value,'Advance',this.id,'Number',0);">
                                                        <apex:actionSupport event="onchange" reRender="nothing" oncomplete="refreshTotalAmounts();"/>
                                                    </apex:inputText>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </div>
                            </div>
                            <apex:actionFunction name="refreshTotalAmounts" id="refreshTotalAmounts" reRender="expTotalColumn,expAmountColumn,advanceColumn"/>
                            <div class="slds-section slds-is-open">
                                <h3 class="slds-section__title slds-theme_shade slds-m-vertical_small">
                                    <span class="slds-truncate slds-p-horizontal_small" title="Primary Details">Expenses</span>
                                </h3>
                                <div aria-hidden="false" class="slds-section__content slds-p-horizontal_small">
                                    <apex:outputPanel id="expLineItemSection">
                                        <apex:dataTable value="{!expenseLineItems}" var="exp" id="expenseTable" styleClass="expenseTableClass slds-table slds-table_bordered slds-max-medium-table_stacked-horizontal slds-table_col-bordered slds-border_right slds-border_left slds-m-bottom_small">
                                            <apex:column id="expRefNoColumn"  headervalue="Ref No." html-data-label="Ref No." styleClass="expRefColumnClass">
                                                <apex:inputText value="{!exp.refNumber}" id="expRefNo" styleClass="slds-input"/>
                                            </apex:column>
                                            <apex:column id="expenseDateColumn" headervalue="Date" html-data-label="Date" styleClass="expDateColumnClass">
                                                <apex:inputText value="{!exp.expenseDate}" id="ExpenseDate" styleClass="slds-input" onfocus="DatePicker.pickDate(false, this , false);"/>
                                            </apex:column>
                                            <apex:column id="expCategoryColumn" styleClass="expCategoryColumnClass" headervalue="Category" html-data-label="Category">
                                                <div class="slds-select_container">
                                                    <apex:actionRegion >
                                                        <apex:selectList styleClass="slds-select select2" id="categoryId" value="{!exp.categoryInternalId}" size="1">
                                                            <apex:selectOption itemLabel="" itemValue=""></apex:selectOption>
                                                            <apex:selectOptions value="{!ActiveExpenseCategories}"></apex:selectOptions>
                                                            <apex:actionSupport event="onchange" reRender="expLineItemSection,expTotalColumn,expAmountColumn" status="action-status" action="{!refreshExpenseRow}" oncomplete="initSelect2();">
                                                                <apex:param name="srNo" value="{!exp.liSrNo}" assignTo="{!srNo}" />
                                                            </apex:actionSupport>
                                                        </apex:selectList>
                                                    </apex:actionRegion>
                                                </div>
                                            </apex:column>
                                            <apex:column id="quantityColumn"  styleClass="quantityColumnClass" headervalue="Quantity" html-data-label="Quantity" rendered="{!IF(expReport.showExpRateColumns,TRUE,FALSE)}">
                                                <apex:inputText value="{!exp.quantity}" id="quantity" styleClass="slds-input slds-text-align_right" disabled="{!NOT(exp.isRateEnabled)}"  onblur="validateInput(this.value,'Quantity',this.id,'Number',0);">
                                                    <apex:actionSupport event="onchange" reRender="amount,expTotalColumn,expAmountColumn"/>
                                                </apex:inputText>
                                            </apex:column>
                                            <apex:column id="rateColumn" styleClass="rateColumnClass" headervalue="Rate" html-data-label="Rate" rendered="{!IF(expReport.showExpRateColumns,TRUE,FALSE)}">
                                                <apex:inputText value="{!exp.rate}" id="rate" styleClass="slds-input slds-text-align_right" disabled="{!NOT(exp.isRateEnabled)}"  onblur="validateInput(this.value,'Rate',this.id,'Number',0);">
                                                    <apex:actionSupport event="onchange" reRender="amount,expTotalColumn,expAmountColumn"/>
                                                </apex:inputText>
                                            </apex:column>
                                            <apex:column id="amountColumn" headervalue="Amount" html-data-label="Amount" styleClass="slds-text-align_right amountColumnClass">
                                                <apex:outputText id="amount" value="{!IF(NOT(ISNULL(exp.amount)),exp.amount,'')}" rendered="{!IF(exp.isRateEnabled,TRUE,FALSE)}" />
                                                <apex:inputText value="{!exp.amount}" id="expAmount" styleClass="slds-input slds-text-align_right" rendered="{!IF(exp.isRateEnabled,FALSE,TRUE)}"  onblur="validateInput(this.value,'Amount',this.id,'Number',0);">
                                                    <apex:actionSupport event="onchange" reRender="expTotalColumn,expAmountColumn"/>
                                                </apex:inputText>
                                            </apex:column>
                                            <apex:column id="memoColumn" headervalue="Memo" styleClass="memoColumnClass" html-data-label="Memo">
                                                <apex:inputText value="{!exp.memo}" id="ExpMemo" styleClass="slds-input"/>
                                            </apex:column>
                                            <apex:column headervalue="" style="text-align:center;" styleClass="DeleteColumnClass">
                                                <apex:image id="removeItem" value="{!URLFOR($Resource.breadwinner_ns__Breadwinner_for_NetSuite, 'Breadwinner/Images/delete.png')}" style="cursor: pointer;width:30px;" onclick="removeExpLine({!exp.liSrNo});"/>
                                            </apex:column>
                                        </apex:dataTable>
                                    </apex:outputPanel>
                                    <apex:actionFunction name="removeExpLine" action="{!removeExpFromExpList}" status="action-status" rerender="expLineItemSection,amounts" oncomplete="initSelect2();">
                                        <apex:param name="srNo" value="" assignTo="{!srNo}" />
                                    </apex:actionFunction>
                                    <div class="slds-m-top_medium">
                                        <apex:commandLink rel="noopener noreferrer" id="addMoreLineItems" value="Add more" style="text-decoration: underline;" action="{!addMoreExpenseLines}" status="action-status" reRender="expLineItemSection" oncomplete="initSelect2();"/>
                                    </div>
                                    <div class="slds-grid slds-grid_reverse">
                                        <apex:outputPanel styleClass="slds-grid slds-grid_vertical slds-size_1-of-1 slds-medium-size_4-of-6 slds-large-size_6-of-12 slds-float_right" id="amounts">
                                            <apex:outputPanel id="expTotalColumn" styleClass="slds-col slds-text-align_right slds-grid">
                                                <label class="slds-form-element__label slds-size_5-of-6 slds-p-top_none" >Expense Total:</label>
                                                <apex:outputText id="expTotalColumnIn" styleClass="slds-size_1-of-6" value="{!expenseTotal}"/>
                                            </apex:outputPanel>
                                            <apex:outputPanel id="advanceColumn" styleClass="slds-col slds-text-align_right slds-p-top_small slds-size_1-of-1 slds-grid">
                                                <label class="slds-form-element__label slds-size_5-of-6 slds-p-top_none" >Advance To Apply:</label>
                                                <apex:outputText id="advanceColumnIn" styleClass="slds-size_1-of-6" value="{!expReport.advance}"/>
                                            </apex:outputPanel>
                                            <div styleClass="slds-col slds-size_1-of-1" align="right">
                                            <hr style="width: 80%;margin-top: 5px;margin-bottom: 5px;background-color: black;"/>
                                            </div>
                                            <apex:outputPanel id="expAmountColumn" styleClass="slds-col slds-text-align_right slds-size_1-of-1 slds-grid"  style="font-weight:500">
                                                <label class="slds-form-element__label slds-size_5-of-6" style="font-size:1.25rem;">Total Reimbursable Amount:</label>
                                                <apex:outputText id="expAmountColumnIn" styleClass="slds-form-element__label slds-size_1-of-6 slds-p-right_none" value="{!expenseAmount}" style="font-size:1.25rem;"/>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                    </div>
                                    <div align="right" class="slds-m-bottom_medium slds-m-top_large">
                                        <apex:commandButton id="CreateExpReport" value="Submit Expense Report for Approval" onclick="createExpenseReport('TRUE');" reRender="nothing" disabled="{!OR(TRUE,NOT(bsWrapper.activeMode),employeeCurrencyList.size==0,expReport.subsidiary.isInactive)}" styleClass="slds-button slds-button_brand slds-m-right_small">

                                        </apex:commandButton>
                                        <apex:commandButton id="draftCreateExpReport" value="Save Draft Expense Report" onclick="createExpenseReport('FALSE');" reRender="nothing" disabled="{!OR(TRUE,NOT(bsWrapper.activeMode),employeeCurrencyList.size==0,expReport.subsidiary.isInactive)}" styleClass="slds-button slds-button_brand"/>
                                    </div>
                                    <div align="right">
                                        <apex:outputLabel style="font-style:italic;font-weight:bold;font-size:16px" rendered="{!AND(FALSE,NOT(bsWrapper.activeMode))}">You are using Breadwinner in NetSuite Read Only Mode. While Breadwinner reads data from NetSuite, no changes will be made to NetSuite. NetSuite is in Read-Only mode and will not be altered in any way.</apex:outputLabel>
                                        <apex:outputLabel style="font-style:italic;font-weight:bold;font-size:16px">This feature needs to be enabled in your Salesforce Org.&nbsp;Please contact&nbsp;<apex:outputLink rel="noopener noreferrer" onclick="OpenContactSupportTab();" value="javascript:void(0);">Breadwinner Support</apex:outputLink>&nbsp;to enable this feature.</apex:outputLabel>
                                    </div>
                                </div>
                            </div>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <apex:actionFunction name="createExpenseReport" status="action-status" oncomplete="message();initSelect2();scrollWinToTop();" reRender="ExpenseReport-content">
                <apex:param name="expComplete" value="" assignTo="{!expReport.isComplete}" />
            </apex:actionFunction>
            <!-- Expense Report Section Ends -->

            <!-- Expense Report Approval Section Starts -->
            <div id="approveExpenseReport" class="slds-hide" aria-labelledby="ApproveExpenseReport">
                <c:PageHeader headerText="Approve Expense Report" svgName="/icons/standard-sprite/svg/symbols.svg#report" spanIconClasses="slds-icon-standard-report" />

                <apex:outputPanel layout="block" id="ApproveExpenseReport-content" styleClass="slds-p-around_small">
                    <div class="message infoM3 pageMessageTextCls">
                        <span>
                            This feature needs to be enabled in your Salesforce Org.&nbsp;Please contact&nbsp;<apex:outputLink rel="noopener noreferrer" onclick="OpenContactSupportTab();" value="javascript:void(0);">Breadwinner Support</apex:outputLink>&nbsp;to enable this feature.
                        </span>
                    </div>
                </apex:outputPanel>
            </div>
            <!-- Expense Report Approval Section Ends -->

            <!-- Purchase Request Section Starts -->
            <div id="enterPurchaseRequest" class="slds-hide" aria-labelledby="EnterPurchaseRequest">
                <c:PageHeader headerText="Enter Purchase Request" svgName="/icons/standard-sprite/svg/symbols.svg#report" spanIconClasses="slds-icon-standard-report" />

                <apex:outputPanel layout="block" id="EnterPurchaseRequest-content" styleClass="slds-p-around_small">
                    <div class="message infoM3 pageMessageTextCls">
                        <span>
                            This feature needs to be enabled in your Salesforce Org.&nbsp;Please contact&nbsp;<apex:outputLink rel="noopener noreferrer" onclick="OpenContactSupportTab();" value="javascript:void(0);">Breadwinner Support</apex:outputLink>&nbsp;to enable this feature.
                        </span>
                    </div>
                </apex:outputPanel>
            </div>
            <!-- Purchase Request Approval Section Ends -->

            <!-- Approve Purchase Request Section Starts -->
            <div id="approvePurchaseRequest" class="slds-hide" aria-labelledby="ApprovePurchaseRequest">
                <c:PageHeader headerText="Approve Purchase Request" svgName="/icons/standard-sprite/svg/symbols.svg#report" spanIconClasses="slds-icon-standard-report" />

                <apex:outputPanel layout="block" id="ApprovePurchaseRequest-content" styleClass="slds-p-around_small">
                    <div class="message infoM3 pageMessageTextCls">
                        <span>
                            This feature needs to be enabled in your Salesforce Org.&nbsp;Please contact&nbsp;<apex:outputLink rel="noopener noreferrer" onclick="OpenContactSupportTab();" value="javascript:void(0);">Breadwinner Support</apex:outputLink>&nbsp;to enable this feature.
                        </span>
                    </div>
                </apex:outputPanel>
            </div>
            <!-- Approve Purchase Request Approval Section Ends -->

            <!-- Report Builder Section Starts -->
            <div id="reportBuilder" class="slds-hide" aria-labelledby="ReportBuilder">
                <c:PageHeader headerText="Report Builder" svgName="/icons/standard-sprite/svg/symbols.svg#report" spanIconClasses="slds-icon-standard-report" />
                <apex:outputPanel layout="block" id="reportBuilder-content" styleClass="slds-p-around_small">
                    <apex:pageMessages id="buildReportPMMsg"/>
                    <h3 class="slds-section-title_divider slds-m-vertical_small" style="border-radius : 5px">NetSuite Inventory Reports</h3>
                    <div class="slds-m-around_medium">
                        Current Inventory Snapshot Report
                        <apex:outputText rendered="{!AND(NOT(ISBLANK(currentInvSnapshotReportId)),LEN(currentInvSnapshotReportId) > 0)}">:&nbsp;
                            <apex:outputLink rel="noopener noreferrer" value="/{!currentInvSnapshotReportId}" target="_blank" id="invReportView" style="text-decoration: underline;">View</apex:outputLink>
                            or&nbsp;
                            <apex:commandLink rel="noopener noreferrer" onclick="showHideModal('ReportBuildModal','ReportBuildBackdrop');" reRender="nothing" id="invReportRebuild" style="text-decoration: underline;">Rebuild</apex:commandLink>.
                        </apex:outputText>
                        <apex:outputPanel rendered="{!OR(ISBLANK(currentInvSnapshotReportId),LEN(currentInvSnapshotReportId) == 0)}">
                            <apex:commandButton id="currentInvSnapReportBuild" value="Build" action="{!buildReport}" status="action-status" reRender="reportBuilder-content,buildReportPMMsg" styleClass="slds-m-left_medium slds-button slds-button_brand" style="line-height : 1.5rem" oncomplete="message();"/>
                        </apex:outputPanel>
                    </div>
                </apex:outputPanel>
            </div>
            <div>
                <div class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog" id="ReportBuildModal">
                    <div class="slds-modal__container">
                        <div class="slds-modal__header">
                            <button id="ReportBuildModalCanBtn" class="slds-button slds-button_icon-inverse slds-modal__close" type="button" onclick="showHideModal('ReportBuildModal','ReportBuildBackdrop');">
                                <svg aria-hidden="true" class="slds-button__icon slds-button__icon_large" >
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#close')}" ></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </button>
                            <h2 class="slds-text-heading_medium">Report Builder</h2>
                        </div>
                        <div class="slds-modal__content slds-p-around_medium">
                            <div>
                                To rebuild this report, please click View and then either delete it, or change the report name to something else. Then, return to this page and click the Build button.
                            </div>
                            <div align="Center" class="slds-m-top_large">
                                <apex:commandButton id="reportBuildOkButton" styleClass="slds-button slds-button_brand executeOnEscape" value="OK" onclick="showHideModal('ReportBuildModal','ReportBuildBackdrop');" reRender="nothing">
                                </apex:commandButton>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="slds-backdrop" id="ReportBuildBackdrop"></div>
            </div>
            <!-- Report Builder Section Ends -->

            <!-- Permissions Section Stars -->
            <div id="Permissions-Section" class="slds-hide" aria-labelledby="Permissions">
                <c:PageHeader headerText="Breadwinner Permissions" svgName="/icons/action-sprite/svg/symbols.svg#user" spanIconClasses="slds-icon_container_circle slds-icon-standard-user" />
                <div class="slds-tabs_default">
                    <ul class="slds-tabs_default__nav" role="tablist">
                        <li class="slds-tabs_default__item slds-is-active" title="Overview" role="presentation">
                            <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Overview');" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="overview" id="overview__item">Overview</a>
                        </li>
                        <li class="slds-tabs_default__item slds-is-active" title="Admin" role="presentation">
                            <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Admin_User','Name ASC');" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="admin" id="admin__item">Admin</a>
                        </li>
                        <li class="slds-tabs_default__item" title="Operations" role="presentation">
                            <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Operations','Name ASC');" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="operations" id="operations__item">Operations</a>
                        </li>
                        <li class="slds-tabs_default__item" title="Standard" role="presentation">
                            <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Standard_User','Name ASC');" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="standard" id="standard__item">Standard</a>
                        </li>
                        <li class="slds-tabs_default__item" title="Read-Only" role="presentation">
                            <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Read_Only','Name ASC');" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="readonly" id="readonly__item">Read-Only</a>
                        </li>
                        <li class="slds-tabs_default__item" title="All Permission Sets" role="presentation">
                            <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('All_Permission_Sets','Name ASC');" rel="noopener noreferrer" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="all ps" id="all_ps__item">All Permission Sets</a>
                        </li>
                    </ul>
                    <apex:outputPanel id="psBlock" layout="block" styleClass="slds-m-around_medium">
                        <apex:outputPanel rendered="{!selectedPermissionSet=='Overview'}">
                            <p>Breadwinner provides four permission sets, for the four broad use cases your users might need.</p><br/>
                            <p>Users with the <b>Breadwinner Read Only Permission Set</b> can only view Breadwinner Data.
                                This will also allow a user to run reports on Breadwinner data, or to see all NetSuite Subsidiaries, Items, Customers and Transactions from the various tabs.
                                These users can also file Support cases in the Breadwinner tab, or view Knowledgebase Articles.</p><br/>
                            <p>The <b>Breadwinner Standard Permission Set</b> can see all data (just like <i>Read Only</i>) and also allows the creation of Sales Orders and NetSuite Customers,
                                and the editing of NetSuite Customers (such as updating the address of the NetSuite Customer).</p><br/>
                            <p>The <b>Breadwinner Operations Permission Set</b> is designed for power-users or finance team members.
                                Users with this permission set can do everything included with <i>Standard</i>, and can also match NetSuite Customers to Salesforce Accounts and can match NetSuite Items as Salesforce Products.
                                Users can also change which Salesforce Account a NetSuite Customer is associated with.</p><br/>
                            <p>Finally, the <b>Breadwinner Admin Permission Set</b> can perform all functions in Breadwinner, including connecting to and disconnecting from NetSuite Org, and setting the configuration of Breadwinner.</p><br/>
                            <p>Please be aware that any Salesforce User with the "Modify All Data" in their Salesforce Profile is treated as if they have the <i>Admin</i> permission set.
                                And, please be aware that if at the time of installation, Breadwinner was set to be available for "All Users" then all users will effectively have the <i>Standard</i> permission set unless their Profiles are additionally restricted on an object level.</p><br/>
                            <p>You can clone these permission sets to further modify them, but any custom permission sets will not be visible from this page. You will need to access those permission sets from Salesforce Setup.</p>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Admin_User'}">
                            <p>The following users have the Breadwinner Admin Permission Set. This allows for all activities in Breadwinner. Additionally, users with the Breadwinner Admin Permission Set are the only ones who can</p>
                            <br/>
                            <ul class="slds-list_dotted">
                                <li>Connect and Disconnect to NetSuite</li>
                                <li>Control the toggle for Read-Only-Mode / Active-Mode</li>
                                <li>Edit the Configuration Menu</li>
                                <li>Access and use the Troubleshooting Menu</li>
                                <li>View the Permissions tab</li>
                            </ul><br/>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Operations'}">
                            <p>The following users have the Breadwinner Operations Permission Set. Users with this permission set (or a higher permission set, such as the Admin Permission Set) can</p>
                            <br/>
                            <ul class="slds-list_dotted">
                                <li>Run the Account Match</li>
                                <li>Run the Product Match</li>
                                <li>Control the Sync Status of a NetSuite Company</li>
                                <li>View (read-only) the Configuration, Troubleshooting, and Permissions Menu</li>
                            </ul><br/>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Standard_User'}">
                            <p>The following users have the Breadwinner Standard Permission Set. Users with this permission set (or a higher permission set, such as the Admin or Operations Permission Set) can</p>
                            <br/>
                            <ul class="slds-list_dotted">
                                <li>Create Sales Orders</li>
                                <li>Create NetSuite Customers</li>
                                <li>Edit NetSuite Customers</li>
                                <li>Reparent NetSuite Customers</li>
                            </ul><br/>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Read_Only'}">
                            <p>The following users have the Breadwinner Read-Only Permission Set. Users with this permission set (or a higher permission set, such as the Admin, Operations, or Standard Permission Set) can</p>
                            <br/>
                            <ul class="slds-list_dotted">
                                <li>View all NetSuite data in Salesforce (though this can be further restricted through Profiles)</li>
                                <li>Access the Breadwinner Tab and use the Learn Menu section for the Knowledge-Base or to file a Support Request</li>
                            </ul><br/>
                        </apex:outputPanel>
                        <apex:outputPanel layout="block" id="psAssignedUsersTable">
                            <apex:dataTable value="{!psAssignedUsersList}" var="psUsers" styleclass="slds-table slds-no-row-hover slds-table_bordered slds-border_right slds-border_left slds-table_col-bordered topborder" rendered="{!AND(psAssignedUsersList.size>0,selectedPermissionSet!='Overview')}">
                                <apex:column value="{!psUsers.fullName}">
                                    <apex:facet name="header">
                                        <apex:commandLink rel="noopener noreferrer" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Full Name" status="action-status" reRender="psAssignedUsersTable" oncomplete="message();">
                                            <apex:outputPanel id="nameArrowDown" styleClass="nameColumnDown" rendered="{!AND(BEGINS(sortExpression,'Name'),sortExpression!='Name ASC')}">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                </svg>
                                            </apex:outputPanel>
                                            <apex:outputPanel id="nameArrowUP" styleClass="nameColumnUp" rendered="{!AND(BEGINS(sortExpression,'Name'),sortExpression=='Name ASC')}">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                </svg>
                                            </apex:outputPanel>
                                            <apex:param value="{!IF(sortExpression == 'Name ASC','Name DESC','Name ASC')}" name="se" assignTo="{!sortExpression}"></apex:param>
                                            <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                        </apex:commandLink>
                                    </apex:facet>
                                </apex:column>
                                <apex:column value="{!psUsers.userName}">
                                    <apex:facet name="header">
                                        <apex:commandLink rel="noopener noreferrer" id="unameColumn" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Username" status="action-status" reRender="psAssignedUsersTable" oncomplete="message();">
                                            <apex:outputPanel id="unameArrowDown" styleClass="unameColumnDown" rendered="{!AND(BEGINS(sortExpression,'Username'),sortExpression!='Username ASC')}">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                </svg>
                                            </apex:outputPanel>
                                            <apex:outputPanel id="unameArrowUP" styleClass="unameColumnUp" rendered="{!AND(BEGINS(sortExpression,'Username'),sortExpression=='Username ASC')}">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                </svg>
                                            </apex:outputPanel>
                                            <apex:param value="{!IF(sortExpression == 'Username ASC','Username DESC','Username ASC')}" name="se" assignTo="{!sortExpression}"></apex:param>
                                            <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                        </apex:commandLink>
                                    </apex:facet>
                                </apex:column>
                                <apex:column headerValue="Profile" html-data-label="Profile" value="{!psUsers.profileName}">
                                    <apex:facet name="header">
                                        <apex:commandLink rel="noopener noreferrer" id="profileColumn" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Profile" status="assign-action-status" reRender="psAssignedUsersTable" oncomplete="message();">
                                            <apex:outputPanel id="profileArrowDown" styleClass="profileColumnDown" rendered="{!AND(BEGINS(sortExpression,'Profile.Name'),sortExpression!='Profile.Name ASC')}">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                </svg>
                                            </apex:outputPanel>
                                            <apex:outputPanel id="profileArrowUP" styleClass="profileColumnUp" rendered="{!AND(BEGINS(sortExpression,'Profile.Name'),sortExpression=='Profile.Name ASC')}">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                </svg>
                                            </apex:outputPanel>
                                            <apex:param value="{!IF(sortExpression == 'Profile.Name ASC','Profile.Name DESC','Profile.Name ASC')}" name="dir" assignTo="{!sortExpression}"></apex:param>
                                            <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                        </apex:commandLink>
                                    </apex:facet>
                                </apex:column>
                                <apex:column headerValue="Admin" html-data-label="Admin" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                    <apex:inputCheckbox disabled="true" value="{!psUsers.adminPSAssigned}"/>
                                </apex:column>
                                <apex:column headerValue="Operations" html-data-label="Operations" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                    <apex:inputCheckbox disabled="true" value="{!psUsers.operationsPSAssigned}"/>
                                </apex:column>
                                <apex:column headerValue="Standard" html-data-label="Standard" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                    <apex:inputCheckbox disabled="true" value="{!psUsers.standardPSAssigned}"/>
                                </apex:column>
                                <apex:column headerValue="Read-Only" html-data-label="Read-Only" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                    <apex:inputCheckbox disabled="true" value="{!psUsers.readOnlyPSAssigned}"/>
                                </apex:column>
                            </apex:dataTable>
                        </apex:outputPanel>
                        <apex:outputPanel layout="block" styleClass="slds-m-top_medium slds-m-horizontal_medium" rendered="{!AND(selectedPermissionSet!='Overview',psAssignedUsersList.size<=0)}">
                            <div class="slds-align_absolute-center slds-border_top slds-border_bottom slds-p-top_small slds-p-bottom_small">
                                No Users have&nbsp;<apex:outputText value="{!IF(selectedPermissionSet=='All_Permission_Sets','Breadwinner Permission Sets','this Permission Set')}"/> assigned.
                            </div>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!AND(selectedPermissionSet!='',BEGINS(selectedPermissionSet,'Breadwinner_'))}">
                            <apex:outputPanel rendered="{!psAssignedUsersList.size==10}">
                                <p style="margin-top:8px;margin-left:3px;color:grey;">
                                    * Only the first 10 Users are displayed. To see all users, please visit the Salesforce Permission Set for&nbsp;<apex:outputText value="{!SUBSTITUTE(selectedPermissionSet,'_',' ')}"/>.
                                </p>
                            </apex:outputPanel><br/>
                            <apex:outputPanel rendered="{!OR(isAdministrator, canAssignPermissionSets)}">
                                <p>Please note that even when you assign the&nbsp;<apex:outputText value="{!SUBSTITUTE(selectedPermissionSet,'_',' ')}"/> permission set to a user, if the respective logged in user doesn't have access to check their permissions, Breadwinner would still treat them as users without the permission set.</p><br/>
                                You can&nbsp;<apex:outputLink rel="noopener noreferrer" rendered="{!NOT(isLightning)}" value="/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank" styleClass="GrayLinks">Add this Permission Set to a User</apex:outputLink>
                                <apex:outputLink rel="noopener noreferrer" rendered="{!isLightning}" value="/lightning/setup/PermSets/page?address=/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank" styleClass="GrayLinks">Add this Permission Set to a User</apex:outputLink>
                                <apex:outputPanel rendered="{!psAssignedUsersList.size>0}">
                                    or&nbsp;<apex:outputLink rel="noopener noreferrer" rendered="{!NOT(isLightning)}" value="/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank" styleClass="GrayLinks">Remove this Permission Set from a User</apex:outputLink>
                                    <apex:outputLink rel="noopener noreferrer" rendered="{!isLightning}" value="/lightning/setup/PermSets/page?address=/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank" styleClass="GrayLinks">Remove this Permission Set from a User</apex:outputLink>
                                </apex:outputPanel>.
                            </apex:outputPanel>
                        </apex:outputPanel>
                        <apex:outputPanel layout="block" id="modifyAllUsersSection" styleClass="slds-m-top_medium" rendered="{!AND(usersWithModifyAllPermissionList.size>0, selectedPermissionSet=='Breadwinner_Admin_User')}">
                            <div class="slds-panel__section slds-p-around_none">
                                <div class="slds-section slds-is-open">
                                    <h3 class="slds-section__title slds-theme_shade">
                                        <span class="slds-truncate slds-p-horizontal_xx-small">Salesforce Users with Modify All Data Permission Settings</span>
                                    </h3>
                                    <div class="slds-section__content">
                                        <p>While these users do not have a Breadwinner Permission Set, they have the permission to do everything, just like someone with a Breadwinner Admin Permission Set.</p><br/>
                                        <apex:dataTable value="{!usersWithModifyAllPermissionList}" var="mau" styleclass="slds-table slds-no-row-hover slds-table_bordered slds-border_right slds-border_left slds-table_col-bordered topborder">
                                            <apex:column value="{!mau.fullName}">
                                                <apex:facet name="header">
                                                    <apex:commandLink rel="noopener noreferrer" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Full Name" status="action-status" reRender="modifyAllUsersSection" oncomplete="message();">
                                                        <apex:outputPanel id="mauNameArrowDown" styleClass="mauNameColumnDown" rendered="{!AND(BEGINS(sortForModifyAllUsers,'Name'),sortForModifyAllUsers!='Name ASC')}">
                                                            <svg aria-hidden="true" class="slds-button__icon">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                            </svg>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel id="mauNameArrowUP" styleClass="mauNameColumnUp" rendered="{!AND(BEGINS(sortForModifyAllUsers,'Name'),sortForModifyAllUsers=='Name ASC')}">
                                                            <svg aria-hidden="true" class="slds-button__icon">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                            </svg>
                                                        </apex:outputPanel>
                                                        <apex:param value="{!IF(sortForModifyAllUsers == 'Name ASC','Name DESC','Name ASC')}" name="dir" assignTo="{!sortForModifyAllUsers}"></apex:param>
                                                        <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                    </apex:commandLink>
                                                </apex:facet>
                                            </apex:column>
                                            <apex:column value="{!mau.userName}">
                                                <apex:facet name="header">
                                                    <apex:commandLink rel="noopener noreferrer" id="mauUnameColumn" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Username"  status="action-status" reRender="modifyAllUsersSection" oncomplete="message();">
                                                        <apex:outputPanel id="mauUnameArrowDown" styleClass="mauUnameColumnDown" rendered="{!AND(BEGINS(sortForModifyAllUsers,'Username'),sortForModifyAllUsers!='Username ASC')}">
                                                            <svg aria-hidden="true" class="slds-button__icon">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                            </svg>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel id="mauUnameArrowUP" styleClass="mauUnameColumnUp" rendered="{!AND(BEGINS(sortForModifyAllUsers,'Username'),sortForModifyAllUsers=='Username ASC')}">
                                                            <svg aria-hidden="true" class="slds-button__icon">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                            </svg>
                                                        </apex:outputPanel>
                                                        <apex:param value="{!IF(sortForModifyAllUsers == 'Username ASC','Username DESC','Username ASC')}" name="dir" assignTo="{!sortForModifyAllUsers}"></apex:param>
                                                        <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                    </apex:commandLink>
                                                </apex:facet>
                                            </apex:column>
                                            <apex:column value="{!mau.profileName}">
                                                <apex:facet name="header">
                                                    <apex:commandLink rel="noopener noreferrer" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Profile" status="action-status" reRender="modifyAllUsersSection" oncomplete="message();">
                                                        <apex:outputPanel id="mauProfileArrowDown" styleClass="mauProfileColumnDown" rendered="
                                                        {!AND(BEGINS(sortForModifyAllUsers,'Profile.Name'),sortForModifyAllUsers!='Profile.Name ASC')}">
                                                            <svg aria-hidden="true" class="slds-button__icon">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                            </svg>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel id="mauProfileArrowUP" styleClass="mauProfileColumnUp" rendered="{!AND(BEGINS(sortForModifyAllUsers,'Profile.Name'),sortForModifyAllUsers=='Profile.Name ASC')}">
                                                            <svg aria-hidden="true" class="slds-button__icon">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" rel="noopener noreferrer" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                            </svg>
                                                        </apex:outputPanel>
                                                        <apex:param value="{!IF(sortForModifyAllUsers=='Profile.Name ASC','Profile.Name DESC','Profile.Name ASC')}" name="dir" assignTo="{!sortForModifyAllUsers}"></apex:param>
                                                        <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                    </apex:commandLink>
                                                </apex:facet>
                                            </apex:column>
                                        </apex:dataTable>
                                    </div>
                                </div>
                            </div>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </div>
                <apex:actionFunction name="queryPSAssignedUsers" action="{!queryPermissionSetAssignedUsers}" status="action-status" reRender="psBlock" oncomplete="message();">
                    <apex:param name="selectedPermissionSetParam" value="" assignTo="{!selectedPermissionSet}"/>
                    <apex:param name="sortExpression" value="Name ASC" assignTo="{!sortExpression}"/>
                    <apex:param name="sortForModifyAllUsers" value="Name ASC" assignTo="{!sortForModifyAllUsers}"/>
                </apex:actionFunction>
                <script type="text/javascript">
                    function permissionSetSelectTab(elmnt){
                        // slds-is-active
                        j$(elmnt).parent("li").siblings(".slds-is-active").removeClass("slds-is-active");
                        j$(elmnt).parent("li").addClass("slds-is-active");

                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);

                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);
                    }

                    j$('.slds-tabs--default__link,.slds-tabs--scoped__link').click(function(){
                    j$(this).parent().parent().find('.slds-tabs--default__link,.slds-tabs--scoped__link').attr('aria-selected','false');
                    j$(this).attr('aria-selected','true');
                    j$(this).parent().parent().find('.slds-tabs--default__link,.slds-tabs--scoped__link').attr('tabindex','-1');
                    j$(this).attr('tabindex','0');
                    j$(this).parent().addClass('slds-active').siblings().removeClass('slds-active');
                    j$(this).parent().parent().parent().find('.'+j$(this).parent().parent().parent().find('.slds-tabs--default__content,.slds-tabs--scoped__content')[0].classList[0]).removeClass('slds-show').addClass('slds-hide');
                    j$(this).parent().parent().parent().find('#'+j$(this).attr('aria-controls')).removeClass('slds-hide').addClass('slds-show');
                });
                </script>
            </div>
            <!-- Permissions Section Ends -->
            <!-- Apex Generator Section Starts -->
            <div id="" class="slds-hide" role="tabpanel" aria-labelledby="ApexGenerator">
                <apex:includeScript value="/lightning/lightning.out.js" />

                <div id="CustomApexGeneratorId" class="slds-scope" />


                <script>
                function loadApexGenerator(){
                    j$("#CustomApexGeneratorId").empty();
                    try{
                        showspinner();
                        document.getElementById("CustomApexGeneratorId").innerHTML = "";
                        $Lightning.use("{!JSENCODE(If(namespace!= '', namespace, 'c'))}:lightningOutUnstyled", function() {
                            $Lightning.createComponent("{!JSENCODE(If(namespace!= '', namespace, 'c'))}:customApexGeneratorStep1",
                                                    {},
                                                    "CustomApexGeneratorId",
                                                    function(cmp) {
                                                        console.log('Component created');
                                                        hidespinner();
                                                    });
                        });

                        }catch(ex){
                            console.log('Exception while loading the Component: ',ex.message);
                            hidespinner();
                        }
                        }

                window.addEventListener('message', (event) => {
                                    if(event.data === 'reloadApexGenerator'){
                                        loadApexGenerator();
                                        window.scrollTo({
                                            top: 0,
                                            behavior: 'smooth'
                                        });
                                        console.log('Apex Generator reloaded on Start Over click');
                                    } else if(event.data === 'ScrollApexGeneratorToBottom'){
                                        var scrlHeight =  parseInt(document.getElementById("CustomApexGeneratorId").scrollHeight)-400;
                                        setTimeout(window.scrollTo({
                                            top: scrlHeight,
                                            behavior: 'smooth'
                                        }), 500);
                                    }
                                },false);
                            </script>
            </div>
            <!-- Apex Generator Section Ends -->

            <script type="text/javascript">
                function checkErrorMsg(tabName){
                    console.log('$$$$Within CheckErrorMsg Method'+'+++'+j$('.errorMsg'));
                    var errorDiv = j$('.errorMsg');
                    if(typeof errorDiv != "undefined" && typeof j$('.errorMsg')[0] != "undefined"){
                        console.log('$$$$$Error Meggase==>'+j$('.errorMsg')[0].innerHTML);
                        var position = j$('.errorMsg').position();
                        window.scroll(position.left,position.top) ;
                    }
                    else{
                        console.log('Error Not Found everything is OK');
                        submitAndNextJS(tabName);
                        if(tabName == 'UnmatchedSFProducts') submitSFRecordsAndNext();
                        else if(tabName == 'UnmatchedNSItems') finalSubmitANDNext();
                    }
                }

                function submitAndNextJS(tabName){
                    var jsonActions = JSON.stringify(mapNSItemIdAndAction);
                    console.log('######'+jsonActions);
                    if(tabName == 'UnmatchedSFProducts') {
                        document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.unmatchedSFPJsonOfActionsId)}').value = jsonActions;
                    } else if(tabName == 'UnmatchedNSItems')  {
                        document.getElementById('{!JSENCODE($Component.page.menuComponents.MenuContainerPage.MenuForm.jsonOfActionsId)}').value = jsonActions;
                    }
                }

                function pushToMapNSItemIdAndAction(key, value, tabName){
                    mapNSItemIdAndAction[key] = value;
                    console.log(''+value);
                    UpdateInfo(tabName);
                }

                function checkRadioButtonForManualMatch(manualMatchRadioButtonId){
                    document.getElementById(manualMatchRadioButtonId).checked = true;
                }

                function clearManualMatchOnSelectingOther(key){
                    var mappingSpanId = key+'-mm-lookup';
                    try{
                        var mappingSpanEle = document.getElementById(mappingSpanId);
                        if(mapNSItemIdAndAction[key]==='manualMatch'){
                            console.log(mappingSpanEle.getElementsByClassName("lookupInput")[0].children[0].value);
                            mappingSpanEle.getElementsByClassName("lookupInput")[0].children[0].value = '';
                        }
                    }
                    catch(Error){
                        console.log(Error);
                    }
                }

                function changePBSyncSettings(){
                    if(j$('[id$=nsProductsSyncSelectList]').val()=='Do Not Create' || j$('[id$=nsProductsSyncSelectList]').val()==='') j$('[id$=nsPBEsSyncSelectList]').val('')
                }
				function validateSyncInterval(inputValue, elementid){
					const syncValue = parseInt(inputValue);
					if (syncValue.toString() !== inputValue || syncValue < 5 || syncValue > 1440){
						document.getElementById(elementid).style.borderColor = 'Red';
                        document.getElementById('alert_popup_heading').textContent = 'Sync Interval';
						document.getElementById('alert_popup_text').textContent = 'Sync Interval must be a number between 5 and 1440 minutes (24 hours)';
						showHideModal('alert_popup','alert_backdrop');
    				}
					else{
						document.getElementById('' + elementid).style.borderColor = '';
					}
				}
                function validateConcurrentLimit(inputValue, elementid){
					const syncValue = parseInt(inputValue);
					if (syncValue.toString() !== inputValue || syncValue < 1 || syncValue > 10){
						document.getElementById(elementid).style.borderColor = 'Red';
                        document.getElementById('alert_popup_heading').textContent = 'Concurrent Limit';
                        var message = 'Concurrent Limit must be a number between 1 and 10. ';
                        if(syncValue > 10){
                            message += 'For any value greater than 10, please contact Breadwinner Support.';
                        }
						document.getElementById('alert_popup_text').textContent = message;
						showHideModal('alert_popup','alert_backdrop');
    				}
					else{
						document.getElementById('' + elementid).style.borderColor = '';
					}
				}
            </script>
        </apex:form>
    </html>
</apex:page>